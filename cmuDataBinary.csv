id,prereqClass,textContent
1 , 1 , princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection automation biological research  robotics machine learning need automated learning biology motivating examples established active learning applications  review statistics machine learning   review passive classification  active classification  myopic active learning algorithms  data access models paper  biological applications active classification paper  biological applications active classification  active semi supervised learning  missing value imputation  laboratory automation high content screening high content screening data analysis  laboratory automation gene sequencing gene sequencing data analysis recitation worksheet laboratory automation using microfluidic devices biological applications active learning biological applications active learning biological applications active learning biological applications active learning advanced active learning topics biological applications active learning biological applications active learning
 2 , 0 , automation biological research  robotics machine learning need automated learning biology motivating examples established active learning applications  review statistics machine learning   review passive classification  active classification  myopic active learning algorithms  data access models paper  biological applications active classification paper  biological applications active classification  active semi supervised learning  missing value imputation  laboratory automation high content screening high content screening data analysis  laboratory automation gene sequencing gene sequencing data analysis recitation worksheet laboratory automation using microfluidic devices biological applications active learning biological applications active learning biological applications active learning biological applications active learning advanced active learning topics biological applications active learning biological applications active learning princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection
 3 , 1 , princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection machine learning overview learning concept learning  version spaces  inductive bias tutorial information theory decision trees  overfitting  occam razor review probability theory  linear regression neural networks review statistical estimation hypothesis testing machine learning bayesian learning  map ml  bayes optimal classifiers  gibbs sampling  mdl naive bayes graphical models spring carnival by dr  drew bagnell imitation learning hmm  em minimum description length  instance based learning  knn  locally weighted regression kernel based methods  maximum margin classifiers  bagging  boosting
 4 , 0 , machine learning overview learning concept learning  version spaces  inductive bias tutorial information theory decision trees  overfitting  occam razor review probability theory  linear regression neural networks review statistical estimation hypothesis testing machine learning bayesian learning  map ml  bayes optimal classifiers  gibbs sampling  mdl naive bayes graphical models spring carnival by dr  drew bagnell imitation learning hmm  em minimum description length  instance based learning  knn  locally weighted regression kernel based methods  maximum margin classifiers  bagging  boosting princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection
 5 , 1 , princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection computer music systems information processing course overview syllabus introduction  global network orchestra interactive music performance midi introduction midi standard serpent serpent midi api discrete event simulation events serpent scheduling algorithms active objects virtual time tempo logical  virtual  time systems tempo time maps formula programming language multiple nested logical time systems precise timing event buffers latency timed messages music theory algorithmic music composition markov models pitch sequences pitch + rhythm concurrencies music grammars algorithmic music composition pattern generators suffix trees clock synchronization open sound control laptop orchestras music networks audio concepts  samples  frames  blocks synchronous processing audio system organization global network orchestra performance concurrency real time static priority priority inversion music representation file formats  standard midi file format allegro file format symbolic notation operations scores  tempo change articulation timbre instrumentation transposition octave doubling parameter mapping hierarchical scores multiple hierarchies audio unit generator software organization music signal processing max family programming languages music automatic classifiers basic theory naive bayesian classifiers music classification music features symbolic acoustic music features key estimation chord recognition beat detection music robot linnstrument content based music information retrieval computer accompaniment audio alignment score following monophonic melodies polyphonic keyboard performance vocal performance using hmm models accompaniment synchronization human computer music performance
 6 , 0 , computer music systems information processing course overview syllabus introduction  global network orchestra interactive music performance midi introduction midi standard serpent serpent midi api discrete event simulation events serpent scheduling algorithms active objects virtual time tempo logical  virtual  time systems tempo time maps formula programming language multiple nested logical time systems precise timing event buffers latency timed messages music theory algorithmic music composition markov models pitch sequences pitch + rhythm concurrencies music grammars algorithmic music composition pattern generators suffix trees clock synchronization open sound control laptop orchestras music networks audio concepts  samples  frames  blocks synchronous processing audio system organization global network orchestra performance concurrency real time static priority priority inversion music representation file formats  standard midi file format allegro file format symbolic notation operations scores  tempo change articulation timbre instrumentation transposition octave doubling parameter mapping hierarchical scores multiple hierarchies audio unit generator software organization music signal processing max family programming languages music automatic classifiers basic theory naive bayesian classifiers music classification music features symbolic acoustic music features key estimation chord recognition beat detection music robot linnstrument content based music information retrieval computer accompaniment audio alignment score following monophonic melodies polyphonic keyboard performance vocal performance using hmm models accompaniment synchronization human computer music performance princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection
 7 , 1 , princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection artificial intelligence optimization 1  discrete heuristic  heuristic search  adding state  csps  application           classical planning               motion planning robotics             intro probability             bayes nets 1             bayes nets 2             optimization 2  stochastic continuous                data driven ai  probabilistic            data driven ai  instance based           data driven ai  regression classification            clustering               living your life no regret          computer vision          bandits          mdps             imitation learning               reinforcement learning 1                 reinforcement learning 2                 games 1  zero sum minimax theorem                games 2  general sum correlation             auction   voting                 multi agent planning             natural language processing              ai real world
 8 , 0 , artificial intelligence optimization 1  discrete heuristic  heuristic search  adding state  csps  application           classical planning               motion planning robotics             intro probability             bayes nets 1             bayes nets 2             optimization 2  stochastic continuous                data driven ai  probabilistic            data driven ai  instance based           data driven ai  regression classification            clustering               living your life no regret          computer vision          bandits          mdps             imitation learning               reinforcement learning 1                 reinforcement learning 2                 games 1  zero sum minimax theorem                games 2  general sum correlation             auction   voting                 multi agent planning             natural language processing              ai real world princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection
 9 , 1 , princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection robot kinematics dynamics  cs  foundations principles robotic kinematics  transformations  forward kinematics  inverse kinematics  differential kinematics  jacobians   manipulability  basic equations motion  course also include programming robot arms
 10 , 0 , robot kinematics dynamics  cs  foundations principles robotic kinematics  transformations  forward kinematics  inverse kinematics  differential kinematics  jacobians   manipulability  basic equations motion  course also include programming robot arms princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection
 11 , 1 , princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection computer vision image feature representation  introduction computer vision  image fourier representation  optics image formation  camera calibration  linear filters  laplacian pyramid  image blending  wavelets  principal component analysis  independent components   object scene recognition  simple features boosting  face detection cascades  pattern descriptors  sift hog    classification  svm knn   lda  linear discriminant   perceptual inference  optical flow  motion analysis  tracking  structure motion   shape shading  odometry pose estimation  active shape appearance model  scene recognition  coherent scene interpretation  segmentation  mrf  mean shift  graphcut   review  review hierarchy
 12 , 0 , computer vision image feature representation  introduction computer vision  image fourier representation  optics image formation  camera calibration  linear filters  laplacian pyramid  image blending  wavelets  principal component analysis  independent components   object scene recognition  simple features boosting  face detection cascades  pattern descriptors  sift hog    classification  svm knn   lda  linear discriminant   perceptual inference  optical flow  motion analysis  tracking  structure motion   shape shading  odometry pose estimation  active shape appearance model  scene recognition  coherent scene interpretation  segmentation  mrf  mean shift  graphcut   review  review hierarchy princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection
 13 , 1 , princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection bug catching overview model checking quick introduction logic propositional logic davis putnam procedure  fast sat solvers binary decision diagrams  bdds  property specification using computation tree logic ctl  linear temporal logic  ltl  ltl tableaux construction ltl model checking explicit state model checking partial order reduction symbolic model checking detailed introduction model checker smv detailed introduction model checker spin abstract interpretation predicate abstraction abstract refinement detailed introduction model checker cbmc compositional model checking probabilistic model checking statistical model checking
 14 , 0 , bug catching overview model checking quick introduction logic propositional logic davis putnam procedure  fast sat solvers binary decision diagrams  bdds  property specification using computation tree logic ctl  linear temporal logic  ltl  ltl tableaux construction ltl model checking explicit state model checking partial order reduction symbolic model checking detailed introduction model checker smv detailed introduction model checker spin abstract interpretation predicate abstraction abstract refinement detailed introduction model checker cbmc compositional model checking probabilistic model checking statistical model checking princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection
 15 , 1 , princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection foundations cyber physical systems cyber physical systems  introduction differential equations   domains ode  fol  quiz choice   control hp  syntax  semantics  example safety   contracts dynamical systems   dynamic axioms did you prove you meant prove  truth   proof control loops   invariants invariants proofs  jan  events   delays proofs   arithmetic events delays  stefan  differential equations   differential invariants differential equations   proofs differential invariants  khalil  stuff dynamic logic   dynamical systems differential invariants   proof theory mid semester break ghosts   differential ghosts trains   proofs differential   temporal logic differential   temporal proofs differential ghosts  differential invariants virtual substitution   real equations virtual substitution   real arithmetic safety motion  real arithmetic hybrid systems   games winning strategies   regions game examples winning   proving hybrid games game proofs   separations game proofs logical theory   completeness logical foundations cps
 16 , 0 , foundations cyber physical systems cyber physical systems  introduction differential equations   domains ode  fol  quiz choice   control hp  syntax  semantics  example safety   contracts dynamical systems   dynamic axioms did you prove you meant prove  truth   proof control loops   invariants invariants proofs  jan  events   delays proofs   arithmetic events delays  stefan  differential equations   differential invariants differential equations   proofs differential invariants  khalil  stuff dynamic logic   dynamical systems differential invariants   proof theory mid semester break ghosts   differential ghosts trains   proofs differential   temporal logic differential   temporal proofs differential ghosts  differential invariants virtual substitution   real equations virtual substitution   real arithmetic safety motion  real arithmetic hybrid systems   games winning strategies   regions game examples winning   proving hybrid games game proofs   separations game proofs logical theory   completeness logical foundations cps princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection
 17 , 1 , princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection parallel sequential data structures algorithms overview sequencing genome algorithmic cost models divide conquer data abstraction sequences  data abstraction sequences  collect single threaded sequences sets tables randomized algorithms quicksort graphs  graph representations  graph search shortest weighted paths  shortest weighted paths  graph contraction graph contraction binary search trees treaps binary search trees treaps ordered sets augmented trees dynamic programming dynamic programming hash tables  priority queues leftist heaps  other parallel languages
 18 , 0 , parallel sequential data structures algorithms overview sequencing genome algorithmic cost models divide conquer data abstraction sequences  data abstraction sequences  collect single threaded sequences sets tables randomized algorithms quicksort graphs  graph representations  graph search shortest weighted paths  shortest weighted paths  graph contraction graph contraction binary search trees treaps binary search trees treaps ordered sets augmented trees dynamic programming dynamic programming hash tables  priority queues leftist heaps  other parallel languages princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection
 19 , 1 , princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic
 20 , 0 , intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection
 21 , 1 , princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection speech processing human speech computer speech     asr  signal processing     asr  template matching     asr  hmms     asr  acoustic modeling     asr  language modeling     asr  systems     asr  language modeling 2     tts  text analysis     tts  pronunciation     tts  prosody     tts  waveform     tts  waveform     tts  voice building     tts  evaluation     tts  signal processing     tts  talking heads singing     multilingual speech processing     spice     speech speech translation     mid semester    no     speech speech translation     spoken dialog systems  intro     spoken dialog systems  components     spoken dialog systems  voicexml     spoken dialog systems  beyond simple dialogs  olympus intro     spoken dialog systems  olympus     spoken dialog systems  deployment     spoken dialog systems  personal digital assistants     spoken dialog systems  evaluation     voice conversion     speaker id     voice conversion deidentification     computer aided language learning     present future speech problems
 22 , 0 , speech processing human speech computer speech     asr  signal processing     asr  template matching     asr  hmms     asr  acoustic modeling     asr  language modeling     asr  systems     asr  language modeling 2     tts  text analysis     tts  pronunciation     tts  prosody     tts  waveform     tts  waveform     tts  voice building     tts  evaluation     tts  signal processing     tts  talking heads singing     multilingual speech processing     spice     speech speech translation     mid semester    no     speech speech translation     spoken dialog systems  intro     spoken dialog systems  components     spoken dialog systems  voicexml     spoken dialog systems  beyond simple dialogs  olympus intro     spoken dialog systems  olympus     spoken dialog systems  deployment     spoken dialog systems  personal digital assistants     spoken dialog systems  evaluation     voice conversion     speaker id     voice conversion deidentification     computer aided language learning     present future speech problems princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection
 23 , 1 , machine learning overview learning concept learning  version spaces  inductive bias tutorial information theory decision trees  overfitting  occam razor review probability theory  linear regression neural networks review statistical estimation hypothesis testing machine learning bayesian learning  map ml  bayes optimal classifiers  gibbs sampling  mdl naive bayes graphical models spring carnival by dr  drew bagnell imitation learning hmm  em minimum description length  instance based learning  knn  locally weighted regression kernel based methods  maximum margin classifiers  bagging  boosting machine translation probability review  language models  lexical translation models  lexical translation models  l 10  latin noisy channel translation  l 10  mandarin phrase based mt  l 10  russian phrase based mt  evaluation  evaluation  discriminative training  discriminative training  syntax mt  syntax mt  syntax decoding  decoding  synchronous parsing  large scale language modeling  lecturer  kenneth heafield  system combination  morphology mt  topics modeling  nizar habash talk  ghc 6105       example based mt      lecturer  ralf brown      mining parallel data      lecturer  wang ling      quality estimation      commercial mt      bitext++
 24 , 0 , machine translation probability review  language models  lexical translation models  lexical translation models  l 10  latin noisy channel translation  l 10  mandarin phrase based mt  l 10  russian phrase based mt  evaluation  evaluation  discriminative training  discriminative training  syntax mt  syntax mt  syntax decoding  decoding  synchronous parsing  large scale language modeling  lecturer  kenneth heafield  system combination  morphology mt  topics modeling  nizar habash talk  ghc 6105       example based mt      lecturer  ralf brown      mining parallel data      lecturer  wang ling      quality estimation      commercial mt      bitext++ machine learning overview learning concept learning  version spaces  inductive bias tutorial information theory decision trees  overfitting  occam razor review probability theory  linear regression neural networks review statistical estimation hypothesis testing machine learning bayesian learning  map ml  bayes optimal classifiers  gibbs sampling  mdl naive bayes graphical models spring carnival by dr  drew bagnell imitation learning hmm  em minimum description length  instance based learning  knn  locally weighted regression kernel based methods  maximum margin classifiers  bagging  boosting
 25 , 1 , princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection principles software construction recitation git + java warmup encapsulation  polymorphism  equality modules  inheritance recitation debugging java semantics inheritance  continued   typechecking  introduction behavioral contracts exceptional control flow  parametric polymorphism recitation object equality  self documenting code  refactoring specifications testing  unit testing  coverage  build test automation  recitation unit testing  build automation  continuous integration++ bug reporting  verification  static analysis introduction object oriented design recitation behavioral subtypes static analysis  object oriented analysis introduction design patterns recitation grasp + design patterns design goals assigning responsibilities recitation intro guis design case study  guis design case study  java collections recitation guis++ design case study  stream o design reuse  libraries   frameworks recitation design pattern mining design reuse  libraries   frameworks  continued  concurrency  part 1  recitation frameworks concurrency  part 2  recitation api design  concurrency  part 3  distributed system design  part 1  recitation concurrency distributed system design  part 2  recitation distributed systems distributed system design  part 3  distributed system design  part 4  recitation distributed systems  continued data consistency pagerank data consistency recitation map reduce problem solving software engineering beyond 15 214
 26 , 0 , principles software construction recitation git + java warmup encapsulation  polymorphism  equality modules  inheritance recitation debugging java semantics inheritance  continued   typechecking  introduction behavioral contracts exceptional control flow  parametric polymorphism recitation object equality  self documenting code  refactoring specifications testing  unit testing  coverage  build test automation  recitation unit testing  build automation  continuous integration++ bug reporting  verification  static analysis introduction object oriented design recitation behavioral subtypes static analysis  object oriented analysis introduction design patterns recitation grasp + design patterns design goals assigning responsibilities recitation intro guis design case study  guis design case study  java collections recitation guis++ design case study  stream o design reuse  libraries   frameworks recitation design pattern mining design reuse  libraries   frameworks  continued  concurrency  part 1  recitation frameworks concurrency  part 2  recitation api design  concurrency  part 3  distributed system design  part 1  recitation concurrency distributed system design  part 2  recitation distributed systems distributed system design  part 3  distributed system design  part 4  recitation distributed systems  continued data consistency pagerank data consistency recitation map reduce problem solving software engineering beyond 15 214 princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection
 27 , 1 , functional programming sml basics programming proving  numbers programming proving  lists asymptotic analysis sequential sorting parallel sorting polymorphism  specs checks  datatypes datatypes  functions arguments higher order functions tail recursion  continuations regular expression matching regular expression matching regular expression matching iii  staging exceptions cost semantics  sequences n body simulation modules  signatures  structures  type abstraction modules  dictionaries using type classes functors red black trees game game  io scheduling  parallelism effects parallelism effects mutation  persistent emphemeral data structures benign effects processes streams parallel sequential data structures algorithms overview sequencing genome algorithmic cost models divide conquer data abstraction sequences  data abstraction sequences  collect single threaded sequences sets tables randomized algorithms quicksort graphs  graph representations  graph search shortest weighted paths  shortest weighted paths  graph contraction graph contraction binary search trees treaps binary search trees treaps ordered sets augmented trees dynamic programming dynamic programming hash tables  priority queues leftist heaps  other parallel languages
 28 , 0 , parallel sequential data structures algorithms overview sequencing genome algorithmic cost models divide conquer data abstraction sequences  data abstraction sequences  collect single threaded sequences sets tables randomized algorithms quicksort graphs  graph representations  graph search shortest weighted paths  shortest weighted paths  graph contraction graph contraction binary search trees treaps binary search trees treaps ordered sets augmented trees dynamic programming dynamic programming hash tables  priority queues leftist heaps  other parallel languages functional programming sml basics programming proving  numbers programming proving  lists asymptotic analysis sequential sorting parallel sorting polymorphism  specs checks  datatypes datatypes  functions arguments higher order functions tail recursion  continuations regular expression matching regular expression matching regular expression matching iii  staging exceptions cost semantics  sequences n body simulation modules  signatures  structures  type abstraction modules  dictionaries using type classes functors red black trees game game  io scheduling  parallelism effects parallelism effects mutation  persistent emphemeral data structures benign effects processes streams
 29 , 1 , foundations programming languages introduction  programming language  rule induction  rule induction  binding  substitution dynamics  statics  safety abstract syntax de bruijn indices  functions gödel t pcf  substitution lemma  definability undefinability products sums products  sums  pattern matching  recursive types objects dynamic dispatch proof techniques  dynamic languages dynamic languages typed languages dynamic hybrid typing  church λ calculus modernized algol dynamic typing refinements  scoped assignables assignable references system f polymorphism polymorphism  representation independence  evaluation dynamics cost dynamics parallelism  nested data parallelism  control stacks  stacks  brent theorem  free assignables  monads futures speculations  call by need  communication π calculus concurent algol concurent algol  proofs programs judgments types dependently typed programming compiler design   instruction selection    register allocation    liveness analysis    dataflow analysis    static single assignment form    lexical analysis    context free grammars    predictive parsing    intermediate representation    calling conventions    static semantics    dynamic semantics    mutable store    structs    basic optimizations   loop optimizations    array bounds checking     memory optimizations     decompilation   garbage collection     incremental collection     low level virtual machine     polymorphism   session typed concurrency   code obfuscation        jit compilation
 30 , 0 , compiler design   instruction selection    register allocation    liveness analysis    dataflow analysis    static single assignment form    lexical analysis    context free grammars    predictive parsing    intermediate representation    calling conventions    static semantics    dynamic semantics    mutable store    structs    basic optimizations   loop optimizations    array bounds checking     memory optimizations     decompilation   garbage collection     incremental collection     low level virtual machine     polymorphism   session typed concurrency   code obfuscation        jit compilation foundations programming languages introduction  programming language  rule induction  rule induction  binding  substitution dynamics  statics  safety abstract syntax de bruijn indices  functions gödel t pcf  substitution lemma  definability undefinability products sums products  sums  pattern matching  recursive types objects dynamic dispatch proof techniques  dynamic languages dynamic languages typed languages dynamic hybrid typing  church λ calculus modernized algol dynamic typing refinements  scoped assignables assignable references system f polymorphism polymorphism  representation independence  evaluation dynamics cost dynamics parallelism  nested data parallelism  control stacks  stacks  brent theorem  free assignables  monads futures speculations  call by need  communication π calculus concurent algol concurent algol  proofs programs judgments types dependently typed programming
 31 , 1 , parallel sequential data structures algorithms overview sequencing genome algorithmic cost models divide conquer data abstraction sequences  data abstraction sequences  collect single threaded sequences sets tables randomized algorithms quicksort graphs  graph representations  graph search shortest weighted paths  shortest weighted paths  graph contraction graph contraction binary search trees treaps binary search trees treaps ordered sets augmented trees dynamic programming dynamic programming hash tables  priority queues leftist heaps  other parallel languages database db applications  readings      introduction  r g chapter             1   sample sqlite3 database  see                 readme txt file      entity relationship model     relational model     relational algebra     relational calculus     sql  query language part     sql  query language part     2 r g chapter 5   sql      part 3   app  development  r g chapter 6   code example     storing data disks      buffers  files     tree structured indexes     file organizations   indexing     hashing     sorting   query evaluation relational operators       relational operators continued  same foils  r g             chapter 12 14   review      query optimization  r g chapter 15 plus system r             optimizer   selinger paper     schema refinement normalization      schema refinement normalization              physical database design tuning  r g chapter 20      database design methodology  not book   methodology     transaction overview concurrency control     concurrency control part 2     concurrency control part 3     logging recovery part 1 logging recovery part 2     spatial data     data warehousing data mining distr  dbmss bonus multimedia db
 32 , 0 , database db applications  readings      introduction  r g chapter             1   sample sqlite3 database  see                 readme txt file      entity relationship model     relational model     relational algebra     relational calculus     sql  query language part     sql  query language part     2 r g chapter 5   sql      part 3   app  development  r g chapter 6   code example     storing data disks      buffers  files     tree structured indexes     file organizations   indexing     hashing     sorting   query evaluation relational operators       relational operators continued  same foils  r g             chapter 12 14   review      query optimization  r g chapter 15 plus system r             optimizer   selinger paper     schema refinement normalization      schema refinement normalization              physical database design tuning  r g chapter 20      database design methodology  not book   methodology     transaction overview concurrency control     concurrency control part 2     concurrency control part 3     logging recovery part 1 logging recovery part 2     spatial data     data warehousing data mining distr  dbmss bonus multimedia db parallel sequential data structures algorithms overview sequencing genome algorithmic cost models divide conquer data abstraction sequences  data abstraction sequences  collect single threaded sequences sets tables randomized algorithms quicksort graphs  graph representations  graph search shortest weighted paths  shortest weighted paths  graph contraction graph contraction binary search trees treaps binary search trees treaps ordered sets augmented trees dynamic programming dynamic programming hash tables  priority queues leftist heaps  other parallel languages
 33 , 1 , parallel sequential data structures algorithms overview sequencing genome algorithmic cost models divide conquer data abstraction sequences  data abstraction sequences  collect single threaded sequences sets tables randomized algorithms quicksort graphs  graph representations  graph search shortest weighted paths  shortest weighted paths  graph contraction graph contraction binary search trees treaps binary search trees treaps ordered sets augmented trees dynamic programming dynamic programming hash tables  priority queues leftist heaps  other parallel languages foundations programming languages introduction  programming language  rule induction  rule induction  binding  substitution dynamics  statics  safety abstract syntax de bruijn indices  functions gödel t pcf  substitution lemma  definability undefinability products sums products  sums  pattern matching  recursive types objects dynamic dispatch proof techniques  dynamic languages dynamic languages typed languages dynamic hybrid typing  church λ calculus modernized algol dynamic typing refinements  scoped assignables assignable references system f polymorphism polymorphism  representation independence  evaluation dynamics cost dynamics parallelism  nested data parallelism  control stacks  stacks  brent theorem  free assignables  monads futures speculations  call by need  communication π calculus concurent algol concurent algol  proofs programs judgments types dependently typed programming
 34 , 0 , foundations programming languages introduction  programming language  rule induction  rule induction  binding  substitution dynamics  statics  safety abstract syntax de bruijn indices  functions gödel t pcf  substitution lemma  definability undefinability products sums products  sums  pattern matching  recursive types objects dynamic dispatch proof techniques  dynamic languages dynamic languages typed languages dynamic hybrid typing  church λ calculus modernized algol dynamic typing refinements  scoped assignables assignable references system f polymorphism polymorphism  representation independence  evaluation dynamics cost dynamics parallelism  nested data parallelism  control stacks  stacks  brent theorem  free assignables  monads futures speculations  call by need  communication π calculus concurent algol concurent algol  proofs programs judgments types dependently typed programming parallel sequential data structures algorithms overview sequencing genome algorithmic cost models divide conquer data abstraction sequences  data abstraction sequences  collect single threaded sequences sets tables randomized algorithms quicksort graphs  graph representations  graph search shortest weighted paths  shortest weighted paths  graph contraction graph contraction binary search trees treaps binary search trees treaps ordered sets augmented trees dynamic programming dynamic programming hash tables  priority queues leftist heaps  other parallel languages
 35 , 1 , parallel sequential data structures algorithms overview sequencing genome algorithmic cost models divide conquer data abstraction sequences  data abstraction sequences  collect single threaded sequences sets tables randomized algorithms quicksort graphs  graph representations  graph search shortest weighted paths  shortest weighted paths  graph contraction graph contraction binary search trees treaps binary search trees treaps ordered sets augmented trees dynamic programming dynamic programming hash tables  priority queues leftist heaps  other parallel languages constructive logic clue  natural deduction  verifications uses  tutch harmony  proofs programs  soundness completeness  β reduction substitution  substitution sequent calculus  quantifiers  sequent calculus  cut elimination  natural numbers  cut elimination  classical logic  classical logic computation  theorem proving  inversion  theorem proving  g4ip  theorem prover  logic programming  prolog  prolog  typed prolog   higher order logic programming  higher order logic programming  g4ip prolog  total logic programming  dependent types  lf type theory  higher order abstract syntax  higher order judgments  logic programming elf  logic programming elf  twelf  linear logic  linear logic
 36 , 0 , constructive logic clue  natural deduction  verifications uses  tutch harmony  proofs programs  soundness completeness  β reduction substitution  substitution sequent calculus  quantifiers  sequent calculus  cut elimination  natural numbers  cut elimination  classical logic  classical logic computation  theorem proving  inversion  theorem proving  g4ip  theorem prover  logic programming  prolog  prolog  typed prolog   higher order logic programming  higher order logic programming  g4ip prolog  total logic programming  dependent types  lf type theory  higher order abstract syntax  higher order judgments  logic programming elf  logic programming elf  twelf  linear logic  linear logic parallel sequential data structures algorithms overview sequencing genome algorithmic cost models divide conquer data abstraction sequences  data abstraction sequences  collect single threaded sequences sets tables randomized algorithms quicksort graphs  graph representations  graph search shortest weighted paths  shortest weighted paths  graph contraction graph contraction binary search trees treaps binary search trees treaps ordered sets augmented trees dynamic programming dynamic programming hash tables  priority queues leftist heaps  other parallel languages
 37 , 1 , parallel sequential data structures algorithms overview sequencing genome algorithmic cost models divide conquer data abstraction sequences  data abstraction sequences  collect single threaded sequences sets tables randomized algorithms quicksort graphs  graph representations  graph search shortest weighted paths  shortest weighted paths  graph contraction graph contraction binary search trees treaps binary search trees treaps ordered sets augmented trees dynamic programming dynamic programming hash tables  priority queues leftist heaps  other parallel languages integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions
 38 , 0 , integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions parallel sequential data structures algorithms overview sequencing genome algorithmic cost models divide conquer data abstraction sequences  data abstraction sequences  collect single threaded sequences sets tables randomized algorithms quicksort graphs  graph representations  graph search shortest weighted paths  shortest weighted paths  graph contraction graph contraction binary search trees treaps binary search trees treaps ordered sets augmented trees dynamic programming dynamic programming hash tables  priority queues leftist heaps  other parallel languages
 39 , 1 , diﬀerential integral calculus limit function calculating limits using limit laws continuity limits infinity  horizontal asymptotes derivatives rates change derivative function derivatives polynomials exponential functions product quotient rules derivatives trigonometric functions chain rule implicit differentiation derivatives logarithmic functions rates change natural social sciences exponential growth decay related rates more practice related rates linear approximations differentials hyperbolic functions maximum minimum values mean value theorem derivatives affect shape graph indeterminate forms l hospital rule summary curve sketching more practice curve sketching optimization problems more practice optimization problems antiderivatives areas distances definite integral fundamental theorem calculus indefinite integrals net change theorem substitution rule integration by parts fundamentals statistical modeling  theory probability mathematical statistics probability models distribution theory  practice statistical inference based use maximum likelihood estimation  applications statistical modeling inference  using case studies drawn social  physical biomedical sciences
 40 , 0 , fundamentals statistical modeling  theory probability mathematical statistics probability models distribution theory  practice statistical inference based use maximum likelihood estimation  applications statistical modeling inference  using case studies drawn social  physical biomedical sciences diﬀerential integral calculus limit function calculating limits using limit laws continuity limits infinity  horizontal asymptotes derivatives rates change derivative function derivatives polynomials exponential functions product quotient rules derivatives trigonometric functions chain rule implicit differentiation derivatives logarithmic functions rates change natural social sciences exponential growth decay related rates more practice related rates linear approximations differentials hyperbolic functions maximum minimum values mean value theorem derivatives affect shape graph indeterminate forms l hospital rule summary curve sketching more practice curve sketching optimization problems more practice optimization problems antiderivatives areas distances definite integral fundamental theorem calculus indefinite integrals net change theorem substitution rule integration by parts
 41 , 1 , diﬀerential integral calculus limit function calculating limits using limit laws continuity limits infinity  horizontal asymptotes derivatives rates change derivative function derivatives polynomials exponential functions product quotient rules derivatives trigonometric functions chain rule implicit differentiation derivatives logarithmic functions rates change natural social sciences exponential growth decay related rates more practice related rates linear approximations differentials hyperbolic functions maximum minimum values mean value theorem derivatives affect shape graph indeterminate forms l hospital rule summary curve sketching more practice curve sketching optimization problems more practice optimization problems antiderivatives areas distances definite integral fundamental theorem calculus indefinite integrals net change theorem substitution rule integration by parts multivariate analysis  matrix algebra  vectors  matrices  systems equations  dot product  cross product  lines planes  optimization  partial derivatives  chain rule  gradient  unconstrained optimization  constrained optimization  lagrange multipliers kuhn tucker theorem   improper integrals  multiple integration  iterated integrals  probability applications  triple integrals  change variables
 42 , 0 , multivariate analysis  matrix algebra  vectors  matrices  systems equations  dot product  cross product  lines planes  optimization  partial derivatives  chain rule  gradient  unconstrained optimization  constrained optimization  lagrange multipliers kuhn tucker theorem   improper integrals  multiple integration  iterated integrals  probability applications  triple integrals  change variables diﬀerential integral calculus limit function calculating limits using limit laws continuity limits infinity  horizontal asymptotes derivatives rates change derivative function derivatives polynomials exponential functions product quotient rules derivatives trigonometric functions chain rule implicit differentiation derivatives logarithmic functions rates change natural social sciences exponential growth decay related rates more practice related rates linear approximations differentials hyperbolic functions maximum minimum values mean value theorem derivatives affect shape graph indeterminate forms l hospital rule summary curve sketching more practice curve sketching optimization problems more practice optimization problems antiderivatives areas distances definite integral fundamental theorem calculus indefinite integrals net change theorem substitution rule integration by parts
 43 , 1 , integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions  combinatorics  introduction  counting odd sized subsets n set   binomial coefficients  related bijections  compositions  binomial theorem  warm up    semi combinatorial algebraic proofs  stirling numbers second kind   vandermonde convolution   fibonacci numbers   generalized binomial theorem  estimates binomial coefficients   estimates harmonic numbers  overhang stack cards   changemaking  partitions  part    partitions  part   generating function binary trees   book sections 3 1 through 3 6 inclusive  12 1 through 12 3 inclusive  all lectures up february 1 inclusive   catalan numbers   bijection binary trees parenthesized expressions  basic inclusion–exclusion  area spherical triangle  notes inclusion–exclusion   general inclusion–exclusion  probability two numbers being coprime  part    probability two numbers being coprime  part   set families  sperner theorem  statement    partial orders  hasse diagrams  boolean cubes  sperner theorem   littlewood–offord theorem  appetizer erdős–ko–rado theorem   erdős–ko–rado theorem  part   erdős–ko–rado theorem  part  incidences between points lines  number edges c4 free graphs   number edges c4 free graphs  cauchy–schwarz inequality  erdős–szekeres theorem subsequences  statement    erdős–szekeres theorem subsequences  party six  clique anticliques  ramsey theorem  ramsey numbers  course page illustration explained   upper bound ramsey numbers  middle binomial coefficient revisited  lower bound ramsey numbers via pigeonhole principle   colorings  counting proofs  hard boolean functions   two colorability set systems  finite probability spaces  union bound   events  examples probability spaces  non bipartiteness random graph  independent events  construction paradoxical tournaments   random variables  expectation  indicator random variables  linearity expectation  bipartite subgraphs many edges   turán theorem  examples statement   crude version turán theorem   less crude version turán theorem   comparisons quicksort  part    comparisons quicksort  part   homework  7  markov inequality  paranoidal quicksort  alterations  sidon sets   dominating sets  better lower bounds ramsey numbers   asymptotics better lower bounds ramsey numbers  finding several monochromatic triangles   many monochromatic triangles via double counting  goodman theorem   tale experiment design  fano plane  finite projective planes  order projective plane  size projective plane  statement  homework  8  book sections 10 1–10 4  all lectures march 18 april 17 inclusive   size projective plane  incidence graph projective plane  dual projective plane  relation c4 free graphs   construction projective planes prime order   duality projective planes prime order  real projective plane  latin squares  orthogonal latin squares  definition    orthogonal latin squares finite projective planes
 44 , 0 ,  combinatorics  introduction  counting odd sized subsets n set   binomial coefficients  related bijections  compositions  binomial theorem  warm up    semi combinatorial algebraic proofs  stirling numbers second kind   vandermonde convolution   fibonacci numbers   generalized binomial theorem  estimates binomial coefficients   estimates harmonic numbers  overhang stack cards   changemaking  partitions  part    partitions  part   generating function binary trees   book sections 3 1 through 3 6 inclusive  12 1 through 12 3 inclusive  all lectures up february 1 inclusive   catalan numbers   bijection binary trees parenthesized expressions  basic inclusion–exclusion  area spherical triangle  notes inclusion–exclusion   general inclusion–exclusion  probability two numbers being coprime  part    probability two numbers being coprime  part   set families  sperner theorem  statement    partial orders  hasse diagrams  boolean cubes  sperner theorem   littlewood–offord theorem  appetizer erdős–ko–rado theorem   erdős–ko–rado theorem  part   erdős–ko–rado theorem  part  incidences between points lines  number edges c4 free graphs   number edges c4 free graphs  cauchy–schwarz inequality  erdős–szekeres theorem subsequences  statement    erdős–szekeres theorem subsequences  party six  clique anticliques  ramsey theorem  ramsey numbers  course page illustration explained   upper bound ramsey numbers  middle binomial coefficient revisited  lower bound ramsey numbers via pigeonhole principle   colorings  counting proofs  hard boolean functions   two colorability set systems  finite probability spaces  union bound   events  examples probability spaces  non bipartiteness random graph  independent events  construction paradoxical tournaments   random variables  expectation  indicator random variables  linearity expectation  bipartite subgraphs many edges   turán theorem  examples statement   crude version turán theorem   less crude version turán theorem   comparisons quicksort  part    comparisons quicksort  part   homework  7  markov inequality  paranoidal quicksort  alterations  sidon sets   dominating sets  better lower bounds ramsey numbers   asymptotics better lower bounds ramsey numbers  finding several monochromatic triangles   many monochromatic triangles via double counting  goodman theorem   tale experiment design  fano plane  finite projective planes  order projective plane  size projective plane  statement  homework  8  book sections 10 1–10 4  all lectures march 18 april 17 inclusive   size projective plane  incidence graph projective plane  dual projective plane  relation c4 free graphs   construction projective planes prime order   duality projective planes prime order  real projective plane  latin squares  orthogonal latin squares  definition    orthogonal latin squares finite projective planes integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions
 45 , 1 , integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions foundations cyber physical systems cyber physical systems  introduction differential equations   domains ode  fol  quiz choice   control hp  syntax  semantics  example safety   contracts dynamical systems   dynamic axioms did you prove you meant prove  truth   proof control loops   invariants invariants proofs  jan  events   delays proofs   arithmetic events delays  stefan  differential equations   differential invariants differential equations   proofs differential invariants  khalil  stuff dynamic logic   dynamical systems differential invariants   proof theory mid semester break ghosts   differential ghosts trains   proofs differential   temporal logic differential   temporal proofs differential ghosts  differential invariants virtual substitution   real equations virtual substitution   real arithmetic safety motion  real arithmetic hybrid systems   games winning strategies   regions game examples winning   proving hybrid games game proofs   separations game proofs logical theory   completeness logical foundations cps
 46 , 0 , foundations cyber physical systems cyber physical systems  introduction differential equations   domains ode  fol  quiz choice   control hp  syntax  semantics  example safety   contracts dynamical systems   dynamic axioms did you prove you meant prove  truth   proof control loops   invariants invariants proofs  jan  events   delays proofs   arithmetic events delays  stefan  differential equations   differential invariants differential equations   proofs differential invariants  khalil  stuff dynamic logic   dynamical systems differential invariants   proof theory mid semester break ghosts   differential ghosts trains   proofs differential   temporal logic differential   temporal proofs differential ghosts  differential invariants virtual substitution   real equations virtual substitution   real arithmetic safety motion  real arithmetic hybrid systems   games winning strategies   regions game examples winning   proving hybrid games game proofs   separations game proofs logical theory   completeness logical foundations cps integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions
 47 , 1 , integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions probability theory random processes  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  limit theorems  introduction random processes some elementary ideas spectral analysis information theory will be given
 48 , 0 , probability theory random processes  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  limit theorems  introduction random processes some elementary ideas spectral analysis information theory will be given integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions
 49 , 1 , integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions computational neuroscience  visual computation biological systems does mean see    overview visual nervous system  basic anatomy  physiology  multi resolution laplacian analysis  does neuron   synapses system response  fourier analysis  system analysis  adaptation contrast normalization   v1 physiology gabor functions   wavelet analysis texture perception   hebbian learning principal components   information theory coding  independent component analysis   natural  scene statistics   edge detection image segmentation  scene statistics contour grouping  markov random field segmentation  mrf belief propagation  scene recognition  feature selection  boosting  sift  recognition hierarchy  attention context  mt motion physiology  computational modeling motion  unsupervised object learning  tom stepleton   3d scene statistics 3d inference  brian potetz
 50 , 0 , computational neuroscience  visual computation biological systems does mean see    overview visual nervous system  basic anatomy  physiology  multi resolution laplacian analysis  does neuron   synapses system response  fourier analysis  system analysis  adaptation contrast normalization   v1 physiology gabor functions   wavelet analysis texture perception   hebbian learning principal components   information theory coding  independent component analysis   natural  scene statistics   edge detection image segmentation  scene statistics contour grouping  markov random field segmentation  mrf belief propagation  scene recognition  feature selection  boosting  sift  recognition hierarchy  attention context  mt motion physiology  computational modeling motion  unsupervised object learning  tom stepleton   3d scene statistics 3d inference  brian potetz integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions
 51 , 1 , integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions computational perception biology perception   perception illusion     philosophy  history senses     retinal computation tunings      linear system  fourier transform  pyramid     striate extrastriate cortex     simple cell image representation      art perception     models perception     efficient sparse codes     models lightness perception  retinex intrinsic       electric fish perception       shape shading        binocular stereo       perceptual organization      texture perception      motion recognition      object recognition      scene  context attention
 52 , 0 , computational perception biology perception   perception illusion     philosophy  history senses     retinal computation tunings      linear system  fourier transform  pyramid     striate extrastriate cortex     simple cell image representation      art perception     models perception     efficient sparse codes     models lightness perception  retinex intrinsic       electric fish perception       shape shading        binocular stereo       perceptual organization      texture perception      motion recognition      object recognition      scene  context attention integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions
 53 , 1 , integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions calculus three dimensions  vectors  lines  planes  quadratic surfaces  polar  cylindrical spherical coordinates  partial derivatives  directional derivatives  gradient  divergence  curl  chain rule  maximum minimum problems  multiple integrals  parametric surfaces curves  line integrals  surface integrals  green gauss theorems
 54 , 0 , calculus three dimensions  vectors  lines  planes  quadratic surfaces  polar  cylindrical spherical coordinates  partial derivatives  directional derivatives  gradient  divergence  curl  chain rule  maximum minimum problems  multiple integrals  parametric surfaces curves  line integrals  surface integrals  green gauss theorems integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions
 55 , 1 , integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations
 56 , 0 ,  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions
 57 , 1 , integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions multidimensional calculus  serious introduction multidimensional calculus matrices linear transformation    carefully rigorously  write some proofs  functions several variables  regions domains  limits continuity  partial derivatives  linearization jacobian matrices  chain rules  inverse implicit functions  geometric applications  higher derivatives  taylor theorem  optimization  vector fields  multiple integrals change variables  leibnitz rule  line integrals  green theorem  path independence connectedness  conservative vector fields  surfaces orientability  surface integrals  divergence theorem stokes theorem
 58 , 0 , multidimensional calculus  serious introduction multidimensional calculus matrices linear transformation    carefully rigorously  write some proofs  functions several variables  regions domains  limits continuity  partial derivatives  linearization jacobian matrices  chain rules  inverse implicit functions  geometric applications  higher derivatives  taylor theorem  optimization  vector fields  multiple integrals change variables  leibnitz rule  line integrals  green theorem  path independence connectedness  conservative vector fields  surfaces orientability  surface integrals  divergence theorem stokes theorem integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions
 59 , 1 , integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions vector analysis more emphasis will be placed writing proofs basic geometry topology euclidean space  curves space  arclength  curvature torsion  functions euclidean spaces  limits continuity  partial derivatives  gradients linearization  chain rules  inverse implicit function theorems  geometric applications  higher derivatives  taylor’s theorem  optimization  vector ﬁelds  multiple integrals change variables  leibnitz’s rule  conservative solenoidal vector ﬁelds  divergence curl  surfaces orientability  surface integrals  gauss green theorems stokes’s theorem
 60 , 0 , vector analysis more emphasis will be placed writing proofs basic geometry topology euclidean space  curves space  arclength  curvature torsion  functions euclidean spaces  limits continuity  partial derivatives  gradients linearization  chain rules  inverse implicit function theorems  geometric applications  higher derivatives  taylor’s theorem  optimization  vector ﬁelds  multiple integrals change variables  leibnitz’s rule  conservative solenoidal vector ﬁelds  divergence curl  surfaces orientability  surface integrals  gauss green theorems stokes’s theorem integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions
 61 , 1 , logic    logical puzzles    propositional logic   sets  quantifiers  methods proof    more methods proof  integer divisibility     divisibility  primes     fundamental theorem arithmetic     gcd euclidean algorithm   extended euclidean algorithm    continued fractions      linear diophantine equations      applications ldes   number systems     congruences     applications   equivalence relations   integers mod n   linear congruences   chinese remainder theorem   euler fermat theorem   rsa     induction recursion       strong induction     proof correctness     forms recursion     more recursions     first order     second order      divide conquer     divide conquer       discrete mathematics         binomial coefficients       binomial theorem pascal triangle       multinomial theorem newton theorem       inclusion exclusion       graphs       trees   connectivity       euler tours       chinese postman problem       bipartite matchings machine learning overview learning concept learning  version spaces  inductive bias tutorial information theory decision trees  overfitting  occam razor review probability theory  linear regression neural networks review statistical estimation hypothesis testing machine learning bayesian learning  map ml  bayes optimal classifiers  gibbs sampling  mdl naive bayes graphical models spring carnival by dr  drew bagnell imitation learning hmm  em minimum description length  instance based learning  knn  locally weighted regression kernel based methods  maximum margin classifiers  bagging  boosting
 62 , 0 , machine learning overview learning concept learning  version spaces  inductive bias tutorial information theory decision trees  overfitting  occam razor review probability theory  linear regression neural networks review statistical estimation hypothesis testing machine learning bayesian learning  map ml  bayes optimal classifiers  gibbs sampling  mdl naive bayes graphical models spring carnival by dr  drew bagnell imitation learning hmm  em minimum description length  instance based learning  knn  locally weighted regression kernel based methods  maximum margin classifiers  bagging  boosting logic    logical puzzles    propositional logic   sets  quantifiers  methods proof    more methods proof  integer divisibility     divisibility  primes     fundamental theorem arithmetic     gcd euclidean algorithm   extended euclidean algorithm    continued fractions      linear diophantine equations      applications ldes   number systems     congruences     applications   equivalence relations   integers mod n   linear congruences   chinese remainder theorem   euler fermat theorem   rsa     induction recursion       strong induction     proof correctness     forms recursion     more recursions     first order     second order      divide conquer     divide conquer       discrete mathematics         binomial coefficients       binomial theorem pascal triangle       multinomial theorem newton theorem       inclusion exclusion       graphs       trees   connectivity       euler tours       chinese postman problem       bipartite matchings
 63 , 1 , logic    logical puzzles    propositional logic   sets  quantifiers  methods proof    more methods proof  integer divisibility     divisibility  primes     fundamental theorem arithmetic     gcd euclidean algorithm   extended euclidean algorithm    continued fractions      linear diophantine equations      applications ldes   number systems     congruences     applications   equivalence relations   integers mod n   linear congruences   chinese remainder theorem   euler fermat theorem   rsa     induction recursion       strong induction     proof correctness     forms recursion     more recursions     first order     second order      divide conquer     divide conquer       discrete mathematics         binomial coefficients       binomial theorem pascal triangle       multinomial theorem newton theorem       inclusion exclusion       graphs       trees   connectivity       euler tours       chinese postman problem       bipartite matchings functional programming sml basics programming proving  numbers programming proving  lists asymptotic analysis sequential sorting parallel sorting polymorphism  specs checks  datatypes datatypes  functions arguments higher order functions tail recursion  continuations regular expression matching regular expression matching regular expression matching iii  staging exceptions cost semantics  sequences n body simulation modules  signatures  structures  type abstraction modules  dictionaries using type classes functors red black trees game game  io scheduling  parallelism effects parallelism effects mutation  persistent emphemeral data structures benign effects processes streams
 64 , 0 , functional programming sml basics programming proving  numbers programming proving  lists asymptotic analysis sequential sorting parallel sorting polymorphism  specs checks  datatypes datatypes  functions arguments higher order functions tail recursion  continuations regular expression matching regular expression matching regular expression matching iii  staging exceptions cost semantics  sequences n body simulation modules  signatures  structures  type abstraction modules  dictionaries using type classes functors red black trees game game  io scheduling  parallelism effects parallelism effects mutation  persistent emphemeral data structures benign effects processes streams logic    logical puzzles    propositional logic   sets  quantifiers  methods proof    more methods proof  integer divisibility     divisibility  primes     fundamental theorem arithmetic     gcd euclidean algorithm   extended euclidean algorithm    continued fractions      linear diophantine equations      applications ldes   number systems     congruences     applications   equivalence relations   integers mod n   linear congruences   chinese remainder theorem   euler fermat theorem   rsa     induction recursion       strong induction     proof correctness     forms recursion     more recursions     first order     second order      divide conquer     divide conquer       discrete mathematics         binomial coefficients       binomial theorem pascal triangle       multinomial theorem newton theorem       inclusion exclusion       graphs       trees   connectivity       euler tours       chinese postman problem       bipartite matchings
 65 , 1 , logic    logical puzzles    propositional logic   sets  quantifiers  methods proof    more methods proof  integer divisibility     divisibility  primes     fundamental theorem arithmetic     gcd euclidean algorithm   extended euclidean algorithm    continued fractions      linear diophantine equations      applications ldes   number systems     congruences     applications   equivalence relations   integers mod n   linear congruences   chinese remainder theorem   euler fermat theorem   rsa     induction recursion       strong induction     proof correctness     forms recursion     more recursions     first order     second order      divide conquer     divide conquer       discrete mathematics         binomial coefficients       binomial theorem pascal triangle       multinomial theorem newton theorem       inclusion exclusion       graphs       trees   connectivity       euler tours       chinese postman problem       bipartite matchings matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 66 , 0 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation logic    logical puzzles    propositional logic   sets  quantifiers  methods proof    more methods proof  integer divisibility     divisibility  primes     fundamental theorem arithmetic     gcd euclidean algorithm   extended euclidean algorithm    continued fractions      linear diophantine equations      applications ldes   number systems     congruences     applications   equivalence relations   integers mod n   linear congruences   chinese remainder theorem   euler fermat theorem   rsa     induction recursion       strong induction     proof correctness     forms recursion     more recursions     first order     second order      divide conquer     divide conquer       discrete mathematics         binomial coefficients       binomial theorem pascal triangle       multinomial theorem newton theorem       inclusion exclusion       graphs       trees   connectivity       euler tours       chinese postman problem       bipartite matchings
 67 , 1 , logic    logical puzzles    propositional logic   sets  quantifiers  methods proof    more methods proof  integer divisibility     divisibility  primes     fundamental theorem arithmetic     gcd euclidean algorithm   extended euclidean algorithm    continued fractions      linear diophantine equations      applications ldes   number systems     congruences     applications   equivalence relations   integers mod n   linear congruences   chinese remainder theorem   euler fermat theorem   rsa     induction recursion       strong induction     proof correctness     forms recursion     more recursions     first order     second order      divide conquer     divide conquer       discrete mathematics         binomial coefficients       binomial theorem pascal triangle       multinomial theorem newton theorem       inclusion exclusion       graphs       trees   connectivity       euler tours       chinese postman problem       bipartite matchings great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness
 68 , 0 , great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness logic    logical puzzles    propositional logic   sets  quantifiers  methods proof    more methods proof  integer divisibility     divisibility  primes     fundamental theorem arithmetic     gcd euclidean algorithm   extended euclidean algorithm    continued fractions      linear diophantine equations      applications ldes   number systems     congruences     applications   equivalence relations   integers mod n   linear congruences   chinese remainder theorem   euler fermat theorem   rsa     induction recursion       strong induction     proof correctness     forms recursion     more recursions     first order     second order      divide conquer     divide conquer       discrete mathematics         binomial coefficients       binomial theorem pascal triangle       multinomial theorem newton theorem       inclusion exclusion       graphs       trees   connectivity       euler tours       chinese postman problem       bipartite matchings
 69 , 1 , logic    logical puzzles    propositional logic   sets  quantifiers  methods proof    more methods proof  integer divisibility     divisibility  primes     fundamental theorem arithmetic     gcd euclidean algorithm   extended euclidean algorithm    continued fractions      linear diophantine equations      applications ldes   number systems     congruences     applications   equivalence relations   integers mod n   linear congruences   chinese remainder theorem   euler fermat theorem   rsa     induction recursion       strong induction     proof correctness     forms recursion     more recursions     first order     second order      divide conquer     divide conquer       discrete mathematics         binomial coefficients       binomial theorem pascal triangle       multinomial theorem newton theorem       inclusion exclusion       graphs       trees   connectivity       euler tours       chinese postman problem       bipartite matchings principles software construction recitation git + java warmup encapsulation  polymorphism  equality modules  inheritance recitation debugging java semantics inheritance  continued   typechecking  introduction behavioral contracts exceptional control flow  parametric polymorphism recitation object equality  self documenting code  refactoring specifications testing  unit testing  coverage  build test automation  recitation unit testing  build automation  continuous integration++ bug reporting  verification  static analysis introduction object oriented design recitation behavioral subtypes static analysis  object oriented analysis introduction design patterns recitation grasp + design patterns design goals assigning responsibilities recitation intro guis design case study  guis design case study  java collections recitation guis++ design case study  stream o design reuse  libraries   frameworks recitation design pattern mining design reuse  libraries   frameworks  continued  concurrency  part 1  recitation frameworks concurrency  part 2  recitation api design  concurrency  part 3  distributed system design  part 1  recitation concurrency distributed system design  part 2  recitation distributed systems distributed system design  part 3  distributed system design  part 4  recitation distributed systems  continued data consistency pagerank data consistency recitation map reduce problem solving software engineering beyond 15 214
 70 , 0 , principles software construction recitation git + java warmup encapsulation  polymorphism  equality modules  inheritance recitation debugging java semantics inheritance  continued   typechecking  introduction behavioral contracts exceptional control flow  parametric polymorphism recitation object equality  self documenting code  refactoring specifications testing  unit testing  coverage  build test automation  recitation unit testing  build automation  continuous integration++ bug reporting  verification  static analysis introduction object oriented design recitation behavioral subtypes static analysis  object oriented analysis introduction design patterns recitation grasp + design patterns design goals assigning responsibilities recitation intro guis design case study  guis design case study  java collections recitation guis++ design case study  stream o design reuse  libraries   frameworks recitation design pattern mining design reuse  libraries   frameworks  continued  concurrency  part 1  recitation frameworks concurrency  part 2  recitation api design  concurrency  part 3  distributed system design  part 1  recitation concurrency distributed system design  part 2  recitation distributed systems distributed system design  part 3  distributed system design  part 4  recitation distributed systems  continued data consistency pagerank data consistency recitation map reduce problem solving software engineering beyond 15 214 logic    logical puzzles    propositional logic   sets  quantifiers  methods proof    more methods proof  integer divisibility     divisibility  primes     fundamental theorem arithmetic     gcd euclidean algorithm   extended euclidean algorithm    continued fractions      linear diophantine equations      applications ldes   number systems     congruences     applications   equivalence relations   integers mod n   linear congruences   chinese remainder theorem   euler fermat theorem   rsa     induction recursion       strong induction     proof correctness     forms recursion     more recursions     first order     second order      divide conquer     divide conquer       discrete mathematics         binomial coefficients       binomial theorem pascal triangle       multinomial theorem newton theorem       inclusion exclusion       graphs       trees   connectivity       euler tours       chinese postman problem       bipartite matchings
 71 , 1 , logic    logical puzzles    propositional logic   sets  quantifiers  methods proof    more methods proof  integer divisibility     divisibility  primes     fundamental theorem arithmetic     gcd euclidean algorithm   extended euclidean algorithm    continued fractions      linear diophantine equations      applications ldes   number systems     congruences     applications   equivalence relations   integers mod n   linear congruences   chinese remainder theorem   euler fermat theorem   rsa     induction recursion       strong induction     proof correctness     forms recursion     more recursions     first order     second order      divide conquer     divide conquer       discrete mathematics         binomial coefficients       binomial theorem pascal triangle       multinomial theorem newton theorem       inclusion exclusion       graphs       trees   connectivity       euler tours       chinese postman problem       bipartite matchings linear algebra  abstract vector spaces  linear transformations  eigenvalues  eigenvectors  inner products  invariant subspaces  spectral theorem  singular value decomposition determinants
 72 , 0 , linear algebra  abstract vector spaces  linear transformations  eigenvalues  eigenvectors  inner products  invariant subspaces  spectral theorem  singular value decomposition determinants logic    logical puzzles    propositional logic   sets  quantifiers  methods proof    more methods proof  integer divisibility     divisibility  primes     fundamental theorem arithmetic     gcd euclidean algorithm   extended euclidean algorithm    continued fractions      linear diophantine equations      applications ldes   number systems     congruences     applications   equivalence relations   integers mod n   linear congruences   chinese remainder theorem   euler fermat theorem   rsa     induction recursion       strong induction     proof correctness     forms recursion     more recursions     first order     second order      divide conquer     divide conquer       discrete mathematics         binomial coefficients       binomial theorem pascal triangle       multinomial theorem newton theorem       inclusion exclusion       graphs       trees   connectivity       euler tours       chinese postman problem       bipartite matchings
 73 , 1 , parallel sequential data structures algorithms overview sequencing genome algorithmic cost models divide conquer data abstraction sequences  data abstraction sequences  collect single threaded sequences sets tables randomized algorithms quicksort graphs  graph representations  graph search shortest weighted paths  shortest weighted paths  graph contraction graph contraction binary search trees treaps binary search trees treaps ordered sets augmented trees dynamic programming dynamic programming hash tables  priority queues leftist heaps  other parallel languages algorithms introduction  master theorem big oh recurrences  strassen fft fft fft dynamic programming dp  treaps quicksort  treaps continued + amortized analysis intro  splay trees amortized analysis treaps  binomial heaps  amortized analysis  splay trees  graphs  graphs access lemma static optimality splay trees  graphs iii  graphs iv  sorting lower bounds  backwards analysis   line segment intersection   2d linear programming  lp boundedness    convex hull minimum enclosing disc  convex hull random incremental  closest pair using hashing  maximum flow max flow application hashing  maximum flow  maximum flow iii applications max flow min cut  minimum cost maximum flow   linear programming introduction  linear programming examples linear programming duality  linear programming duality  prescan list ranking parallel tree contraction  more list ranking  maximal independent set  np completeness reductions  np completeness  online algorithms competitive analysis more reductions  randomized online algorithms  continued  aproximation algorithms parallel mis lp relaxation vertex set cover  aproximation algorithms  string matching  string matching kmp revisited  tries suffix  trees
 74 , 0 , algorithms introduction  master theorem big oh recurrences  strassen fft fft fft dynamic programming dp  treaps quicksort  treaps continued + amortized analysis intro  splay trees amortized analysis treaps  binomial heaps  amortized analysis  splay trees  graphs  graphs access lemma static optimality splay trees  graphs iii  graphs iv  sorting lower bounds  backwards analysis   line segment intersection   2d linear programming  lp boundedness    convex hull minimum enclosing disc  convex hull random incremental  closest pair using hashing  maximum flow max flow application hashing  maximum flow  maximum flow iii applications max flow min cut  minimum cost maximum flow   linear programming introduction  linear programming examples linear programming duality  linear programming duality  prescan list ranking parallel tree contraction  more list ranking  maximal independent set  np completeness reductions  np completeness  online algorithms competitive analysis more reductions  randomized online algorithms  continued  aproximation algorithms parallel mis lp relaxation vertex set cover  aproximation algorithms  string matching  string matching kmp revisited  tries suffix  trees parallel sequential data structures algorithms overview sequencing genome algorithmic cost models divide conquer data abstraction sequences  data abstraction sequences  collect single threaded sequences sets tables randomized algorithms quicksort graphs  graph representations  graph search shortest weighted paths  shortest weighted paths  graph contraction graph contraction binary search trees treaps binary search trees treaps ordered sets augmented trees dynamic programming dynamic programming hash tables  priority queues leftist heaps  other parallel languages
 75 , 1 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation graph theory graph theory uses basic concepts approach diversity problems nontrivial applications operations research  computer science other disciplines  one very few mathematical areas where one always close interesting unsolved problems  topics include graphs subgraphs  trees  connectivity  euler tours hamilton cycles  matchings  graph colorings  planar graphs euler formula  directed graphs  network flows  counting arguments  graph algorithms
 76 , 0 , graph theory graph theory uses basic concepts approach diversity problems nontrivial applications operations research  computer science other disciplines  one very few mathematical areas where one always close interesting unsolved problems  topics include graphs subgraphs  trees  connectivity  euler tours hamilton cycles  matchings  graph colorings  planar graphs euler formula  directed graphs  network flows  counting arguments  graph algorithms matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 77 , 1 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation computer graphics   basic graphics programming    interaction    transformations    viewing projection    hierarchical modeling    lighting shading    shading opengl    curves surfaces    texture mapping [i  graham]    splines    programmable shading hardware    physically based modelling [c  twigg]    clipping    rasterization    image processing    ray tracing    spatial data structures    dynamics monsters  inc     radiosity    global illumination    visualization    non photorealistic rendering    animation    advanced global illumination    computer games
 78 , 0 , computer graphics   basic graphics programming    interaction    transformations    viewing projection    hierarchical modeling    lighting shading    shading opengl    curves surfaces    texture mapping [i  graham]    splines    programmable shading hardware    physically based modelling [c  twigg]    clipping    rasterization    image processing    ray tracing    spatial data structures    dynamics monsters  inc     radiosity    global illumination    visualization    non photorealistic rendering    animation    advanced global illumination    computer games matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 79 , 1 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation robot kinematics dynamics  cs  foundations principles robotic kinematics  transformations  forward kinematics  inverse kinematics  differential kinematics  jacobians   manipulability  basic equations motion  course also include programming robot arms
 80 , 0 , robot kinematics dynamics  cs  foundations principles robotic kinematics  transformations  forward kinematics  inverse kinematics  differential kinematics  jacobians   manipulability  basic equations motion  course also include programming robot arms matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 81 , 1 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation computer vision image feature representation  introduction computer vision  image fourier representation  optics image formation  camera calibration  linear filters  laplacian pyramid  image blending  wavelets  principal component analysis  independent components   object scene recognition  simple features boosting  face detection cascades  pattern descriptors  sift hog    classification  svm knn   lda  linear discriminant   perceptual inference  optical flow  motion analysis  tracking  structure motion   shape shading  odometry pose estimation  active shape appearance model  scene recognition  coherent scene interpretation  segmentation  mrf  mean shift  graphcut   review  review hierarchy
 82 , 0 , computer vision image feature representation  introduction computer vision  image fourier representation  optics image formation  camera calibration  linear filters  laplacian pyramid  image blending  wavelets  principal component analysis  independent components   object scene recognition  simple features boosting  face detection cascades  pattern descriptors  sift hog    classification  svm knn   lda  linear discriminant   perceptual inference  optical flow  motion analysis  tracking  structure motion   shape shading  odometry pose estimation  active shape appearance model  scene recognition  coherent scene interpretation  segmentation  mrf  mean shift  graphcut   review  review hierarchy matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 83 , 1 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation matrix theory honors version 21 241  matrix algebra linear transformations  students greater aptitude motivation  more emphasis will be placed writing proofs  topics be covered  complex numbers  real complex vectors matrices  rowspace columnspace matrix  rank nullity  solving linear systems by row reduction matrix  inverse matrices determinants  change basis  linear transformations  inner product vectors  orthonormal bases gram schmidt process  eigenvectors eigenvalues  diagonalization matrix  symmetric orthogonal matrices  hermitian unitary matrices  quadratic forms
 84 , 0 , matrix theory honors version 21 241  matrix algebra linear transformations  students greater aptitude motivation  more emphasis will be placed writing proofs  topics be covered  complex numbers  real complex vectors matrices  rowspace columnspace matrix  rank nullity  solving linear systems by row reduction matrix  inverse matrices determinants  change basis  linear transformations  inner product vectors  orthonormal bases gram schmidt process  eigenvectors eigenvalues  diagonalization matrix  symmetric orthogonal matrices  hermitian unitary matrices  quadratic forms matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 85 , 1 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation  probability computing  probability computing  verifying matrix multiplication  probability basics  modeling  deﬁnitions  conditioning 1 1 1 3  independence  law total probability  birthday “paradox” 1 4 1 7  generating testing primes  random variables 2 1  random variables  expectation linearity thereof  2 2 2 4 probability mass functions  pmfs   joint pmfs  conditional expectation  independent r v ’s  2 5 2 8 binomial geometric r v ’s  indicator r v’s  applications linearity expectation  max cut  updating minimum  etc   deviation expectation  markov’s inequality  5 1 chebyshev’s inequality  variance standard deviation  chernoﬀ hoeﬀding’s concentration inequalities 5 2 5 3  chernoﬀ + union bound  application sampling  load balancing  balls bins  poisson distribution 6 1  applications  hashing  ﬁngerprinting  bloom ﬁlters  random graphs  markov chains  discrete time ﬁnite 7 1 7 3  finite state markov chains conclusion 7 4 markov chain applications  pagerank metropolis introduction continuous random variables 3 1 3 2  joint continuous random variables 3 4  exponential distribution  poisson process 6 2  continuous time markov chains 7 5 7 6  introduction queuing theory  gaussian random variables 3 3  central limit theorem 5 4
 86 , 0 ,  probability computing  probability computing  verifying matrix multiplication  probability basics  modeling  deﬁnitions  conditioning 1 1 1 3  independence  law total probability  birthday “paradox” 1 4 1 7  generating testing primes  random variables 2 1  random variables  expectation linearity thereof  2 2 2 4 probability mass functions  pmfs   joint pmfs  conditional expectation  independent r v ’s  2 5 2 8 binomial geometric r v ’s  indicator r v’s  applications linearity expectation  max cut  updating minimum  etc   deviation expectation  markov’s inequality  5 1 chebyshev’s inequality  variance standard deviation  chernoﬀ hoeﬀding’s concentration inequalities 5 2 5 3  chernoﬀ + union bound  application sampling  load balancing  balls bins  poisson distribution 6 1  applications  hashing  ﬁngerprinting  bloom ﬁlters  random graphs  markov chains  discrete time ﬁnite 7 1 7 3  finite state markov chains conclusion 7 4 markov chain applications  pagerank metropolis introduction continuous random variables 3 1 3 2  joint continuous random variables 3 4  exponential distribution  poisson process 6 2  continuous time markov chains 7 5 7 6  introduction queuing theory  gaussian random variables 3 3  central limit theorem 5 4 matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 87 , 1 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation search engines web mining  introduction text search text representation search engine indexes information needs queries vector space retrieval model probabilistic retrieval models probabilistic retrieval models evaluating search effectiveness evaluating search effectiveness index construction index construction search log analysis search log analysis clustering clustering collaborative filtering  collaborative filtering text categorization text categorization text categorization text categorization learning rank learning rank significance tests link analysis link analysis query classification  federated search
 88 , 0 , search engines web mining  introduction text search text representation search engine indexes information needs queries vector space retrieval model probabilistic retrieval models probabilistic retrieval models evaluating search effectiveness evaluating search effectiveness index construction index construction search log analysis search log analysis clustering clustering collaborative filtering  collaborative filtering text categorization text categorization text categorization text categorization learning rank learning rank significance tests link analysis link analysis query classification  federated search matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 89 , 1 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation information retrieval introduction ad hoc search  boolean retrieval text representation search engine indexes evaluation  information needs queries retrieval models  vector space retrieval models  probabilistic models retrieval models  statistical language models retrieval models  inference networks index construction index construction federated vertical search     relevance feedback search log analysis search log analysis     document clustering  document clustering     collaborative filtering  collaborative filtering categorization categorization  logistic regression algorithms          convexity  regularization  categorization  svm  learning rank  pairwise constrained optimization  learning rank  list wise constrained optimization  link analysis  hits  pagerank     link analysis  personalized topic sensitive pagerank     principle component analysis singular value decomposition  large scale structured learning classification
 90 , 0 , information retrieval introduction ad hoc search  boolean retrieval text representation search engine indexes evaluation  information needs queries retrieval models  vector space retrieval models  probabilistic models retrieval models  statistical language models retrieval models  inference networks index construction index construction federated vertical search     relevance feedback search log analysis search log analysis     document clustering  document clustering     collaborative filtering  collaborative filtering categorization categorization  logistic regression algorithms          convexity  regularization  categorization  svm  learning rank  pairwise constrained optimization  learning rank  list wise constrained optimization  link analysis  hits  pagerank     link analysis  personalized topic sensitive pagerank     principle component analysis singular value decomposition  large scale structured learning classification matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 91 , 1 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences
 92 , 0 , modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 93 , 1 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation computational perception biology perception   perception illusion     philosophy  history senses     retinal computation tunings      linear system  fourier transform  pyramid     striate extrastriate cortex     simple cell image representation      art perception     models perception     efficient sparse codes     models lightness perception  retinex intrinsic       electric fish perception       shape shading        binocular stereo       perceptual organization      texture perception      motion recognition      object recognition      scene  context attention
 94 , 0 , computational perception biology perception   perception illusion     philosophy  history senses     retinal computation tunings      linear system  fourier transform  pyramid     striate extrastriate cortex     simple cell image representation      art perception     models perception     efficient sparse codes     models lightness perception  retinex intrinsic       electric fish perception       shape shading        binocular stereo       perceptual organization      texture perception      motion recognition      object recognition      scene  context attention matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 95 , 1 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation artificial neural networks organizational meeting  introduction neural nets perceptrons lms algorithm backpropagation learning visually guided robot control optimization techniques overfitting  cross validation  early stopping simple recurrent networks language processing models pattern classification pattern classification em  expectation maximization  algorithm neural networks control support vector machines time series prediction shared weight networks competitive learning kohonen nets hebbian learning principal components analysis hopfield nets boltzmann machines mean field approximation helmholtz machines  minimum description length bayesian networks computational learning theory connectionist symbol processing reinforcement learning neurophysiology computer scientists
 96 , 0 , artificial neural networks organizational meeting  introduction neural nets perceptrons lms algorithm backpropagation learning visually guided robot control optimization techniques overfitting  cross validation  early stopping simple recurrent networks language processing models pattern classification pattern classification em  expectation maximization  algorithm neural networks control support vector machines time series prediction shared weight networks competitive learning kohonen nets hebbian learning principal components analysis hopfield nets boltzmann machines mean field approximation helmholtz machines  minimum description length bayesian networks computational learning theory connectionist symbol processing reinforcement learning neurophysiology computer scientists matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 97 , 1 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation introduction robotics computer vision  computer vision  iii     robotc   nxt kits hand out lego kits mandatory      controls  iii     motion planning      motion planning  iv     graph search      localization      locomotion     hand out usar     human robot interaction  evaluate design proposals  groups  usar demos     usar final competition     kinematics 2     inverse kinematics     non holonomic path planning     survey     rube goldberg  lab1      computer vision      vision programs     controls      dead reckoning     controls      moore law     trajectory following     motion planning      motion planning  iii     graph search      localization      human robot interaction      usar wrapup     kinematics 1     coordinate transformations intro     inverse kinematics non holonomic path planning   2
 98 , 0 , introduction robotics computer vision  computer vision  iii     robotc   nxt kits hand out lego kits mandatory      controls  iii     motion planning      motion planning  iv     graph search      localization      locomotion     hand out usar     human robot interaction  evaluate design proposals  groups  usar demos     usar final competition     kinematics 2     inverse kinematics     non holonomic path planning     survey     rube goldberg  lab1      computer vision      vision programs     controls      dead reckoning     controls      moore law     trajectory following     motion planning      motion planning  iii     graph search      localization      human robot interaction      usar wrapup     kinematics 1     coordinate transformations intro     inverse kinematics non holonomic path planning   2 matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 99 , 1 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation algorithms introduction  master theorem big oh recurrences  strassen fft fft fft dynamic programming dp  treaps quicksort  treaps continued + amortized analysis intro  splay trees amortized analysis treaps  binomial heaps  amortized analysis  splay trees  graphs  graphs access lemma static optimality splay trees  graphs iii  graphs iv  sorting lower bounds  backwards analysis   line segment intersection   2d linear programming  lp boundedness    convex hull minimum enclosing disc  convex hull random incremental  closest pair using hashing  maximum flow max flow application hashing  maximum flow  maximum flow iii applications max flow min cut  minimum cost maximum flow   linear programming introduction  linear programming examples linear programming duality  linear programming duality  prescan list ranking parallel tree contraction  more list ranking  maximal independent set  np completeness reductions  np completeness  online algorithms competitive analysis more reductions  randomized online algorithms  continued  aproximation algorithms parallel mis lp relaxation vertex set cover  aproximation algorithms  string matching  string matching kmp revisited  tries suffix  trees
 100 , 0 , algorithms introduction  master theorem big oh recurrences  strassen fft fft fft dynamic programming dp  treaps quicksort  treaps continued + amortized analysis intro  splay trees amortized analysis treaps  binomial heaps  amortized analysis  splay trees  graphs  graphs access lemma static optimality splay trees  graphs iii  graphs iv  sorting lower bounds  backwards analysis   line segment intersection   2d linear programming  lp boundedness    convex hull minimum enclosing disc  convex hull random incremental  closest pair using hashing  maximum flow max flow application hashing  maximum flow  maximum flow iii applications max flow min cut  minimum cost maximum flow   linear programming introduction  linear programming examples linear programming duality  linear programming duality  prescan list ranking parallel tree contraction  more list ranking  maximal independent set  np completeness reductions  np completeness  online algorithms competitive analysis more reductions  randomized online algorithms  continued  aproximation algorithms parallel mis lp relaxation vertex set cover  aproximation algorithms  string matching  string matching kmp revisited  tries suffix  trees matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 101 , 1 , matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation multidimensional calculus  serious introduction multidimensional calculus matrices linear transformation    carefully rigorously  write some proofs  functions several variables  regions domains  limits continuity  partial derivatives  linearization jacobian matrices  chain rules  inverse implicit functions  geometric applications  higher derivatives  taylor theorem  optimization  vector fields  multiple integrals change variables  leibnitz rule  line integrals  green theorem  path independence connectedness  conservative vector fields  surfaces orientability  surface integrals  divergence theorem stokes theorem
 102 , 0 , multidimensional calculus  serious introduction multidimensional calculus matrices linear transformation    carefully rigorously  write some proofs  functions several variables  regions domains  limits continuity  partial derivatives  linearization jacobian matrices  chain rules  inverse implicit functions  geometric applications  higher derivatives  taylor theorem  optimization  vector fields  multiple integrals change variables  leibnitz rule  line integrals  green theorem  path independence connectedness  conservative vector fields  surfaces orientability  surface integrals  divergence theorem stokes theorem matrix algebra introduction  geometry algebra vectors length angle  dot product lnes planes  introduction systems linear equations   direct mehtods solving linear systems   direct mehtods solving linear systems   spanning sets linear independence  matrix operations  matrix algebra  inverse matrix lu factorization  inverse matrix  lu factorization  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  subspaces  bases  dimension  rank  introduction linear transformations  introduction eigenvalues eigenvectors  determinants  determinants  eigenvalues eigenvectors nxn matrices  similarity diagonalization  orthogonality rn  orthogonal complements orthogonal projections  makeup  gram schmidt process qr factorization  orthogonal diagonalization symmetric matrices  applications  vector spaces subspaces  linear independences  basis  dimension  change basis  linear tramsformations  kernel range linear transformation  kernel range linear transformation  matrix linear transformation  inner product spaces  norms distance functions  least squares approximations  singular value approximation
 103 , 1 , matrix theory honors version 21 241  matrix algebra linear transformations  students greater aptitude motivation  more emphasis will be placed writing proofs  topics be covered  complex numbers  real complex vectors matrices  rowspace columnspace matrix  rank nullity  solving linear systems by row reduction matrix  inverse matrices determinants  change basis  linear transformations  inner product vectors  orthonormal bases gram schmidt process  eigenvectors eigenvalues  diagonalization matrix  symmetric orthogonal matrices  hermitian unitary matrices  quadratic forms graph theory graph theory uses basic concepts approach diversity problems nontrivial applications operations research  computer science other disciplines  one very few mathematical areas where one always close interesting unsolved problems  topics include graphs subgraphs  trees  connectivity  euler tours hamilton cycles  matchings  graph colorings  planar graphs euler formula  directed graphs  network flows  counting arguments  graph algorithms
 104 , 0 , graph theory graph theory uses basic concepts approach diversity problems nontrivial applications operations research  computer science other disciplines  one very few mathematical areas where one always close interesting unsolved problems  topics include graphs subgraphs  trees  connectivity  euler tours hamilton cycles  matchings  graph colorings  planar graphs euler formula  directed graphs  network flows  counting arguments  graph algorithms matrix theory honors version 21 241  matrix algebra linear transformations  students greater aptitude motivation  more emphasis will be placed writing proofs  topics be covered  complex numbers  real complex vectors matrices  rowspace columnspace matrix  rank nullity  solving linear systems by row reduction matrix  inverse matrices determinants  change basis  linear transformations  inner product vectors  orthonormal bases gram schmidt process  eigenvectors eigenvalues  diagonalization matrix  symmetric orthogonal matrices  hermitian unitary matrices  quadratic forms
 105 , 1 , matrix theory honors version 21 241  matrix algebra linear transformations  students greater aptitude motivation  more emphasis will be placed writing proofs  topics be covered  complex numbers  real complex vectors matrices  rowspace columnspace matrix  rank nullity  solving linear systems by row reduction matrix  inverse matrices determinants  change basis  linear transformations  inner product vectors  orthonormal bases gram schmidt process  eigenvectors eigenvalues  diagonalization matrix  symmetric orthogonal matrices  hermitian unitary matrices  quadratic forms vector analysis more emphasis will be placed writing proofs basic geometry topology euclidean space  curves space  arclength  curvature torsion  functions euclidean spaces  limits continuity  partial derivatives  gradients linearization  chain rules  inverse implicit function theorems  geometric applications  higher derivatives  taylor’s theorem  optimization  vector ﬁelds  multiple integrals change variables  leibnitz’s rule  conservative solenoidal vector ﬁelds  divergence curl  surfaces orientability  surface integrals  gauss green theorems stokes’s theorem
 106 , 0 , vector analysis more emphasis will be placed writing proofs basic geometry topology euclidean space  curves space  arclength  curvature torsion  functions euclidean spaces  limits continuity  partial derivatives  gradients linearization  chain rules  inverse implicit function theorems  geometric applications  higher derivatives  taylor’s theorem  optimization  vector ﬁelds  multiple integrals change variables  leibnitz’s rule  conservative solenoidal vector ﬁelds  divergence curl  surfaces orientability  surface integrals  gauss green theorems stokes’s theorem matrix theory honors version 21 241  matrix algebra linear transformations  students greater aptitude motivation  more emphasis will be placed writing proofs  topics be covered  complex numbers  real complex vectors matrices  rowspace columnspace matrix  rank nullity  solving linear systems by row reduction matrix  inverse matrices determinants  change basis  linear transformations  inner product vectors  orthonormal bases gram schmidt process  eigenvectors eigenvalues  diagonalization matrix  symmetric orthogonal matrices  hermitian unitary matrices  quadratic forms
 107 , 1 ,  probability computing  probability computing  verifying matrix multiplication  probability basics  modeling  deﬁnitions  conditioning 1 1 1 3  independence  law total probability  birthday “paradox” 1 4 1 7  generating testing primes  random variables 2 1  random variables  expectation linearity thereof  2 2 2 4 probability mass functions  pmfs   joint pmfs  conditional expectation  independent r v ’s  2 5 2 8 binomial geometric r v ’s  indicator r v’s  applications linearity expectation  max cut  updating minimum  etc   deviation expectation  markov’s inequality  5 1 chebyshev’s inequality  variance standard deviation  chernoﬀ hoeﬀding’s concentration inequalities 5 2 5 3  chernoﬀ + union bound  application sampling  load balancing  balls bins  poisson distribution 6 1  applications  hashing  ﬁngerprinting  bloom ﬁlters  random graphs  markov chains  discrete time ﬁnite 7 1 7 3  finite state markov chains conclusion 7 4 markov chain applications  pagerank metropolis introduction continuous random variables 3 1 3 2  joint continuous random variables 3 4  exponential distribution  poisson process 6 2  continuous time markov chains 7 5 7 6  introduction queuing theory  gaussian random variables 3 3  central limit theorem 5 4 introduction statistical inference  probability mathematical statistics  topics include maximum likelihood estimation  confidence intervals  hypothesis testing  linear regression analysis variance
 108 , 0 , introduction statistical inference  probability mathematical statistics  topics include maximum likelihood estimation  confidence intervals  hypothesis testing  linear regression analysis variance  probability computing  probability computing  verifying matrix multiplication  probability basics  modeling  deﬁnitions  conditioning 1 1 1 3  independence  law total probability  birthday “paradox” 1 4 1 7  generating testing primes  random variables 2 1  random variables  expectation linearity thereof  2 2 2 4 probability mass functions  pmfs   joint pmfs  conditional expectation  independent r v ’s  2 5 2 8 binomial geometric r v ’s  indicator r v’s  applications linearity expectation  max cut  updating minimum  etc   deviation expectation  markov’s inequality  5 1 chebyshev’s inequality  variance standard deviation  chernoﬀ hoeﬀding’s concentration inequalities 5 2 5 3  chernoﬀ + union bound  application sampling  load balancing  balls bins  poisson distribution 6 1  applications  hashing  ﬁngerprinting  bloom ﬁlters  random graphs  markov chains  discrete time ﬁnite 7 1 7 3  finite state markov chains conclusion 7 4 markov chain applications  pagerank metropolis introduction continuous random variables 3 1 3 2  joint continuous random variables 3 4  exponential distribution  poisson process 6 2  continuous time markov chains 7 5 7 6  introduction queuing theory  gaussian random variables 3 3  central limit theorem 5 4
 109 , 1 , probability probability spaces  random variables  random vectors  multivariate densities  distributions  expectations  sampling simulation  independence  conditioning  conditional distributions expectations  limit theorems strong law large numbers central limit theorem  well additional topics large deviations  random walks markov chains machine learning overview learning concept learning  version spaces  inductive bias tutorial information theory decision trees  overfitting  occam razor review probability theory  linear regression neural networks review statistical estimation hypothesis testing machine learning bayesian learning  map ml  bayes optimal classifiers  gibbs sampling  mdl naive bayes graphical models spring carnival by dr  drew bagnell imitation learning hmm  em minimum description length  instance based learning  knn  locally weighted regression kernel based methods  maximum margin classifiers  bagging  boosting
 110 , 0 , machine learning overview learning concept learning  version spaces  inductive bias tutorial information theory decision trees  overfitting  occam razor review probability theory  linear regression neural networks review statistical estimation hypothesis testing machine learning bayesian learning  map ml  bayes optimal classifiers  gibbs sampling  mdl naive bayes graphical models spring carnival by dr  drew bagnell imitation learning hmm  em minimum description length  instance based learning  knn  locally weighted regression kernel based methods  maximum margin classifiers  bagging  boosting probability probability spaces  random variables  random vectors  multivariate densities  distributions  expectations  sampling simulation  independence  conditioning  conditional distributions expectations  limit theorems strong law large numbers central limit theorem  well additional topics large deviations  random walks markov chains
 111 , 1 , probability probability spaces  random variables  random vectors  multivariate densities  distributions  expectations  sampling simulation  independence  conditioning  conditional distributions expectations  limit theorems strong law large numbers central limit theorem  well additional topics large deviations  random walks markov chains introduction statistical inference  probability mathematical statistics  topics include maximum likelihood estimation  confidence intervals  hypothesis testing  linear regression analysis variance
 112 , 0 , introduction statistical inference  probability mathematical statistics  topics include maximum likelihood estimation  confidence intervals  hypothesis testing  linear regression analysis variance probability probability spaces  random variables  random vectors  multivariate densities  distributions  expectations  sampling simulation  independence  conditioning  conditional distributions expectations  limit theorems strong law large numbers central limit theorem  well additional topics large deviations  random walks markov chains
 113 , 1 , probability theory random processes  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  limit theorems  introduction random processes some elementary ideas spectral analysis information theory will be given machine learning overview learning concept learning  version spaces  inductive bias tutorial information theory decision trees  overfitting  occam razor review probability theory  linear regression neural networks review statistical estimation hypothesis testing machine learning bayesian learning  map ml  bayes optimal classifiers  gibbs sampling  mdl naive bayes graphical models spring carnival by dr  drew bagnell imitation learning hmm  em minimum description length  instance based learning  knn  locally weighted regression kernel based methods  maximum margin classifiers  bagging  boosting
 114 , 0 , machine learning overview learning concept learning  version spaces  inductive bias tutorial information theory decision trees  overfitting  occam razor review probability theory  linear regression neural networks review statistical estimation hypothesis testing machine learning bayesian learning  map ml  bayes optimal classifiers  gibbs sampling  mdl naive bayes graphical models spring carnival by dr  drew bagnell imitation learning hmm  em minimum description length  instance based learning  knn  locally weighted regression kernel based methods  maximum margin classifiers  bagging  boosting probability theory random processes  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  limit theorems  introduction random processes some elementary ideas spectral analysis information theory will be given
 115 , 1 , probability theory random processes  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  limit theorems  introduction random processes some elementary ideas spectral analysis information theory will be given introduction statistical inference  probability mathematical statistics  topics include maximum likelihood estimation  confidence intervals  hypothesis testing  linear regression analysis variance
 116 , 0 , introduction statistical inference  probability mathematical statistics  topics include maximum likelihood estimation  confidence intervals  hypothesis testing  linear regression analysis variance probability theory random processes  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  limit theorems  introduction random processes some elementary ideas spectral analysis information theory will be given
 117 , 1 ,  introduction probability theory  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  law large numbers  central limit theorem machine learning overview learning concept learning  version spaces  inductive bias tutorial information theory decision trees  overfitting  occam razor review probability theory  linear regression neural networks review statistical estimation hypothesis testing machine learning bayesian learning  map ml  bayes optimal classifiers  gibbs sampling  mdl naive bayes graphical models spring carnival by dr  drew bagnell imitation learning hmm  em minimum description length  instance based learning  knn  locally weighted regression kernel based methods  maximum margin classifiers  bagging  boosting
 118 , 0 , machine learning overview learning concept learning  version spaces  inductive bias tutorial information theory decision trees  overfitting  occam razor review probability theory  linear regression neural networks review statistical estimation hypothesis testing machine learning bayesian learning  map ml  bayes optimal classifiers  gibbs sampling  mdl naive bayes graphical models spring carnival by dr  drew bagnell imitation learning hmm  em minimum description length  instance based learning  knn  locally weighted regression kernel based methods  maximum margin classifiers  bagging  boosting  introduction probability theory  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  law large numbers  central limit theorem
 119 , 1 ,  introduction probability theory  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  law large numbers  central limit theorem introduction statistical inference  probability mathematical statistics  topics include maximum likelihood estimation  confidence intervals  hypothesis testing  linear regression analysis variance
 120 , 0 , introduction statistical inference  probability mathematical statistics  topics include maximum likelihood estimation  confidence intervals  hypothesis testing  linear regression analysis variance  introduction probability theory  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  law large numbers  central limit theorem
 121 , 1 , intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic database db applications  readings      introduction  r g chapter             1   sample sqlite3 database  see                 readme txt file      entity relationship model     relational model     relational algebra     relational calculus     sql  query language part     sql  query language part     2 r g chapter 5   sql      part 3   app  development  r g chapter 6   code example     storing data disks      buffers  files     tree structured indexes     file organizations   indexing     hashing     sorting   query evaluation relational operators       relational operators continued  same foils  r g             chapter 12 14   review      query optimization  r g chapter 15 plus system r             optimizer   selinger paper     schema refinement normalization      schema refinement normalization              physical database design tuning  r g chapter 20      database design methodology  not book   methodology     transaction overview concurrency control     concurrency control part 2     concurrency control part 3     logging recovery part 1 logging recovery part 2     spatial data     data warehousing data mining distr  dbmss bonus multimedia db
 122 , 0 , database db applications  readings      introduction  r g chapter             1   sample sqlite3 database  see                 readme txt file      entity relationship model     relational model     relational algebra     relational calculus     sql  query language part     sql  query language part     2 r g chapter 5   sql      part 3   app  development  r g chapter 6   code example     storing data disks      buffers  files     tree structured indexes     file organizations   indexing     hashing     sorting   query evaluation relational operators       relational operators continued  same foils  r g             chapter 12 14   review      query optimization  r g chapter 15 plus system r             optimizer   selinger paper     schema refinement normalization      schema refinement normalization              physical database design tuning  r g chapter 20      database design methodology  not book   methodology     transaction overview concurrency control     concurrency control part 2     concurrency control part 3     logging recovery part 1 logging recovery part 2     spatial data     data warehousing data mining distr  dbmss bonus multimedia db intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic
 123 , 1 , intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic computer graphics   basic graphics programming    interaction    transformations    viewing projection    hierarchical modeling    lighting shading    shading opengl    curves surfaces    texture mapping [i  graham]    splines    programmable shading hardware    physically based modelling [c  twigg]    clipping    rasterization    image processing    ray tracing    spatial data structures    dynamics monsters  inc     radiosity    global illumination    visualization    non photorealistic rendering    animation    advanced global illumination    computer games
 124 , 0 , computer graphics   basic graphics programming    interaction    transformations    viewing projection    hierarchical modeling    lighting shading    shading opengl    curves surfaces    texture mapping [i  graham]    splines    programmable shading hardware    physically based modelling [c  twigg]    clipping    rasterization    image processing    ray tracing    spatial data structures    dynamics monsters  inc     radiosity    global illumination    visualization    non photorealistic rendering    animation    advanced global illumination    computer games intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic
 125 , 1 , intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic computer graphics   basic graphics programming    interaction    transformations    viewing projection    hierarchical modeling    lighting shading    shading opengl    curves surfaces    texture mapping [i  graham]    splines    programmable shading hardware    physically based modelling [c  twigg]    clipping    rasterization    image processing    ray tracing    spatial data structures    dynamics monsters  inc     radiosity    global illumination    visualization    non photorealistic rendering    animation    advanced global illumination    computer games
 126 , 0 , computer graphics   basic graphics programming    interaction    transformations    viewing projection    hierarchical modeling    lighting shading    shading opengl    curves surfaces    texture mapping [i  graham]    splines    programmable shading hardware    physically based modelling [c  twigg]    clipping    rasterization    image processing    ray tracing    spatial data structures    dynamics monsters  inc     radiosity    global illumination    visualization    non photorealistic rendering    animation    advanced global illumination    computer games intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic
 127 , 1 , types  literals  variables  operators  expressions program structure control flow program structure control flow data structures  sequences program properties problem solving top down design efficiency optional advanced  countability halting problem optional advanced  complexity np completeness optional advanced  sorting algorithms  quicksort + radixsort  1d lists tuples optional advanced  matrices gaussian elimination 2d lists + 2d list case studies  wordsearch  connect4  othello  sets maps  dictionaries  exceptions optional advanced  priority queues  heapsort  huffman coding case studies   1 player ai  bfs a*   grayscale  steganography 2 player ai  minimax  alpha beta  functions redux animation animation case study   snake object oriented programming  recursion  getting started  [not midterm2] term assignment quick tour python libraries  modules  applications miscellaneous tkinter python demos arduino raspberry pi recursion  recursion  writing programming language princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection
 128 , 0 , princiles imperative computation ints while       loops arrays         recitationg   integers linear        search        recitation   more                    c0          operators     reasoning   arrays       loops binary        search        sorting                asymptotic    complexity   recitation   c0           debugging     big         o          binary  search   debugging quicksort      recitation   unit         testing       big         o stacks                 queues         recitation   interfaces   struct pointers       testing       methodology   unbounded     arrays        recitation   amortized    analysis hash          tables        recitation   hashing interfaces     recitation   hashing      backtracking  search midterm       exam         sample        solution binary        search       trees          recitation   binary       search        trees priority      queues        recitation   priority     queues restoring     invariants    recitation   heaps                  heapsort memory           avl           trees         types                   c              tries          polymorphism   virtual       machines      search                  graphs spanning      trees union find garbage       collection types  literals  variables  operators  expressions program structure control flow program structure control flow data structures  sequences program properties problem solving top down design efficiency optional advanced  countability halting problem optional advanced  complexity np completeness optional advanced  sorting algorithms  quicksort + radixsort  1d lists tuples optional advanced  matrices gaussian elimination 2d lists + 2d list case studies  wordsearch  connect4  othello  sets maps  dictionaries  exceptions optional advanced  priority queues  heapsort  huffman coding case studies   1 player ai  bfs a*   grayscale  steganography 2 player ai  minimax  alpha beta  functions redux animation animation case study   snake object oriented programming  recursion  getting started  [not midterm2] term assignment quick tour python libraries  modules  applications miscellaneous tkinter python demos arduino raspberry pi recursion  recursion  writing programming language
 129 , 1 , types  literals  variables  operators  expressions program structure control flow program structure control flow data structures  sequences program properties problem solving top down design efficiency optional advanced  countability halting problem optional advanced  complexity np completeness optional advanced  sorting algorithms  quicksort + radixsort  1d lists tuples optional advanced  matrices gaussian elimination 2d lists + 2d list case studies  wordsearch  connect4  othello  sets maps  dictionaries  exceptions optional advanced  priority queues  heapsort  huffman coding case studies   1 player ai  bfs a*   grayscale  steganography 2 player ai  minimax  alpha beta  functions redux animation animation case study   snake object oriented programming  recursion  getting started  [not midterm2] term assignment quick tour python libraries  modules  applications miscellaneous tkinter python demos arduino raspberry pi recursion  recursion  writing programming language introduction computer music digital audio sal language unit generators instruments scores sampling theory frequency domain   am fm 1 fm 2   behavioral abstraction scoregen macro patterns sal algorithmic composition part 1 algorithmic composition part 2 programming techniques nyquist granular synthesis roads 117 133 filters midterm spectral processing voice synthesis 1  cross synthesis  voice synthesis 2 acoustics  perception filters reverb delay  physical models 1 physical models 2  spectral interpolation synthesis  algorithmic dsp  3d sound  doppler shift  multi speakers audio compression spring carnival max msp   ali momeni     music understanding
 130 , 0 , introduction computer music digital audio sal language unit generators instruments scores sampling theory frequency domain   am fm 1 fm 2   behavioral abstraction scoregen macro patterns sal algorithmic composition part 1 algorithmic composition part 2 programming techniques nyquist granular synthesis roads 117 133 filters midterm spectral processing voice synthesis 1  cross synthesis  voice synthesis 2 acoustics  perception filters reverb delay  physical models 1 physical models 2  spectral interpolation synthesis  algorithmic dsp  3d sound  doppler shift  multi speakers audio compression spring carnival max msp   ali momeni     music understanding types  literals  variables  operators  expressions program structure control flow program structure control flow data structures  sequences program properties problem solving top down design efficiency optional advanced  countability halting problem optional advanced  complexity np completeness optional advanced  sorting algorithms  quicksort + radixsort  1d lists tuples optional advanced  matrices gaussian elimination 2d lists + 2d list case studies  wordsearch  connect4  othello  sets maps  dictionaries  exceptions optional advanced  priority queues  heapsort  huffman coding case studies   1 player ai  bfs a*   grayscale  steganography 2 player ai  minimax  alpha beta  functions redux animation animation case study   snake object oriented programming  recursion  getting started  [not midterm2] term assignment quick tour python libraries  modules  applications miscellaneous tkinter python demos arduino raspberry pi recursion  recursion  writing programming language
 131 , 1 , types  literals  variables  operators  expressions program structure control flow program structure control flow data structures  sequences program properties problem solving top down design efficiency optional advanced  countability halting problem optional advanced  complexity np completeness optional advanced  sorting algorithms  quicksort + radixsort  1d lists tuples optional advanced  matrices gaussian elimination 2d lists + 2d list case studies  wordsearch  connect4  othello  sets maps  dictionaries  exceptions optional advanced  priority queues  heapsort  huffman coding case studies   1 player ai  bfs a*   grayscale  steganography 2 player ai  minimax  alpha beta  functions redux animation animation case study   snake object oriented programming  recursion  getting started  [not midterm2] term assignment quick tour python libraries  modules  applications miscellaneous tkinter python demos arduino raspberry pi recursion  recursion  writing programming language great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness
 132 , 0 , great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness types  literals  variables  operators  expressions program structure control flow program structure control flow data structures  sequences program properties problem solving top down design efficiency optional advanced  countability halting problem optional advanced  complexity np completeness optional advanced  sorting algorithms  quicksort + radixsort  1d lists tuples optional advanced  matrices gaussian elimination 2d lists + 2d list case studies  wordsearch  connect4  othello  sets maps  dictionaries  exceptions optional advanced  priority queues  heapsort  huffman coding case studies   1 player ai  bfs a*   grayscale  steganography 2 player ai  minimax  alpha beta  functions redux animation animation case study   snake object oriented programming  recursion  getting started  [not midterm2] term assignment quick tour python libraries  modules  applications miscellaneous tkinter python demos arduino raspberry pi recursion  recursion  writing programming language
 133 , 1 , types  literals  variables  operators  expressions program structure control flow program structure control flow data structures  sequences program properties problem solving top down design efficiency optional advanced  countability halting problem optional advanced  complexity np completeness optional advanced  sorting algorithms  quicksort + radixsort  1d lists tuples optional advanced  matrices gaussian elimination 2d lists + 2d list case studies  wordsearch  connect4  othello  sets maps  dictionaries  exceptions optional advanced  priority queues  heapsort  huffman coding case studies   1 player ai  bfs a*   grayscale  steganography 2 player ai  minimax  alpha beta  functions redux animation animation case study   snake object oriented programming  recursion  getting started  [not midterm2] term assignment quick tour python libraries  modules  applications miscellaneous tkinter python demos arduino raspberry pi recursion  recursion  writing programming language computational neuroscience  visual computation biological systems does mean see    overview visual nervous system  basic anatomy  physiology  multi resolution laplacian analysis  does neuron   synapses system response  fourier analysis  system analysis  adaptation contrast normalization   v1 physiology gabor functions   wavelet analysis texture perception   hebbian learning principal components   information theory coding  independent component analysis   natural  scene statistics   edge detection image segmentation  scene statistics contour grouping  markov random field segmentation  mrf belief propagation  scene recognition  feature selection  boosting  sift  recognition hierarchy  attention context  mt motion physiology  computational modeling motion  unsupervised object learning  tom stepleton   3d scene statistics 3d inference  brian potetz
 134 , 0 , computational neuroscience  visual computation biological systems does mean see    overview visual nervous system  basic anatomy  physiology  multi resolution laplacian analysis  does neuron   synapses system response  fourier analysis  system analysis  adaptation contrast normalization   v1 physiology gabor functions   wavelet analysis texture perception   hebbian learning principal components   information theory coding  independent component analysis   natural  scene statistics   edge detection image segmentation  scene statistics contour grouping  markov random field segmentation  mrf belief propagation  scene recognition  feature selection  boosting  sift  recognition hierarchy  attention context  mt motion physiology  computational modeling motion  unsupervised object learning  tom stepleton   3d scene statistics 3d inference  brian potetz types  literals  variables  operators  expressions program structure control flow program structure control flow data structures  sequences program properties problem solving top down design efficiency optional advanced  countability halting problem optional advanced  complexity np completeness optional advanced  sorting algorithms  quicksort + radixsort  1d lists tuples optional advanced  matrices gaussian elimination 2d lists + 2d list case studies  wordsearch  connect4  othello  sets maps  dictionaries  exceptions optional advanced  priority queues  heapsort  huffman coding case studies   1 player ai  bfs a*   grayscale  steganography 2 player ai  minimax  alpha beta  functions redux animation animation case study   snake object oriented programming  recursion  getting started  [not midterm2] term assignment quick tour python libraries  modules  applications miscellaneous tkinter python demos arduino raspberry pi recursion  recursion  writing programming language
 135 , 1 , types  literals  variables  operators  expressions program structure control flow program structure control flow data structures  sequences program properties problem solving top down design efficiency optional advanced  countability halting problem optional advanced  complexity np completeness optional advanced  sorting algorithms  quicksort + radixsort  1d lists tuples optional advanced  matrices gaussian elimination 2d lists + 2d list case studies  wordsearch  connect4  othello  sets maps  dictionaries  exceptions optional advanced  priority queues  heapsort  huffman coding case studies   1 player ai  bfs a*   grayscale  steganography 2 player ai  minimax  alpha beta  functions redux animation animation case study   snake object oriented programming  recursion  getting started  [not midterm2] term assignment quick tour python libraries  modules  applications miscellaneous tkinter python demos arduino raspberry pi recursion  recursion  writing programming language computational perception biology perception   perception illusion     philosophy  history senses     retinal computation tunings      linear system  fourier transform  pyramid     striate extrastriate cortex     simple cell image representation      art perception     models perception     efficient sparse codes     models lightness perception  retinex intrinsic       electric fish perception       shape shading        binocular stereo       perceptual organization      texture perception      motion recognition      object recognition      scene  context attention
 136 , 0 , computational perception biology perception   perception illusion     philosophy  history senses     retinal computation tunings      linear system  fourier transform  pyramid     striate extrastriate cortex     simple cell image representation      art perception     models perception     efficient sparse codes     models lightness perception  retinex intrinsic       electric fish perception       shape shading        binocular stereo       perceptual organization      texture perception      motion recognition      object recognition      scene  context attention types  literals  variables  operators  expressions program structure control flow program structure control flow data structures  sequences program properties problem solving top down design efficiency optional advanced  countability halting problem optional advanced  complexity np completeness optional advanced  sorting algorithms  quicksort + radixsort  1d lists tuples optional advanced  matrices gaussian elimination 2d lists + 2d list case studies  wordsearch  connect4  othello  sets maps  dictionaries  exceptions optional advanced  priority queues  heapsort  huffman coding case studies   1 player ai  bfs a*   grayscale  steganography 2 player ai  minimax  alpha beta  functions redux animation animation case study   snake object oriented programming  recursion  getting started  [not midterm2] term assignment quick tour python libraries  modules  applications miscellaneous tkinter python demos arduino raspberry pi recursion  recursion  writing programming language
 137 , 1 , types  literals  variables  operators  expressions program structure control flow program structure control flow data structures  sequences program properties problem solving top down design efficiency optional advanced  countability halting problem optional advanced  complexity np completeness optional advanced  sorting algorithms  quicksort + radixsort  1d lists tuples optional advanced  matrices gaussian elimination 2d lists + 2d list case studies  wordsearch  connect4  othello  sets maps  dictionaries  exceptions optional advanced  priority queues  heapsort  huffman coding case studies   1 player ai  bfs a*   grayscale  steganography 2 player ai  minimax  alpha beta  functions redux animation animation case study   snake object oriented programming  recursion  getting started  [not midterm2] term assignment quick tour python libraries  modules  applications miscellaneous tkinter python demos arduino raspberry pi recursion  recursion  writing programming language introduction data structures java fast review java more java  review using objects  string  math  random classes arrays   arraylists arrays   arraylists  linked lists linked lists recursion recursion algorithm analysis  big o algorithm analysis  big o inheritance  abstract classes  interfaces desing implementation classes desing implementation classes stacks  searching algorithms sorting algorithms binary trees binary trees   lists   iterators bts   bsts maps  sets iterators   maps hash tables hash tables heaps   treesort graphs graphs
 138 , 0 , introduction data structures java fast review java more java  review using objects  string  math  random classes arrays   arraylists arrays   arraylists  linked lists linked lists recursion recursion algorithm analysis  big o algorithm analysis  big o inheritance  abstract classes  interfaces desing implementation classes desing implementation classes stacks  searching algorithms sorting algorithms binary trees binary trees   lists   iterators bts   bsts maps  sets iterators   maps hash tables hash tables heaps   treesort graphs graphs types  literals  variables  operators  expressions program structure control flow program structure control flow data structures  sequences program properties problem solving top down design efficiency optional advanced  countability halting problem optional advanced  complexity np completeness optional advanced  sorting algorithms  quicksort + radixsort  1d lists tuples optional advanced  matrices gaussian elimination 2d lists + 2d list case studies  wordsearch  connect4  othello  sets maps  dictionaries  exceptions optional advanced  priority queues  heapsort  huffman coding case studies   1 player ai  bfs a*   grayscale  steganography 2 player ai  minimax  alpha beta  functions redux animation animation case study   snake object oriented programming  recursion  getting started  [not midterm2] term assignment quick tour python libraries  modules  applications miscellaneous tkinter python demos arduino raspberry pi recursion  recursion  writing programming language
 139 , 1 , intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic operating system design implementation intro kernel abstraction os structures o overview software layers process ipc client server process deadlock intro  assigned wave 2 synchronization transactions deadlock threads main memory memory virtual memory scheduling mass storage structure file system interface file system implementation protection security distributed file systems
 140 , 0 , operating system design implementation intro kernel abstraction os structures o overview software layers process ipc client server process deadlock intro  assigned wave 2 synchronization transactions deadlock threads main memory memory virtual memory scheduling mass storage structure file system interface file system implementation protection security distributed file systems intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic
 141 , 1 , intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic compiler design   instruction selection    register allocation    liveness analysis    dataflow analysis    static single assignment form    lexical analysis    context free grammars    predictive parsing    intermediate representation    calling conventions    static semantics    dynamic semantics    mutable store    structs    basic optimizations   loop optimizations    array bounds checking     memory optimizations     decompilation   garbage collection     incremental collection     low level virtual machine     polymorphism   session typed concurrency   code obfuscation        jit compilation
 142 , 0 , compiler design   instruction selection    register allocation    liveness analysis    dataflow analysis    static single assignment form    lexical analysis    context free grammars    predictive parsing    intermediate representation    calling conventions    static semantics    dynamic semantics    mutable store    structs    basic optimizations   loop optimizations    array bounds checking     memory optimizations     decompilation   garbage collection     incremental collection     low level virtual machine     polymorphism   session typed concurrency   code obfuscation        jit compilation intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic
 143 , 1 , intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic parallel computer architecture programming why parallelism      modern multi core processor  forms parallelism + latency   bandwidth issues parallel programming models  corresponding hw arch  parallel programming basics  parallelization process      program optimization  achieving workload balance     gpu architecture cuda programming performance optimization  locality communication      parallel application case studies     workload driven architecture evaluation     snooping cache coherence     snooping cache coherence directory based cache coherence  + openmp tutorial  directory based cache coherence  + begin memory consistency  relaxed memory consistency  + exam review      mpi introduction + fireside chat  do grades matter      basic snooping based multiprocessor design     more sophisticated snooping based multiprocessor design interconnection network design  by michael papamichael  basic synchronization  locks barriers      transactional memory     scaling web site  scale out parallelism  elasticity  caching     heterogeneous parallelism hardware specialization     domain specific parallel programming     implementing scan segmented scan  + fun  nt method      parallel real time rendering     course recap presentation tips     parallelism competition
 144 , 0 , parallel computer architecture programming why parallelism      modern multi core processor  forms parallelism + latency   bandwidth issues parallel programming models  corresponding hw arch  parallel programming basics  parallelization process      program optimization  achieving workload balance     gpu architecture cuda programming performance optimization  locality communication      parallel application case studies     workload driven architecture evaluation     snooping cache coherence     snooping cache coherence directory based cache coherence  + openmp tutorial  directory based cache coherence  + begin memory consistency  relaxed memory consistency  + exam review      mpi introduction + fireside chat  do grades matter      basic snooping based multiprocessor design     more sophisticated snooping based multiprocessor design interconnection network design  by michael papamichael  basic synchronization  locks barriers      transactional memory     scaling web site  scale out parallelism  elasticity  caching     heterogeneous parallelism hardware specialization     domain specific parallel programming     implementing scan segmented scan  + fun  nt method      parallel real time rendering     course recap presentation tips     parallelism competition intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic
 145 , 1 , intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic distributed systems communication 1  internet day  day 1  communication 2  internet day  day 2  consistency classical synchronization + go style synchronization  remote procedure calls  distributed filesystems  distributed filesystems 2 afs  coda  callbacks  time synchronization  distributed mutual exclusion  fault tolerance  detecting correcting local faults  concurrency control  raid  logging crash recovery  consistent hashing name by hash  distributed replication  distributed replication  continued       data intensive computing mapreduce hadoop      distributed filesystems mapreduce   hdfs      dns content delivery networks      peer peer      virtual machines      byzantine fault tolerance      security protocols      case study anonymous routing tor      epaxos
 146 , 0 , distributed systems communication 1  internet day  day 1  communication 2  internet day  day 2  consistency classical synchronization + go style synchronization  remote procedure calls  distributed filesystems  distributed filesystems 2 afs  coda  callbacks  time synchronization  distributed mutual exclusion  fault tolerance  detecting correcting local faults  concurrency control  raid  logging crash recovery  consistent hashing name by hash  distributed replication  distributed replication  continued       data intensive computing mapreduce hadoop      distributed filesystems mapreduce   hdfs      dns content delivery networks      peer peer      virtual machines      byzantine fault tolerance      security protocols      case study anonymous routing tor      epaxos intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic
 147 , 1 , intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic computer networks protocol stacks layering  life  liberty  pursuit   sockets   application layer examples  physical layer  sockets   concurrency 1 q   coding error control  datalink ethernet  version control  bridging  addressing forwarding  ip forwarding   addressing  http parsing  testing trenches  nats   tunnels   translation  routing  learning pythonic way  routing hierarchy bgp  virtual connections friends  angels  openssl  d emons  transport tcp  tcp details  performance future tcp  web  peer peer  cdns  web  peer peer  cdns  no such thing tcp  tcp congestion control  web  peer peer  cdns  qos  bittyrant  strategic bittorrent client  video streaming  security 1  security 2  wireless mobile  protocol security  wireless mobile  wireless  mobile last mile  last mile
 148 , 0 , computer networks protocol stacks layering  life  liberty  pursuit   sockets   application layer examples  physical layer  sockets   concurrency 1 q   coding error control  datalink ethernet  version control  bridging  addressing forwarding  ip forwarding   addressing  http parsing  testing trenches  nats   tunnels   translation  routing  learning pythonic way  routing hierarchy bgp  virtual connections friends  angels  openssl  d emons  transport tcp  tcp details  performance future tcp  web  peer peer  cdns  web  peer peer  cdns  no such thing tcp  tcp congestion control  web  peer peer  cdns  qos  bittyrant  strategic bittorrent client  video streaming  security 1  security 2  wireless mobile  protocol security  wireless mobile  wireless  mobile last mile  last mile intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic
 149 , 1 , intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions
 150 , 0 , integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic
 151 , 1 , intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic search engines web mining  introduction text search text representation search engine indexes information needs queries vector space retrieval model probabilistic retrieval models probabilistic retrieval models evaluating search effectiveness evaluating search effectiveness index construction index construction search log analysis search log analysis clustering clustering collaborative filtering  collaborative filtering text categorization text categorization text categorization text categorization learning rank learning rank significance tests link analysis link analysis query classification  federated search
 152 , 0 , search engines web mining  introduction text search text representation search engine indexes information needs queries vector space retrieval model probabilistic retrieval models probabilistic retrieval models evaluating search effectiveness evaluating search effectiveness index construction index construction search log analysis search log analysis clustering clustering collaborative filtering  collaborative filtering text categorization text categorization text categorization text categorization learning rank learning rank significance tests link analysis link analysis query classification  federated search intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic
 153 , 1 , introduction nlp introduction formal language theory  notation  dfsa  formal language theory  ndfsa  fsa output   morphology finite state machines  part 1   pyfst demo can be downloaded using link  one needs ipython walk through pyfst demo  pyfst installation instructions  morphology finite state machines  part 2  openfst tutorial recitation  example fsa proof  recitation scripts ipython demos  pyfst  formal language theory  ndfsa e   formal language theory  res   recitation  power set construction pumping lemma  sample proof fsa minimization formal language theory  pumping lemma  properties regular languages  formal language theory  context free grammars  formal language theory  pushdown automata  formal language theory  cfgs pdas  recitation  simulation cfg pda  converting cfgs chomsky normal form   recitation slides weighted finite state machines  fsa  fst   slides  notes wfsa wfst best path  special case hmms  applications hmms  pos  ner  chunking  shallow parsing  supersense tagging  alignment best path algorithms  dijkstra viterbi connections between them  parsing cfls  chart parsing cky +   bottom up   parsing cfls  earley parsing algorithm  top down   parsing cfls  shift reduce parsing  lr parser glr parser    recitation  python intro homework 4  dynamic programming   generalized view  solving weighted logic programs  exactly approximately  recitation  dynamic programming complexity analysis   dependency parsing spanning tree algorithms   tree substitution grammar tree adjoining grammar   parsing  unification grammars  first order predicate calculus semantic attachments cfgs  ccg lambda calculus   lexical semantics  propbank  predicate argument structure  frame semantic parsing   recitation  unification  deeper analysis   coreference resolution  discourse structure machine translation probability review  language models  lexical translation models  lexical translation models  l 10  latin noisy channel translation  l 10  mandarin phrase based mt  l 10  russian phrase based mt  evaluation  evaluation  discriminative training  discriminative training  syntax mt  syntax mt  syntax decoding  decoding  synchronous parsing  large scale language modeling  lecturer  kenneth heafield  system combination  morphology mt  topics modeling  nizar habash talk  ghc 6105       example based mt      lecturer  ralf brown      mining parallel data      lecturer  wang ling      quality estimation      commercial mt      bitext++
 154 , 0 , machine translation probability review  language models  lexical translation models  lexical translation models  l 10  latin noisy channel translation  l 10  mandarin phrase based mt  l 10  russian phrase based mt  evaluation  evaluation  discriminative training  discriminative training  syntax mt  syntax mt  syntax decoding  decoding  synchronous parsing  large scale language modeling  lecturer  kenneth heafield  system combination  morphology mt  topics modeling  nizar habash talk  ghc 6105       example based mt      lecturer  ralf brown      mining parallel data      lecturer  wang ling      quality estimation      commercial mt      bitext++ introduction nlp introduction formal language theory  notation  dfsa  formal language theory  ndfsa  fsa output   morphology finite state machines  part 1   pyfst demo can be downloaded using link  one needs ipython walk through pyfst demo  pyfst installation instructions  morphology finite state machines  part 2  openfst tutorial recitation  example fsa proof  recitation scripts ipython demos  pyfst  formal language theory  ndfsa e   formal language theory  res   recitation  power set construction pumping lemma  sample proof fsa minimization formal language theory  pumping lemma  properties regular languages  formal language theory  context free grammars  formal language theory  pushdown automata  formal language theory  cfgs pdas  recitation  simulation cfg pda  converting cfgs chomsky normal form   recitation slides weighted finite state machines  fsa  fst   slides  notes wfsa wfst best path  special case hmms  applications hmms  pos  ner  chunking  shallow parsing  supersense tagging  alignment best path algorithms  dijkstra viterbi connections between them  parsing cfls  chart parsing cky +   bottom up   parsing cfls  earley parsing algorithm  top down   parsing cfls  shift reduce parsing  lr parser glr parser    recitation  python intro homework 4  dynamic programming   generalized view  solving weighted logic programs  exactly approximately  recitation  dynamic programming complexity analysis   dependency parsing spanning tree algorithms   tree substitution grammar tree adjoining grammar   parsing  unification grammars  first order predicate calculus semantic attachments cfgs  ccg lambda calculus   lexical semantics  propbank  predicate argument structure  frame semantic parsing   recitation  unification  deeper analysis   coreference resolution  discourse structure
 155 , 1 , intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic  introduction software engineering introduction  software lifecycle extreme programming estimation planning planning risk risk extreme programming 2 prototyping requirements requirements engineering requirements engineering goal modeling goal modeling just enough uml prototype   requirements  statecharts design  information hiding      coupling cohesion     kwic   design structure     matrices     design patterns     frameworks     software architecture     software architecture     hoare logic     hoare logic  continued     esc java     esc java example     model checking formal     modeling     model checking formal     modeling 2     model checking promela     testing     testing  test selection     code reviews      analysis  prefix     analysis  fluid     cmmi     object oriented design     aspect oriented programming
 156 , 0 ,  introduction software engineering introduction  software lifecycle extreme programming estimation planning planning risk risk extreme programming 2 prototyping requirements requirements engineering requirements engineering goal modeling goal modeling just enough uml prototype   requirements  statecharts design  information hiding      coupling cohesion     kwic   design structure     matrices     design patterns     frameworks     software architecture     software architecture     hoare logic     hoare logic  continued     esc java     esc java example     model checking formal     modeling     model checking formal     modeling 2     model checking promela     testing     testing  test selection     code reviews      analysis  prefix     analysis  fluid     cmmi     object oriented design     aspect oriented programming intro computer systems bits  bytes  ints  1 bits  bytes  ints  2 floating point machine prog  basics  recitation 2  datalab   bomblab machine prog  control machine prog  procedures machine prog  data  machine prog  advanced  memory hierarchy cache memories ecf  exceptions   processes ecf  signals   nonlocal jumps  linking system level o virtual memory  concepts virtual memory  systems dynamic memory allocation  basic dynamic memory allocation  advanced internetworking network programming  concurrent programming synchronization  basic  synchronization  advanced web services advanced special topic
 157 , 1 , introduction statistical inference  probability mathematical statistics  topics include maximum likelihood estimation  confidence intervals  hypothesis testing  linear regression analysis variance modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences
 158 , 0 , modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences introduction statistical inference  probability mathematical statistics  topics include maximum likelihood estimation  confidence intervals  hypothesis testing  linear regression analysis variance
 159 , 1 , introduction statistical inference  probability mathematical statistics  topics include maximum likelihood estimation  confidence intervals  hypothesis testing  linear regression analysis variance statistical graphics visualization graph principles 1 d categorical data lab 2  1 d categorical data comparisons 1 d categorical 1 d continuous data lab 3  1 d categorical data  1 d continuous data 1 d continuous data 1 d continuous data lab 4  1 d continuous data 1 d continuous data comparisons 1 d continuous data lab 5  1 d continuous data 2 d categorical data 2 d categorical data  lab exam 1 out lab session  practice session review lab 6  2d categorical data 2 d continuous data 2 d densities  visualizing missingness longitudinal data  time series  trends time series  oscillations differences  lab 7  longitudinal data  time series 3 d data conditioning plots lab 8  3 d  conditioning high dimensional structure projections high d data lab 9  high dimensional structure  lab exam 2 out high dimensions
 160 , 0 , statistical graphics visualization graph principles 1 d categorical data lab 2  1 d categorical data comparisons 1 d categorical 1 d continuous data lab 3  1 d categorical data  1 d continuous data 1 d continuous data 1 d continuous data lab 4  1 d continuous data 1 d continuous data comparisons 1 d continuous data lab 5  1 d continuous data 2 d categorical data 2 d categorical data  lab exam 1 out lab session  practice session review lab 6  2d categorical data 2 d continuous data 2 d densities  visualizing missingness longitudinal data  time series  trends time series  oscillations differences  lab 7  longitudinal data  time series 3 d data conditioning plots lab 8  3 d  conditioning high dimensional structure projections high d data lab 9  high dimensional structure  lab exam 2 out high dimensions introduction statistical inference  probability mathematical statistics  topics include maximum likelihood estimation  confidence intervals  hypothesis testing  linear regression analysis variance
 161 , 1 , modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences undergraduate advanced data analysis regression introduction  regression statistics branch mathematical engineering which designs analyzes methods learning imperfect data  regression statistical model functional relationships between variables  getting relationships right means being able predict well  least squares optimal prediction expectation value  conditional expectation function regression function  regression function must be estimated data  bias variance trade off controls estimation  ordinary least squares revisited smoothing method  other linear smoothers  nearest neighbor averaging  kernel weighted averaging  reading  notes  chapter 1  examples dat running example  ckm csv data set optional exercises   cox donnelly  chapter 1 optional reading  faraway  chapter 1  especially up p  17  homework 1  assignment  data january 17  thursday   2  truth about linear regression using taylor theorem justify linear regression locally  collinearity  consistency ordinary least squares estimates under weak conditions  linear regression coefficients will change distribution input variables  examples  why r2 usually distraction  linear regression coefficients will change distribution unobserved variables  omitted variable effects   errors variables  transformations inputs outputs  utility probabilistic assumptions  importance looking residuals  really means when coefficients are significantly non zero   controlled linear regression  really means  optional reading  faraway  rest chapter 1 january 22  tuesday   3  evaluation  error inference statistical models have three main uses  ways summarizing  reducing  compressing  data  scientific models  facilitating actually scientific inference  predictors  both summarizing scientific inference are linked prediction  though different ways   so ll focus prediction  particular now focus average error prediction  under some particular measure error  distinction between sample error generalization error  why former almost invariably optimistic about latter  over fitting  examples just spectacularly one can over fit really very harmless data  brief sketch ideas learning theory capacity control  data set splitting first attempt practically controlling over fitting  cross validation estimating generalization error model selection  justifying model based inferences  reading  notes  chapter 3  r  cox donnelly  ch  6  blackboard  january 24  thursday   4  smoothing methods regression bias variance trade off tells us much should smooth  adapting unknown roughness cross validation  detailed examples  quickly does kernel smoothing converge truth  using kernel regression multiple inputs  using smoothing automatically discover interactions  plots help interpret multivariate smoothing results  average predictive comparisons  optional readings  faraway  section 11 1  hayfield racine   nonparametric econometrics  np package   gelman pardoe   average predictive comparisons models nonlinearity  interactions  variance components  [pdf] january 29  tuesday   5  simulation simulation  implementing story encoded model  step by step  produce something data like  stochastic models have random components so require some random steps  stochastic models specified through conditional distributions are simulated by chaining together random variables  generate random variables specified distributions  simulation shows us model predicts  expectations  higher moments  correlations  regression functions  sampling distributions   analytical probability calculations are short cuts exhaustive simulation  simulation lets us check aspects model  does data look like typical simulation output  if repeat our exploratory analysis simulation output  do get same results  simulation based estimation  method simulated moments  january 31  thursday   6  bootstrap quantifying uncertainty by looking sampling distributions  bootstrap principle  sampling distributions under good estimate truth are close true sampling distributions  parametric bootstrapping  simulating model  non parametric bootstrapping  re sampling data  special issues regression  re sampling residuals vs  re sampling cases  many examples  when does bootstrap fail  r programs are built around functions  pieces code take inputs arguments  do calculations them  give back outputs return values  most basic use function encapsulate something ve done terminal  so can repeat  make more flexible  assure ourselves function does want do  subject sanity checks   write tests   make functions more flexible  use control structures  so calculation done  not just result  depends argument  r functions can call other functions  lets us break complex problems into simpler steps  passing partial results between functions  programs inevitably have bugs  debugging cycle figuring out bug  finding where your code  fixing  good programming habits make debugging easier  do some tricks  avoiding iteration  re writing code avoid mistakes confusion  be clearer  be more flexible  optional reading  slides 36 350  introduction statistical computing  especially through 15  february 7  thursday   8  heteroskedasticity  weighted least squares  variance estimation weighted least squares estimates  give more emphasis particular data points  heteroskedasticity problems causes inference  weighted least squares gets around problems heteroskedasticity  if know variance function  estimating conditional variance function regression residuals  iterative method estimating regression function variance function together  examples conditional variance estimation  locally constant locally linear modeling  lowess  optional reading  faraway  section 11 3 february 12  tuesday   9  splines kernel regression controls amount smoothing indirectly by bandwidth  why not control irregularity smoothed curve directly  spline smoothing problem penalized least squares problem  minimize mean squared error  plus penalty term proportional average curvature function over space  solution always continuous piecewise cubic polynomial  continuous first second derivatives  altering strength penalty moves along bias variance trade off  pure linear regression one extreme pure interpolation other  changing strength penalty equivalent minimizing mean squared error under constraint average curvature  ensure consistency  penalty constraint should weaken data grows  appropriate size selected by cross validation  example data  including confidence bands  writing splines basis functions  fitting least squares transformations data  plus regularization term  brief look splines multiple dimensions  splines versus kernel regression  optional reading  faraway  section 11 2 february 14  thursday   10  additive models curse dimensionality limits usefulness fully non parametric regression problems many variables  bias remains under control  but variance grows rapidly dimensionality  parametric models do not have problem  but have bias do not let us discover anything about true function  structured constrained non parametric regression compromises  by adding some bias so reduce variance  additive models are example  where each input variable has  partial response function   which add together get total regression function  partial response functions are unconstrained  generalizes linear models but still evades curse dimensionality  fitting additive models done iteratively  starting some initial guess about each partial response function then doing one dimensional smoothing  so guesses correct each other until self consistent solution reached  examples r using california house price data  conclusion  hardly ever any reason prefer linear models additive ones  continued thoughtless use linear regression scandal  optional reading  faraway  chapter 12 february 19  tuesday   11  testing regression specifications non parametric smoothers can be used test parametric models  forms tests  differences in sample performance  differences generalization performance  whether parametric model residuals have expectation zero everywhere  constructing test statistic based sample performance  using bootstrapping parametric model find null distribution test statistic  example where parametric model correctly specified  one where not  cautions interpretation goodness fit tests  why use parametric models all  answers  speed convergence when correctly specified  scientific interpretation parameters  if model actually comes scientific theory  mis specified parametric models can predict better  small sample sizes  than either correctly specified parametric models non parametric smoothers  because favorable bias variance characteristics  example  cox donnelly  chapter 7 12  more about hypothesis testing logic hypothesis testing  significance  power  will believe   shadow  price power  severe tests hypotheses  severity rejection vs  severity acceptance  common abuses  confidence sets  dual  hypothesis tests  crucial role sampling distributions  examples  right wrong  reading  notes  chapter 11 february 26  tuesday   13  logistic regression modeling conditional probabilities  using regression model probabilities  transforming probabilities better regression  logistic regression model  maximum likelihood  numerical maximum likelihood by newton method by iteratively re weighted least squares  comparing logistic regression logistic additive models  reading  notes  chapter 12 optional reading  faraway  chapter 2  omitting sections 2 11 2 12  homework 6 due midnight monday your data set has been e mailed you  february 28  thursday   14  generalized linear models generalized additive models poisson regression counts  iteratively re weighted least squares again  general pattern generalized linear models  over dispersion  generalized additive models  reading  notes  first half chapter 13 optional reading  faraway  section 3 1 chapter 6 march 5  tuesday   15  glm gam examples building weather forecaster snoqualmie falls  wash   logistic regression  exploratory examination data  predicting wet dry days form amount precipitation previous day  first logistic regression model  finding predicted probabilities confidence intervals them  comparison spline smoothing generalized additive model  model comparison test detects significant mis specification  re specifying model  dry days are special  second logistic regression model its comparison data  checking calibration second model  reading  notes  second half chapter 13 optional reading  faraway  chapters 6 7  continued previous  multivariate distributions reminders about multivariate distributions  multivariate gaussian distribution  definition  relation univariate scalar gaussian distribution  effect linear transformations parameters  plotting probability density contours two dimensions  using eigenvalues eigenvectors understand geometry multivariate gaussians  conditional distributions multivariate gaussians linear regression  computational aspects  specifically r  general methods estimating parametric distributional models arbitrary dimensions  moment matching maximum likelihood  asymptotics maximum likelihood  bootstrapping  model comparison by cross validation by likelihood ratio tests  goodness fit by random projection trick  reading  notes  chapter 14 march 12 14  spring break march 19  tuesday   17  density estimation desirability estimating not just conditional means  variances  etc   but whole distribution functions  parametric maximum likelihood solution  if parametric model right  histograms empirical cumulative distribution functions are non parametric ways estimating distribution  do they  glivenko cantelli law convergence empirical distribution functions  k   fundamental theorem statistics   more histograms  they converge right density  if bins keep shrinking but number samples per bin keeps growing  kernel density estimation its properties  convergence true density if bandwidth shrinks right rate  superior performance histograms  curse dimensionality again  example cross country economic data  kernels discrete variables  estimating conditional densities  another example oecd data  some issues likelihood  maximum likelihood  non parametric estimation  reading  notes  chapter 15 homework 7 assignment  n90 pol csv data march 21  thursday   18  relative distributions smooth tests goodness fit applying right cdf continuous random variable makes uniformly distributed  do test whether some variable uniform  smooth test idea  based series expansions log density  asymptotic theory smooth test  choosing basis functions test its order  smooth tests non uniform distributions through transformation  dealing estimated parameters  some examples  non parametric density estimation [0 1]  checking conditional distributions calibration smooth tests  relative distribution idea  comparing whole distributions by seeing where one set samples falls another distribution  relative density its estimation  illustrations relative densities  decomposing shifts relative distributions  reading  notes  chapter 16 optional reading  bera ghosh   neyman smooth test its applications econometrics   handcock morris   relative distribution methods  march 26  tuesday   19  principal components analysis principal components simplest  oldest most robust dimensionality reduction techniques  works by finding line  plane  hyperplane  which passes closest  average  all data points  equivalent maximizing variance projection data line plane hyperplane  actually finding those principal components reduces finding eigenvalues eigenvectors sample covariance matrix  why pca data analytic technique  not form statistical inference  example cars  pca words   latent semantic analysis   example real newspaper articles  visualization pca multidimensional scaling  cautions about pca  perils reification  illustration genetic maps  reading  notes  chapter 17  pca r  pca examples rdata  cars fixed04 dat homework 7 due midnight monday homework 8 assignment  mom data file march 28  thursday   20  factor analysis adding noise pca get statistical model  factor analysis model  linear regression unobserved independent variables  assumptions factor analysis model  implications model  observable variables are correlated only through shared factors   tetrad equations  one factor models  more general correlation patterns multiple factors   our first look latent variables conditional independence   geometrically  factor model says data have gaussian distribution some low dimensional plane  plus noise moving them off plane  estimation by heroic linear algebra  estimation by maximum likelihood  rotation problem  why unwise reify factors  other models which produce same correlation patterns factor models  reading  notes  chapter 18  factors r sleep txt april 2  tuesday   21  mixture models factor analysis mixture models by allowing latent variable be discrete  kernel density estimation mixture models by reducing number points copies kernel  probabilistic formulation mixture models  geometry  planes again  probabilistic clustering  estimation mixture models by maximum likelihood  why leads vicious circle  expectation maximization  em  baum welch  algorithm replaces vicious circle iterative approximation  more em algorithm  convexity  jensen inequality  optimizing lower bound  proving each step em increases likelihood  mixtures regressions  other extensions  reading  notes  first half chapter 19 homework 8 due midnight monday homework 9  cancelled  april 4  thursday   22  mixture model examples complements precipitation snoqualmie falls revisited  fitting two component gaussian mixture  examining fitted distribution  checking calibration  using cross validation select number components use  examination selected mixture model  suspicious patterns parameters selected model  approximating complicated distributions vs  revealing hidden structure  using bootstrap hypothesis testing select number mixture components  reading  notes  second half chapter 19  mixture examples r april 9  tuesday   23  graphical models conditional independence dependence properties factor models  generalization graphical models  directed acyclic graphs  dag models  factor  mixture  markov models dags  graphical markov property  reading conditional independence properties dag  creating conditional dependence properties dag  statistical aspects dags  reasoning dags  does asbestos whiten teeth  reading  notes  chapter 20 homework 9 due midnight monday exam 2  assignment  your data set was mailed you  april 11  thursday   24  graphical causal models probabilistic prediction about passively selecting sub ensemble  leaving all mechanisms place  seeing turns up after applying filter  causal prediction about actively producing new ensemble  seeing would happen if something were change   counterfactuals    graphical causal models are way reasoning about causal prediction  algebraic counterparts are structural equation models  generally nonlinear non gaussian   causal markov property  faithfulness  performing causal prediction by  surgery  causal graphical models  d separation criterion  path diagram rules linear models  reading  notes  chapter 21 optional reading  cox donnelly  chapter 9  pearl   causal inference statistics   section 1  2  3 through 3 2 april 16  tuesday   25  identifying causal effects observations reprise causal effects vs  probabilistic conditioning   why think  when you can do experiment   experimentation by controlling everything  galileo  by randomizing  fisher   confounding identifiability  back door criterion identifying causal effects  condition covariates which block undesired paths  front door criterion identification  find isolated exhaustive causal mechanisms  deciding many black boxes open up  instrumental variables identification  finding some exogenous source variation tracing its effects  critique instrumental variables  vital role theory  its fragility  consequences weak instruments  irremovable confounding  example detection social influence  possibility bounding unidentifiable effects  summary recommendations identifying causal effects  reading  notes  chapter 22 optional reading  pearl   causal inference statistics   sections 3 3  3 5  4  5 1 midterm 2 due midnight monday homework 10  assignment  sesame csv april 18  thursday   carnival  no april 23  tuesday   26  estimating causal effects observations estimating graphical models  substituting consistent estimators into formulas front back door identification  average effects regression  tricks avoid estimating marginal distributions  propensity scores matching propensity scores computational short cuts back door adjustment  instrumental variables estimation  wald estimator  two stage least squares  summary recommendations estimating causal effects  april 25  thursday   27  discovering causal structure observations do get our causal graph  comparing rival dags by testing selected conditional independence relations  dependencies   equivalence classes graphs  causal arrows never go away no matter you condition   no causation without association    crucial difference between common causes common effects  conditioning common causes makes effects independent  conditioning common effects makes causes dependent  identifying colliders  using them orient arrows  inducing orientation enforce consistency  sgs algorithm discovering causal graphs  why works  pc algorithm  sgs algorithm lazy people  about latent variables  software  tetrad pcalg  examples working pcalg  limits observational causal discovery  universal consistency possible  achieved   but uniform consistency not  april 30  tuesday   28  time series time series are  properties  autocorrelation serial correlation  strong weak stationarity  correlation time  world simplest ergodic theorem  effective sample size  meaning ergodicity  single increasing long time series becomes representative whole process  conditional probability estimates  markov models  meaning markov property  autoregressive models  especially additive autoregressions  conditional variance estimates  bootstrapping time series  trends de trending  homework 11 due midnight monday help installing pcalg time series cross validation time series  change points  structural breaks   moving averages  spurious correlations  yule effect  oscillations  slutsky effect   state space hidden markov models  moving average arma models state space models  em algorithm hidden markov models  particle filtering  multiple time series   dynamic  graphical models   granger  causality  which not causal   possibility real causality
 162 , 0 , undergraduate advanced data analysis regression introduction  regression statistics branch mathematical engineering which designs analyzes methods learning imperfect data  regression statistical model functional relationships between variables  getting relationships right means being able predict well  least squares optimal prediction expectation value  conditional expectation function regression function  regression function must be estimated data  bias variance trade off controls estimation  ordinary least squares revisited smoothing method  other linear smoothers  nearest neighbor averaging  kernel weighted averaging  reading  notes  chapter 1  examples dat running example  ckm csv data set optional exercises   cox donnelly  chapter 1 optional reading  faraway  chapter 1  especially up p  17  homework 1  assignment  data january 17  thursday   2  truth about linear regression using taylor theorem justify linear regression locally  collinearity  consistency ordinary least squares estimates under weak conditions  linear regression coefficients will change distribution input variables  examples  why r2 usually distraction  linear regression coefficients will change distribution unobserved variables  omitted variable effects   errors variables  transformations inputs outputs  utility probabilistic assumptions  importance looking residuals  really means when coefficients are significantly non zero   controlled linear regression  really means  optional reading  faraway  rest chapter 1 january 22  tuesday   3  evaluation  error inference statistical models have three main uses  ways summarizing  reducing  compressing  data  scientific models  facilitating actually scientific inference  predictors  both summarizing scientific inference are linked prediction  though different ways   so ll focus prediction  particular now focus average error prediction  under some particular measure error  distinction between sample error generalization error  why former almost invariably optimistic about latter  over fitting  examples just spectacularly one can over fit really very harmless data  brief sketch ideas learning theory capacity control  data set splitting first attempt practically controlling over fitting  cross validation estimating generalization error model selection  justifying model based inferences  reading  notes  chapter 3  r  cox donnelly  ch  6  blackboard  january 24  thursday   4  smoothing methods regression bias variance trade off tells us much should smooth  adapting unknown roughness cross validation  detailed examples  quickly does kernel smoothing converge truth  using kernel regression multiple inputs  using smoothing automatically discover interactions  plots help interpret multivariate smoothing results  average predictive comparisons  optional readings  faraway  section 11 1  hayfield racine   nonparametric econometrics  np package   gelman pardoe   average predictive comparisons models nonlinearity  interactions  variance components  [pdf] january 29  tuesday   5  simulation simulation  implementing story encoded model  step by step  produce something data like  stochastic models have random components so require some random steps  stochastic models specified through conditional distributions are simulated by chaining together random variables  generate random variables specified distributions  simulation shows us model predicts  expectations  higher moments  correlations  regression functions  sampling distributions   analytical probability calculations are short cuts exhaustive simulation  simulation lets us check aspects model  does data look like typical simulation output  if repeat our exploratory analysis simulation output  do get same results  simulation based estimation  method simulated moments  january 31  thursday   6  bootstrap quantifying uncertainty by looking sampling distributions  bootstrap principle  sampling distributions under good estimate truth are close true sampling distributions  parametric bootstrapping  simulating model  non parametric bootstrapping  re sampling data  special issues regression  re sampling residuals vs  re sampling cases  many examples  when does bootstrap fail  r programs are built around functions  pieces code take inputs arguments  do calculations them  give back outputs return values  most basic use function encapsulate something ve done terminal  so can repeat  make more flexible  assure ourselves function does want do  subject sanity checks   write tests   make functions more flexible  use control structures  so calculation done  not just result  depends argument  r functions can call other functions  lets us break complex problems into simpler steps  passing partial results between functions  programs inevitably have bugs  debugging cycle figuring out bug  finding where your code  fixing  good programming habits make debugging easier  do some tricks  avoiding iteration  re writing code avoid mistakes confusion  be clearer  be more flexible  optional reading  slides 36 350  introduction statistical computing  especially through 15  february 7  thursday   8  heteroskedasticity  weighted least squares  variance estimation weighted least squares estimates  give more emphasis particular data points  heteroskedasticity problems causes inference  weighted least squares gets around problems heteroskedasticity  if know variance function  estimating conditional variance function regression residuals  iterative method estimating regression function variance function together  examples conditional variance estimation  locally constant locally linear modeling  lowess  optional reading  faraway  section 11 3 february 12  tuesday   9  splines kernel regression controls amount smoothing indirectly by bandwidth  why not control irregularity smoothed curve directly  spline smoothing problem penalized least squares problem  minimize mean squared error  plus penalty term proportional average curvature function over space  solution always continuous piecewise cubic polynomial  continuous first second derivatives  altering strength penalty moves along bias variance trade off  pure linear regression one extreme pure interpolation other  changing strength penalty equivalent minimizing mean squared error under constraint average curvature  ensure consistency  penalty constraint should weaken data grows  appropriate size selected by cross validation  example data  including confidence bands  writing splines basis functions  fitting least squares transformations data  plus regularization term  brief look splines multiple dimensions  splines versus kernel regression  optional reading  faraway  section 11 2 february 14  thursday   10  additive models curse dimensionality limits usefulness fully non parametric regression problems many variables  bias remains under control  but variance grows rapidly dimensionality  parametric models do not have problem  but have bias do not let us discover anything about true function  structured constrained non parametric regression compromises  by adding some bias so reduce variance  additive models are example  where each input variable has  partial response function   which add together get total regression function  partial response functions are unconstrained  generalizes linear models but still evades curse dimensionality  fitting additive models done iteratively  starting some initial guess about each partial response function then doing one dimensional smoothing  so guesses correct each other until self consistent solution reached  examples r using california house price data  conclusion  hardly ever any reason prefer linear models additive ones  continued thoughtless use linear regression scandal  optional reading  faraway  chapter 12 february 19  tuesday   11  testing regression specifications non parametric smoothers can be used test parametric models  forms tests  differences in sample performance  differences generalization performance  whether parametric model residuals have expectation zero everywhere  constructing test statistic based sample performance  using bootstrapping parametric model find null distribution test statistic  example where parametric model correctly specified  one where not  cautions interpretation goodness fit tests  why use parametric models all  answers  speed convergence when correctly specified  scientific interpretation parameters  if model actually comes scientific theory  mis specified parametric models can predict better  small sample sizes  than either correctly specified parametric models non parametric smoothers  because favorable bias variance characteristics  example  cox donnelly  chapter 7 12  more about hypothesis testing logic hypothesis testing  significance  power  will believe   shadow  price power  severe tests hypotheses  severity rejection vs  severity acceptance  common abuses  confidence sets  dual  hypothesis tests  crucial role sampling distributions  examples  right wrong  reading  notes  chapter 11 february 26  tuesday   13  logistic regression modeling conditional probabilities  using regression model probabilities  transforming probabilities better regression  logistic regression model  maximum likelihood  numerical maximum likelihood by newton method by iteratively re weighted least squares  comparing logistic regression logistic additive models  reading  notes  chapter 12 optional reading  faraway  chapter 2  omitting sections 2 11 2 12  homework 6 due midnight monday your data set has been e mailed you  february 28  thursday   14  generalized linear models generalized additive models poisson regression counts  iteratively re weighted least squares again  general pattern generalized linear models  over dispersion  generalized additive models  reading  notes  first half chapter 13 optional reading  faraway  section 3 1 chapter 6 march 5  tuesday   15  glm gam examples building weather forecaster snoqualmie falls  wash   logistic regression  exploratory examination data  predicting wet dry days form amount precipitation previous day  first logistic regression model  finding predicted probabilities confidence intervals them  comparison spline smoothing generalized additive model  model comparison test detects significant mis specification  re specifying model  dry days are special  second logistic regression model its comparison data  checking calibration second model  reading  notes  second half chapter 13 optional reading  faraway  chapters 6 7  continued previous  multivariate distributions reminders about multivariate distributions  multivariate gaussian distribution  definition  relation univariate scalar gaussian distribution  effect linear transformations parameters  plotting probability density contours two dimensions  using eigenvalues eigenvectors understand geometry multivariate gaussians  conditional distributions multivariate gaussians linear regression  computational aspects  specifically r  general methods estimating parametric distributional models arbitrary dimensions  moment matching maximum likelihood  asymptotics maximum likelihood  bootstrapping  model comparison by cross validation by likelihood ratio tests  goodness fit by random projection trick  reading  notes  chapter 14 march 12 14  spring break march 19  tuesday   17  density estimation desirability estimating not just conditional means  variances  etc   but whole distribution functions  parametric maximum likelihood solution  if parametric model right  histograms empirical cumulative distribution functions are non parametric ways estimating distribution  do they  glivenko cantelli law convergence empirical distribution functions  k   fundamental theorem statistics   more histograms  they converge right density  if bins keep shrinking but number samples per bin keeps growing  kernel density estimation its properties  convergence true density if bandwidth shrinks right rate  superior performance histograms  curse dimensionality again  example cross country economic data  kernels discrete variables  estimating conditional densities  another example oecd data  some issues likelihood  maximum likelihood  non parametric estimation  reading  notes  chapter 15 homework 7 assignment  n90 pol csv data march 21  thursday   18  relative distributions smooth tests goodness fit applying right cdf continuous random variable makes uniformly distributed  do test whether some variable uniform  smooth test idea  based series expansions log density  asymptotic theory smooth test  choosing basis functions test its order  smooth tests non uniform distributions through transformation  dealing estimated parameters  some examples  non parametric density estimation [0 1]  checking conditional distributions calibration smooth tests  relative distribution idea  comparing whole distributions by seeing where one set samples falls another distribution  relative density its estimation  illustrations relative densities  decomposing shifts relative distributions  reading  notes  chapter 16 optional reading  bera ghosh   neyman smooth test its applications econometrics   handcock morris   relative distribution methods  march 26  tuesday   19  principal components analysis principal components simplest  oldest most robust dimensionality reduction techniques  works by finding line  plane  hyperplane  which passes closest  average  all data points  equivalent maximizing variance projection data line plane hyperplane  actually finding those principal components reduces finding eigenvalues eigenvectors sample covariance matrix  why pca data analytic technique  not form statistical inference  example cars  pca words   latent semantic analysis   example real newspaper articles  visualization pca multidimensional scaling  cautions about pca  perils reification  illustration genetic maps  reading  notes  chapter 17  pca r  pca examples rdata  cars fixed04 dat homework 7 due midnight monday homework 8 assignment  mom data file march 28  thursday   20  factor analysis adding noise pca get statistical model  factor analysis model  linear regression unobserved independent variables  assumptions factor analysis model  implications model  observable variables are correlated only through shared factors   tetrad equations  one factor models  more general correlation patterns multiple factors   our first look latent variables conditional independence   geometrically  factor model says data have gaussian distribution some low dimensional plane  plus noise moving them off plane  estimation by heroic linear algebra  estimation by maximum likelihood  rotation problem  why unwise reify factors  other models which produce same correlation patterns factor models  reading  notes  chapter 18  factors r sleep txt april 2  tuesday   21  mixture models factor analysis mixture models by allowing latent variable be discrete  kernel density estimation mixture models by reducing number points copies kernel  probabilistic formulation mixture models  geometry  planes again  probabilistic clustering  estimation mixture models by maximum likelihood  why leads vicious circle  expectation maximization  em  baum welch  algorithm replaces vicious circle iterative approximation  more em algorithm  convexity  jensen inequality  optimizing lower bound  proving each step em increases likelihood  mixtures regressions  other extensions  reading  notes  first half chapter 19 homework 8 due midnight monday homework 9  cancelled  april 4  thursday   22  mixture model examples complements precipitation snoqualmie falls revisited  fitting two component gaussian mixture  examining fitted distribution  checking calibration  using cross validation select number components use  examination selected mixture model  suspicious patterns parameters selected model  approximating complicated distributions vs  revealing hidden structure  using bootstrap hypothesis testing select number mixture components  reading  notes  second half chapter 19  mixture examples r april 9  tuesday   23  graphical models conditional independence dependence properties factor models  generalization graphical models  directed acyclic graphs  dag models  factor  mixture  markov models dags  graphical markov property  reading conditional independence properties dag  creating conditional dependence properties dag  statistical aspects dags  reasoning dags  does asbestos whiten teeth  reading  notes  chapter 20 homework 9 due midnight monday exam 2  assignment  your data set was mailed you  april 11  thursday   24  graphical causal models probabilistic prediction about passively selecting sub ensemble  leaving all mechanisms place  seeing turns up after applying filter  causal prediction about actively producing new ensemble  seeing would happen if something were change   counterfactuals    graphical causal models are way reasoning about causal prediction  algebraic counterparts are structural equation models  generally nonlinear non gaussian   causal markov property  faithfulness  performing causal prediction by  surgery  causal graphical models  d separation criterion  path diagram rules linear models  reading  notes  chapter 21 optional reading  cox donnelly  chapter 9  pearl   causal inference statistics   section 1  2  3 through 3 2 april 16  tuesday   25  identifying causal effects observations reprise causal effects vs  probabilistic conditioning   why think  when you can do experiment   experimentation by controlling everything  galileo  by randomizing  fisher   confounding identifiability  back door criterion identifying causal effects  condition covariates which block undesired paths  front door criterion identification  find isolated exhaustive causal mechanisms  deciding many black boxes open up  instrumental variables identification  finding some exogenous source variation tracing its effects  critique instrumental variables  vital role theory  its fragility  consequences weak instruments  irremovable confounding  example detection social influence  possibility bounding unidentifiable effects  summary recommendations identifying causal effects  reading  notes  chapter 22 optional reading  pearl   causal inference statistics   sections 3 3  3 5  4  5 1 midterm 2 due midnight monday homework 10  assignment  sesame csv april 18  thursday   carnival  no april 23  tuesday   26  estimating causal effects observations estimating graphical models  substituting consistent estimators into formulas front back door identification  average effects regression  tricks avoid estimating marginal distributions  propensity scores matching propensity scores computational short cuts back door adjustment  instrumental variables estimation  wald estimator  two stage least squares  summary recommendations estimating causal effects  april 25  thursday   27  discovering causal structure observations do get our causal graph  comparing rival dags by testing selected conditional independence relations  dependencies   equivalence classes graphs  causal arrows never go away no matter you condition   no causation without association    crucial difference between common causes common effects  conditioning common causes makes effects independent  conditioning common effects makes causes dependent  identifying colliders  using them orient arrows  inducing orientation enforce consistency  sgs algorithm discovering causal graphs  why works  pc algorithm  sgs algorithm lazy people  about latent variables  software  tetrad pcalg  examples working pcalg  limits observational causal discovery  universal consistency possible  achieved   but uniform consistency not  april 30  tuesday   28  time series time series are  properties  autocorrelation serial correlation  strong weak stationarity  correlation time  world simplest ergodic theorem  effective sample size  meaning ergodicity  single increasing long time series becomes representative whole process  conditional probability estimates  markov models  meaning markov property  autoregressive models  especially additive autoregressions  conditional variance estimates  bootstrapping time series  trends de trending  homework 11 due midnight monday help installing pcalg time series cross validation time series  change points  structural breaks   moving averages  spurious correlations  yule effect  oscillations  slutsky effect   state space hidden markov models  moving average arma models state space models  em algorithm hidden markov models  particle filtering  multiple time series   dynamic  graphical models   granger  causality  which not causal   possibility real causality modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences
 163 , 1 , modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences data mining introduction data mining information retrieval  pagerank  clustering  clustering  clustering  dimension reduction  dimension reduction  dimension reduction  correlation analysis  correlation analysis  correlation analysis  regression  regression  regression  regularized regression  regularized regression  model selection validation  model selection validation  classification  classification  classification  trees boosting  trees boosting  trees boosting
 164 , 0 , data mining introduction data mining information retrieval  pagerank  clustering  clustering  clustering  dimension reduction  dimension reduction  dimension reduction  correlation analysis  correlation analysis  correlation analysis  regression  regression  regression  regularized regression  regularized regression  model selection validation  model selection validation  classification  classification  classification  trees boosting  trees boosting  trees boosting modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences
 165 , 1 , modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences applied multivariate methods multivariate normal distribution  multivariate linear model  repeated measures designs analysis  principle component factor analysis  emphasis application interpretation these methods practice
 166 , 0 , applied multivariate methods multivariate normal distribution  multivariate linear model  repeated measures designs analysis  principle component factor analysis  emphasis application interpretation these methods practice modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences
 167 , 1 , great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness undergraduate complexity theory logical systems knots factoring decision ↔ factoring computational factoring ∈ np informally  define np logical system knot triviality knot equivalence reductions halting reductions  <= b  turing machines oracles halting problem np hard turing machines cook levin prove cook levin theorem  namely sat  3 sat  np complet np 3 sat 3 sat  2 sat  max 2 sat
 168 , 0 , undergraduate complexity theory logical systems knots factoring decision ↔ factoring computational factoring ∈ np informally  define np logical system knot triviality knot equivalence reductions halting reductions  <= b  turing machines oracles halting problem np hard turing machines cook levin prove cook levin theorem  namely sat  3 sat  np complet np 3 sat 3 sat  2 sat  max 2 sat great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness
 169 , 1 , great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness  combinatorics  introduction  counting odd sized subsets n set   binomial coefficients  related bijections  compositions  binomial theorem  warm up    semi combinatorial algebraic proofs  stirling numbers second kind   vandermonde convolution   fibonacci numbers   generalized binomial theorem  estimates binomial coefficients   estimates harmonic numbers  overhang stack cards   changemaking  partitions  part    partitions  part   generating function binary trees   book sections 3 1 through 3 6 inclusive  12 1 through 12 3 inclusive  all lectures up february 1 inclusive   catalan numbers   bijection binary trees parenthesized expressions  basic inclusion–exclusion  area spherical triangle  notes inclusion–exclusion   general inclusion–exclusion  probability two numbers being coprime  part    probability two numbers being coprime  part   set families  sperner theorem  statement    partial orders  hasse diagrams  boolean cubes  sperner theorem   littlewood–offord theorem  appetizer erdős–ko–rado theorem   erdős–ko–rado theorem  part   erdős–ko–rado theorem  part  incidences between points lines  number edges c4 free graphs   number edges c4 free graphs  cauchy–schwarz inequality  erdős–szekeres theorem subsequences  statement    erdős–szekeres theorem subsequences  party six  clique anticliques  ramsey theorem  ramsey numbers  course page illustration explained   upper bound ramsey numbers  middle binomial coefficient revisited  lower bound ramsey numbers via pigeonhole principle   colorings  counting proofs  hard boolean functions   two colorability set systems  finite probability spaces  union bound   events  examples probability spaces  non bipartiteness random graph  independent events  construction paradoxical tournaments   random variables  expectation  indicator random variables  linearity expectation  bipartite subgraphs many edges   turán theorem  examples statement   crude version turán theorem   less crude version turán theorem   comparisons quicksort  part    comparisons quicksort  part   homework  7  markov inequality  paranoidal quicksort  alterations  sidon sets   dominating sets  better lower bounds ramsey numbers   asymptotics better lower bounds ramsey numbers  finding several monochromatic triangles   many monochromatic triangles via double counting  goodman theorem   tale experiment design  fano plane  finite projective planes  order projective plane  size projective plane  statement  homework  8  book sections 10 1–10 4  all lectures march 18 april 17 inclusive   size projective plane  incidence graph projective plane  dual projective plane  relation c4 free graphs   construction projective planes prime order   duality projective planes prime order  real projective plane  latin squares  orthogonal latin squares  definition    orthogonal latin squares finite projective planes
 170 , 0 ,  combinatorics  introduction  counting odd sized subsets n set   binomial coefficients  related bijections  compositions  binomial theorem  warm up    semi combinatorial algebraic proofs  stirling numbers second kind   vandermonde convolution   fibonacci numbers   generalized binomial theorem  estimates binomial coefficients   estimates harmonic numbers  overhang stack cards   changemaking  partitions  part    partitions  part   generating function binary trees   book sections 3 1 through 3 6 inclusive  12 1 through 12 3 inclusive  all lectures up february 1 inclusive   catalan numbers   bijection binary trees parenthesized expressions  basic inclusion–exclusion  area spherical triangle  notes inclusion–exclusion   general inclusion–exclusion  probability two numbers being coprime  part    probability two numbers being coprime  part   set families  sperner theorem  statement    partial orders  hasse diagrams  boolean cubes  sperner theorem   littlewood–offord theorem  appetizer erdős–ko–rado theorem   erdős–ko–rado theorem  part   erdős–ko–rado theorem  part  incidences between points lines  number edges c4 free graphs   number edges c4 free graphs  cauchy–schwarz inequality  erdős–szekeres theorem subsequences  statement    erdős–szekeres theorem subsequences  party six  clique anticliques  ramsey theorem  ramsey numbers  course page illustration explained   upper bound ramsey numbers  middle binomial coefficient revisited  lower bound ramsey numbers via pigeonhole principle   colorings  counting proofs  hard boolean functions   two colorability set systems  finite probability spaces  union bound   events  examples probability spaces  non bipartiteness random graph  independent events  construction paradoxical tournaments   random variables  expectation  indicator random variables  linearity expectation  bipartite subgraphs many edges   turán theorem  examples statement   crude version turán theorem   less crude version turán theorem   comparisons quicksort  part    comparisons quicksort  part   homework  7  markov inequality  paranoidal quicksort  alterations  sidon sets   dominating sets  better lower bounds ramsey numbers   asymptotics better lower bounds ramsey numbers  finding several monochromatic triangles   many monochromatic triangles via double counting  goodman theorem   tale experiment design  fano plane  finite projective planes  order projective plane  size projective plane  statement  homework  8  book sections 10 1–10 4  all lectures march 18 april 17 inclusive   size projective plane  incidence graph projective plane  dual projective plane  relation c4 free graphs   construction projective planes prime order   duality projective planes prime order  real projective plane  latin squares  orthogonal latin squares  definition    orthogonal latin squares finite projective planes great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness
 171 , 1 , great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness graph theory graph theory uses basic concepts approach diversity problems nontrivial applications operations research  computer science other disciplines  one very few mathematical areas where one always close interesting unsolved problems  topics include graphs subgraphs  trees  connectivity  euler tours hamilton cycles  matchings  graph colorings  planar graphs euler formula  directed graphs  network flows  counting arguments  graph algorithms
 172 , 0 , graph theory graph theory uses basic concepts approach diversity problems nontrivial applications operations research  computer science other disciplines  one very few mathematical areas where one always close interesting unsolved problems  topics include graphs subgraphs  trees  connectivity  euler tours hamilton cycles  matchings  graph colorings  planar graphs euler formula  directed graphs  network flows  counting arguments  graph algorithms great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness
 173 , 1 , great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness foundations programming languages introduction  programming language  rule induction  rule induction  binding  substitution dynamics  statics  safety abstract syntax de bruijn indices  functions gödel t pcf  substitution lemma  definability undefinability products sums products  sums  pattern matching  recursive types objects dynamic dispatch proof techniques  dynamic languages dynamic languages typed languages dynamic hybrid typing  church λ calculus modernized algol dynamic typing refinements  scoped assignables assignable references system f polymorphism polymorphism  representation independence  evaluation dynamics cost dynamics parallelism  nested data parallelism  control stacks  stacks  brent theorem  free assignables  monads futures speculations  call by need  communication π calculus concurent algol concurent algol  proofs programs judgments types dependently typed programming
 174 , 0 , foundations programming languages introduction  programming language  rule induction  rule induction  binding  substitution dynamics  statics  safety abstract syntax de bruijn indices  functions gödel t pcf  substitution lemma  definability undefinability products sums products  sums  pattern matching  recursive types objects dynamic dispatch proof techniques  dynamic languages dynamic languages typed languages dynamic hybrid typing  church λ calculus modernized algol dynamic typing refinements  scoped assignables assignable references system f polymorphism polymorphism  representation independence  evaluation dynamics cost dynamics parallelism  nested data parallelism  control stacks  stacks  brent theorem  free assignables  monads futures speculations  call by need  communication π calculus concurent algol concurent algol  proofs programs judgments types dependently typed programming great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness
 175 , 1 , great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness bug catching overview model checking quick introduction logic propositional logic davis putnam procedure  fast sat solvers binary decision diagrams  bdds  property specification using computation tree logic ctl  linear temporal logic  ltl  ltl tableaux construction ltl model checking explicit state model checking partial order reduction symbolic model checking detailed introduction model checker smv detailed introduction model checker spin abstract interpretation predicate abstraction abstract refinement detailed introduction model checker cbmc compositional model checking probabilistic model checking statistical model checking
 176 , 0 , bug catching overview model checking quick introduction logic propositional logic davis putnam procedure  fast sat solvers binary decision diagrams  bdds  property specification using computation tree logic ctl  linear temporal logic  ltl  ltl tableaux construction ltl model checking explicit state model checking partial order reduction symbolic model checking detailed introduction model checker smv detailed introduction model checker spin abstract interpretation predicate abstraction abstract refinement detailed introduction model checker cbmc compositional model checking probabilistic model checking statistical model checking great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness
 177 , 1 , great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness foundations cyber physical systems cyber physical systems  introduction differential equations   domains ode  fol  quiz choice   control hp  syntax  semantics  example safety   contracts dynamical systems   dynamic axioms did you prove you meant prove  truth   proof control loops   invariants invariants proofs  jan  events   delays proofs   arithmetic events delays  stefan  differential equations   differential invariants differential equations   proofs differential invariants  khalil  stuff dynamic logic   dynamical systems differential invariants   proof theory mid semester break ghosts   differential ghosts trains   proofs differential   temporal logic differential   temporal proofs differential ghosts  differential invariants virtual substitution   real equations virtual substitution   real arithmetic safety motion  real arithmetic hybrid systems   games winning strategies   regions game examples winning   proving hybrid games game proofs   separations game proofs logical theory   completeness logical foundations cps
 178 , 0 , foundations cyber physical systems cyber physical systems  introduction differential equations   domains ode  fol  quiz choice   control hp  syntax  semantics  example safety   contracts dynamical systems   dynamic axioms did you prove you meant prove  truth   proof control loops   invariants invariants proofs  jan  events   delays proofs   arithmetic events delays  stefan  differential equations   differential invariants differential equations   proofs differential invariants  khalil  stuff dynamic logic   dynamical systems differential invariants   proof theory mid semester break ghosts   differential ghosts trains   proofs differential   temporal logic differential   temporal proofs differential ghosts  differential invariants virtual substitution   real equations virtual substitution   real arithmetic safety motion  real arithmetic hybrid systems   games winning strategies   regions game examples winning   proving hybrid games game proofs   separations game proofs logical theory   completeness logical foundations cps great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness
 179 , 1 , great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness basic logic propositional predicate logic  syntax  proof theory semantics up completeness theorem  lowenheim skolem theorems  applications compactness theorem
 180 , 0 , basic logic propositional predicate logic  syntax  proof theory semantics up completeness theorem  lowenheim skolem theorems  applications compactness theorem great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness
 181 , 1 , great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness  probability computing  probability computing  verifying matrix multiplication  probability basics  modeling  deﬁnitions  conditioning 1 1 1 3  independence  law total probability  birthday “paradox” 1 4 1 7  generating testing primes  random variables 2 1  random variables  expectation linearity thereof  2 2 2 4 probability mass functions  pmfs   joint pmfs  conditional expectation  independent r v ’s  2 5 2 8 binomial geometric r v ’s  indicator r v’s  applications linearity expectation  max cut  updating minimum  etc   deviation expectation  markov’s inequality  5 1 chebyshev’s inequality  variance standard deviation  chernoﬀ hoeﬀding’s concentration inequalities 5 2 5 3  chernoﬀ + union bound  application sampling  load balancing  balls bins  poisson distribution 6 1  applications  hashing  ﬁngerprinting  bloom ﬁlters  random graphs  markov chains  discrete time ﬁnite 7 1 7 3  finite state markov chains conclusion 7 4 markov chain applications  pagerank metropolis introduction continuous random variables 3 1 3 2  joint continuous random variables 3 4  exponential distribution  poisson process 6 2  continuous time markov chains 7 5 7 6  introduction queuing theory  gaussian random variables 3 3  central limit theorem 5 4
 182 , 0 ,  probability computing  probability computing  verifying matrix multiplication  probability basics  modeling  deﬁnitions  conditioning 1 1 1 3  independence  law total probability  birthday “paradox” 1 4 1 7  generating testing primes  random variables 2 1  random variables  expectation linearity thereof  2 2 2 4 probability mass functions  pmfs   joint pmfs  conditional expectation  independent r v ’s  2 5 2 8 binomial geometric r v ’s  indicator r v’s  applications linearity expectation  max cut  updating minimum  etc   deviation expectation  markov’s inequality  5 1 chebyshev’s inequality  variance standard deviation  chernoﬀ hoeﬀding’s concentration inequalities 5 2 5 3  chernoﬀ + union bound  application sampling  load balancing  balls bins  poisson distribution 6 1  applications  hashing  ﬁngerprinting  bloom ﬁlters  random graphs  markov chains  discrete time ﬁnite 7 1 7 3  finite state markov chains conclusion 7 4 markov chain applications  pagerank metropolis introduction continuous random variables 3 1 3 2  joint continuous random variables 3 4  exponential distribution  poisson process 6 2  continuous time markov chains 7 5 7 6  introduction queuing theory  gaussian random variables 3 3  central limit theorem 5 4 great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness
 183 , 1 , great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness algorithms introduction  master theorem big oh recurrences  strassen fft fft fft dynamic programming dp  treaps quicksort  treaps continued + amortized analysis intro  splay trees amortized analysis treaps  binomial heaps  amortized analysis  splay trees  graphs  graphs access lemma static optimality splay trees  graphs iii  graphs iv  sorting lower bounds  backwards analysis   line segment intersection   2d linear programming  lp boundedness    convex hull minimum enclosing disc  convex hull random incremental  closest pair using hashing  maximum flow max flow application hashing  maximum flow  maximum flow iii applications max flow min cut  minimum cost maximum flow   linear programming introduction  linear programming examples linear programming duality  linear programming duality  prescan list ranking parallel tree contraction  more list ranking  maximal independent set  np completeness reductions  np completeness  online algorithms competitive analysis more reductions  randomized online algorithms  continued  aproximation algorithms parallel mis lp relaxation vertex set cover  aproximation algorithms  string matching  string matching kmp revisited  tries suffix  trees
 184 , 0 , algorithms introduction  master theorem big oh recurrences  strassen fft fft fft dynamic programming dp  treaps quicksort  treaps continued + amortized analysis intro  splay trees amortized analysis treaps  binomial heaps  amortized analysis  splay trees  graphs  graphs access lemma static optimality splay trees  graphs iii  graphs iv  sorting lower bounds  backwards analysis   line segment intersection   2d linear programming  lp boundedness    convex hull minimum enclosing disc  convex hull random incremental  closest pair using hashing  maximum flow max flow application hashing  maximum flow  maximum flow iii applications max flow min cut  minimum cost maximum flow   linear programming introduction  linear programming examples linear programming duality  linear programming duality  prescan list ranking parallel tree contraction  more list ranking  maximal independent set  np completeness reductions  np completeness  online algorithms competitive analysis more reductions  randomized online algorithms  continued  aproximation algorithms parallel mis lp relaxation vertex set cover  aproximation algorithms  string matching  string matching kmp revisited  tries suffix  trees great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness
 185 , 1 , great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness computational discrete math cdm  idea register machines computability decidability more models computation iteration  orbits  fixed points more iteration constant space nondeterminism closure minimization quotients fast minimization first order logic first order logic automata logic automata logic automata logic iii infinite words determinization boolean algebras boolean functions boolean algorithms boolean algorithms polya counting polya counting finite fields finite fields ff applications feedback shift registers cellular automata
 186 , 0 , computational discrete math cdm  idea register machines computability decidability more models computation iteration  orbits  fixed points more iteration constant space nondeterminism closure minimization quotients fast minimization first order logic first order logic automata logic automata logic automata logic iii infinite words determinization boolean algebras boolean functions boolean algorithms boolean algorithms polya counting polya counting finite fields finite fields ff applications feedback shift registers cellular automata great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness
 187 , 1 , great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness modern computer algebra proving combinatorial identities recurrence equations sister celine algorithm  gosper algorithm gosper algorithm wilf zeilberger algorithm zeilberger algorithm petkovsek algorithm proving combinatorial identities  harmonic number identities more proving combinatorial identities polynomial ideals  monomial order  monomial ideals  buchberger algorithm cyclic polygons  lagrange multipliers internet based mathematical tools integer relation algorithms integer relation algorithms differential algebra  squarefree factorization squarefree factorization  hermite ostrogradsky algorithm rothstein trager algorithm  resultants computing resultants  sylvester matrix rioboo algorithm  logarithmic extension exponential extension exponential extension definite integration
 188 , 0 , modern computer algebra proving combinatorial identities recurrence equations sister celine algorithm  gosper algorithm gosper algorithm wilf zeilberger algorithm zeilberger algorithm petkovsek algorithm proving combinatorial identities  harmonic number identities more proving combinatorial identities polynomial ideals  monomial order  monomial ideals  buchberger algorithm cyclic polygons  lagrange multipliers internet based mathematical tools integer relation algorithms integer relation algorithms differential algebra  squarefree factorization squarefree factorization  hermite ostrogradsky algorithm rothstein trager algorithm  resultants computing resultants  sylvester matrix rioboo algorithm  logarithmic extension exponential extension exponential extension definite integration great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness
 189 , 1 , introduction robotics computer vision  computer vision  iii     robotc   nxt kits hand out lego kits mandatory      controls  iii     motion planning      motion planning  iv     graph search      localization      locomotion     hand out usar     human robot interaction  evaluate design proposals  groups  usar demos     usar final competition     kinematics 2     inverse kinematics     non holonomic path planning     survey     rube goldberg  lab1      computer vision      vision programs     controls      dead reckoning     controls      moore law     trajectory following     motion planning      motion planning  iii     graph search      localization      human robot interaction      usar wrapup     kinematics 1     coordinate transformations intro     inverse kinematics non holonomic path planning   2 robot kinematics dynamics  cs  foundations principles robotic kinematics  transformations  forward kinematics  inverse kinematics  differential kinematics  jacobians   manipulability  basic equations motion  course also include programming robot arms
 190 , 0 , robot kinematics dynamics  cs  foundations principles robotic kinematics  transformations  forward kinematics  inverse kinematics  differential kinematics  jacobians   manipulability  basic equations motion  course also include programming robot arms introduction robotics computer vision  computer vision  iii     robotc   nxt kits hand out lego kits mandatory      controls  iii     motion planning      motion planning  iv     graph search      localization      locomotion     hand out usar     human robot interaction  evaluate design proposals  groups  usar demos     usar final competition     kinematics 2     inverse kinematics     non holonomic path planning     survey     rube goldberg  lab1      computer vision      vision programs     controls      dead reckoning     controls      moore law     trajectory following     motion planning      motion planning  iii     graph search      localization      human robot interaction      usar wrapup     kinematics 1     coordinate transformations intro     inverse kinematics non holonomic path planning   2
 191 , 1 , great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness formal languages  automata computation  deterministic finite automata regular languages non determinism regular operations regular expressions pumping lemma regular languages minimizing dfas push down automata context free grammars  pumping lemma cfls equivalence pdas cfgs          chomsky normal form  turing machines         undecidability         undecidability          reductions         more mapping reducibilities         post correspondence problem         rice’s theorem  recursion theorem  fixed point         theorem         oracle turing machines turing reducibility         arithmetic hierarchy         kolmogorov chaitin         complexity         time complexity polynomial time          non deterministic turning machines np         np completeness cook levin         theorem         np completeness cook levin theorem         np  completeness  karp         space complexity  savitch         theorem pspace completeness         space complexity          randomized complexity  bpp  rp  etc
 192 , 0 , formal languages  automata computation  deterministic finite automata regular languages non determinism regular operations regular expressions pumping lemma regular languages minimizing dfas push down automata context free grammars  pumping lemma cfls equivalence pdas cfgs          chomsky normal form  turing machines         undecidability         undecidability          reductions         more mapping reducibilities         post correspondence problem         rice’s theorem  recursion theorem  fixed point         theorem         oracle turing machines turing reducibility         arithmetic hierarchy         kolmogorov chaitin         complexity         time complexity polynomial time          non deterministic turning machines np         np completeness cook levin         theorem         np completeness cook levin theorem         np  completeness  karp         space complexity  savitch         theorem pspace completeness         space complexity          randomized complexity  bpp  rp  etc great theoretical ideas computer science representations numbers  induction  ancient modern arithmetic  basic counting principles  probability  number theory  idea proof  formal proofs  logic  problem solving methods  polynomial representations  automata theory  cryptography  inﬁnity  diagonalization  computability  time complexity  incompleteness undecidability  random walks  kolmogorov chaitin randomness
 193 , 1 , calculus three dimensions  vectors  lines  planes  quadratic surfaces  polar  cylindrical spherical coordinates  partial derivatives  directional derivatives  gradient  divergence  curl  chain rule  maximum minimum problems  multiple integrals  parametric surfaces curves  line integrals  surface integrals  green gauss theorems computer graphics   basic graphics programming    interaction    transformations    viewing projection    hierarchical modeling    lighting shading    shading opengl    curves surfaces    texture mapping [i  graham]    splines    programmable shading hardware    physically based modelling [c  twigg]    clipping    rasterization    image processing    ray tracing    spatial data structures    dynamics monsters  inc     radiosity    global illumination    visualization    non photorealistic rendering    animation    advanced global illumination    computer games
 194 , 0 , computer graphics   basic graphics programming    interaction    transformations    viewing projection    hierarchical modeling    lighting shading    shading opengl    curves surfaces    texture mapping [i  graham]    splines    programmable shading hardware    physically based modelling [c  twigg]    clipping    rasterization    image processing    ray tracing    spatial data structures    dynamics monsters  inc     radiosity    global illumination    visualization    non photorealistic rendering    animation    advanced global illumination    computer games calculus three dimensions  vectors  lines  planes  quadratic surfaces  polar  cylindrical spherical coordinates  partial derivatives  directional derivatives  gradient  divergence  curl  chain rule  maximum minimum problems  multiple integrals  parametric surfaces curves  line integrals  surface integrals  green gauss theorems
 195 , 1 , calculus three dimensions  vectors  lines  planes  quadratic surfaces  polar  cylindrical spherical coordinates  partial derivatives  directional derivatives  gradient  divergence  curl  chain rule  maximum minimum problems  multiple integrals  parametric surfaces curves  line integrals  surface integrals  green gauss theorems computer vision image feature representation  introduction computer vision  image fourier representation  optics image formation  camera calibration  linear filters  laplacian pyramid  image blending  wavelets  principal component analysis  independent components   object scene recognition  simple features boosting  face detection cascades  pattern descriptors  sift hog    classification  svm knn   lda  linear discriminant   perceptual inference  optical flow  motion analysis  tracking  structure motion   shape shading  odometry pose estimation  active shape appearance model  scene recognition  coherent scene interpretation  segmentation  mrf  mean shift  graphcut   review  review hierarchy
 196 , 0 , computer vision image feature representation  introduction computer vision  image fourier representation  optics image formation  camera calibration  linear filters  laplacian pyramid  image blending  wavelets  principal component analysis  independent components   object scene recognition  simple features boosting  face detection cascades  pattern descriptors  sift hog    classification  svm knn   lda  linear discriminant   perceptual inference  optical flow  motion analysis  tracking  structure motion   shape shading  odometry pose estimation  active shape appearance model  scene recognition  coherent scene interpretation  segmentation  mrf  mean shift  graphcut   review  review hierarchy calculus three dimensions  vectors  lines  planes  quadratic surfaces  polar  cylindrical spherical coordinates  partial derivatives  directional derivatives  gradient  divergence  curl  chain rule  maximum minimum problems  multiple integrals  parametric surfaces curves  line integrals  surface integrals  green gauss theorems
 197 , 1 , calculus three dimensions  vectors  lines  planes  quadratic surfaces  polar  cylindrical spherical coordinates  partial derivatives  directional derivatives  gradient  divergence  curl  chain rule  maximum minimum problems  multiple integrals  parametric surfaces curves  line integrals  surface integrals  green gauss theorems  probability computing  probability computing  verifying matrix multiplication  probability basics  modeling  deﬁnitions  conditioning 1 1 1 3  independence  law total probability  birthday “paradox” 1 4 1 7  generating testing primes  random variables 2 1  random variables  expectation linearity thereof  2 2 2 4 probability mass functions  pmfs   joint pmfs  conditional expectation  independent r v ’s  2 5 2 8 binomial geometric r v ’s  indicator r v’s  applications linearity expectation  max cut  updating minimum  etc   deviation expectation  markov’s inequality  5 1 chebyshev’s inequality  variance standard deviation  chernoﬀ hoeﬀding’s concentration inequalities 5 2 5 3  chernoﬀ + union bound  application sampling  load balancing  balls bins  poisson distribution 6 1  applications  hashing  ﬁngerprinting  bloom ﬁlters  random graphs  markov chains  discrete time ﬁnite 7 1 7 3  finite state markov chains conclusion 7 4 markov chain applications  pagerank metropolis introduction continuous random variables 3 1 3 2  joint continuous random variables 3 4  exponential distribution  poisson process 6 2  continuous time markov chains 7 5 7 6  introduction queuing theory  gaussian random variables 3 3  central limit theorem 5 4
 198 , 0 ,  probability computing  probability computing  verifying matrix multiplication  probability basics  modeling  deﬁnitions  conditioning 1 1 1 3  independence  law total probability  birthday “paradox” 1 4 1 7  generating testing primes  random variables 2 1  random variables  expectation linearity thereof  2 2 2 4 probability mass functions  pmfs   joint pmfs  conditional expectation  independent r v ’s  2 5 2 8 binomial geometric r v ’s  indicator r v’s  applications linearity expectation  max cut  updating minimum  etc   deviation expectation  markov’s inequality  5 1 chebyshev’s inequality  variance standard deviation  chernoﬀ hoeﬀding’s concentration inequalities 5 2 5 3  chernoﬀ + union bound  application sampling  load balancing  balls bins  poisson distribution 6 1  applications  hashing  ﬁngerprinting  bloom ﬁlters  random graphs  markov chains  discrete time ﬁnite 7 1 7 3  finite state markov chains conclusion 7 4 markov chain applications  pagerank metropolis introduction continuous random variables 3 1 3 2  joint continuous random variables 3 4  exponential distribution  poisson process 6 2  continuous time markov chains 7 5 7 6  introduction queuing theory  gaussian random variables 3 3  central limit theorem 5 4 calculus three dimensions  vectors  lines  planes  quadratic surfaces  polar  cylindrical spherical coordinates  partial derivatives  directional derivatives  gradient  divergence  curl  chain rule  maximum minimum problems  multiple integrals  parametric surfaces curves  line integrals  surface integrals  green gauss theorems
 199 , 1 , calculus three dimensions  vectors  lines  planes  quadratic surfaces  polar  cylindrical spherical coordinates  partial derivatives  directional derivatives  gradient  divergence  curl  chain rule  maximum minimum problems  multiple integrals  parametric surfaces curves  line integrals  surface integrals  green gauss theorems probability probability spaces  random variables  random vectors  multivariate densities  distributions  expectations  sampling simulation  independence  conditioning  conditional distributions expectations  limit theorems strong law large numbers central limit theorem  well additional topics large deviations  random walks markov chains
 200 , 0 , probability probability spaces  random variables  random vectors  multivariate densities  distributions  expectations  sampling simulation  independence  conditioning  conditional distributions expectations  limit theorems strong law large numbers central limit theorem  well additional topics large deviations  random walks markov chains calculus three dimensions  vectors  lines  planes  quadratic surfaces  polar  cylindrical spherical coordinates  partial derivatives  directional derivatives  gradient  divergence  curl  chain rule  maximum minimum problems  multiple integrals  parametric surfaces curves  line integrals  surface integrals  green gauss theorems
 201 , 1 , calculus three dimensions  vectors  lines  planes  quadratic surfaces  polar  cylindrical spherical coordinates  partial derivatives  directional derivatives  gradient  divergence  curl  chain rule  maximum minimum problems  multiple integrals  parametric surfaces curves  line integrals  surface integrals  green gauss theorems probability theory random processes  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  limit theorems  introduction random processes some elementary ideas spectral analysis information theory will be given
 202 , 0 , probability theory random processes  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  limit theorems  introduction random processes some elementary ideas spectral analysis information theory will be given calculus three dimensions  vectors  lines  planes  quadratic surfaces  polar  cylindrical spherical coordinates  partial derivatives  directional derivatives  gradient  divergence  curl  chain rule  maximum minimum problems  multiple integrals  parametric surfaces curves  line integrals  surface integrals  green gauss theorems
 203 , 1 , calculus three dimensions  vectors  lines  planes  quadratic surfaces  polar  cylindrical spherical coordinates  partial derivatives  directional derivatives  gradient  divergence  curl  chain rule  maximum minimum problems  multiple integrals  parametric surfaces curves  line integrals  surface integrals  green gauss theorems  introduction probability theory  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  law large numbers  central limit theorem
 204 , 0 ,  introduction probability theory  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  law large numbers  central limit theorem calculus three dimensions  vectors  lines  planes  quadratic surfaces  polar  cylindrical spherical coordinates  partial derivatives  directional derivatives  gradient  divergence  curl  chain rule  maximum minimum problems  multiple integrals  parametric surfaces curves  line integrals  surface integrals  green gauss theorems
 205 , 1 , numerical methods analytical numerical solutions approximations errors   mathcad basic operations  roots equations     introduction     bisection method  c++ programming review  learn c++ programming     false position method     newton raphson method     secant method  multiple roots    systems nonlinear equations    linear algebraic equations     introduction      gauss elimination gauss elimination     lu decomposition  gauss seidel 4  optimization     introduction    1d unconstrained optimization   multi dimensional unconstrained optimization curve fitting     introduction     least square regression     newton interpolating polynomials  splines   lagrange interpolation polynomials 6  numerical  integration     introduction  numerical differentiation ordinary differential equations  ode      introduction  euler methods  runge kutta methods  boundary value eigenvalue problems partial differential equations  pde      introduction  elliptic equations  parabolic equations ansys robot kinematics dynamics  cs  foundations principles robotic kinematics  transformations  forward kinematics  inverse kinematics  differential kinematics  jacobians   manipulability  basic equations motion  course also include programming robot arms
 206 , 0 , robot kinematics dynamics  cs  foundations principles robotic kinematics  transformations  forward kinematics  inverse kinematics  differential kinematics  jacobians   manipulability  basic equations motion  course also include programming robot arms numerical methods analytical numerical solutions approximations errors   mathcad basic operations  roots equations     introduction     bisection method  c++ programming review  learn c++ programming     false position method     newton raphson method     secant method  multiple roots    systems nonlinear equations    linear algebraic equations     introduction      gauss elimination gauss elimination     lu decomposition  gauss seidel 4  optimization     introduction    1d unconstrained optimization   multi dimensional unconstrained optimization curve fitting     introduction     least square regression     newton interpolating polynomials  splines   lagrange interpolation polynomials 6  numerical  integration     introduction  numerical differentiation ordinary differential equations  ode      introduction  euler methods  runge kutta methods  boundary value eigenvalue problems partial differential equations  pde      introduction  elliptic equations  parabolic equations ansys
 207 , 1 , numerical methods analytical numerical solutions approximations errors   mathcad basic operations  roots equations     introduction     bisection method  c++ programming review  learn c++ programming     false position method     newton raphson method     secant method  multiple roots    systems nonlinear equations    linear algebraic equations     introduction      gauss elimination gauss elimination     lu decomposition  gauss seidel 4  optimization     introduction    1d unconstrained optimization   multi dimensional unconstrained optimization curve fitting     introduction     least square regression     newton interpolating polynomials  splines   lagrange interpolation polynomials 6  numerical  integration     introduction  numerical differentiation ordinary differential equations  ode      introduction  euler methods  runge kutta methods  boundary value eigenvalue problems partial differential equations  pde      introduction  elliptic equations  parabolic equations ansys introduction robotics computer vision  computer vision  iii     robotc   nxt kits hand out lego kits mandatory      controls  iii     motion planning      motion planning  iv     graph search      localization      locomotion     hand out usar     human robot interaction  evaluate design proposals  groups  usar demos     usar final competition     kinematics 2     inverse kinematics     non holonomic path planning     survey     rube goldberg  lab1      computer vision      vision programs     controls      dead reckoning     controls      moore law     trajectory following     motion planning      motion planning  iii     graph search      localization      human robot interaction      usar wrapup     kinematics 1     coordinate transformations intro     inverse kinematics non holonomic path planning   2
 208 , 0 , introduction robotics computer vision  computer vision  iii     robotc   nxt kits hand out lego kits mandatory      controls  iii     motion planning      motion planning  iv     graph search      localization      locomotion     hand out usar     human robot interaction  evaluate design proposals  groups  usar demos     usar final competition     kinematics 2     inverse kinematics     non holonomic path planning     survey     rube goldberg  lab1      computer vision      vision programs     controls      dead reckoning     controls      moore law     trajectory following     motion planning      motion planning  iii     graph search      localization      human robot interaction      usar wrapup     kinematics 1     coordinate transformations intro     inverse kinematics non holonomic path planning   2 numerical methods analytical numerical solutions approximations errors   mathcad basic operations  roots equations     introduction     bisection method  c++ programming review  learn c++ programming     false position method     newton raphson method     secant method  multiple roots    systems nonlinear equations    linear algebraic equations     introduction      gauss elimination gauss elimination     lu decomposition  gauss seidel 4  optimization     introduction    1d unconstrained optimization   multi dimensional unconstrained optimization curve fitting     introduction     least square regression     newton interpolating polynomials  splines   lagrange interpolation polynomials 6  numerical  integration     introduction  numerical differentiation ordinary differential equations  ode      introduction  euler methods  runge kutta methods  boundary value eigenvalue problems partial differential equations  pde      introduction  elliptic equations  parabolic equations ansys
 209 , 1 ,  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations computer graphics   basic graphics programming    interaction    transformations    viewing projection    hierarchical modeling    lighting shading    shading opengl    curves surfaces    texture mapping [i  graham]    splines    programmable shading hardware    physically based modelling [c  twigg]    clipping    rasterization    image processing    ray tracing    spatial data structures    dynamics monsters  inc     radiosity    global illumination    visualization    non photorealistic rendering    animation    advanced global illumination    computer games
 210 , 0 , computer graphics   basic graphics programming    interaction    transformations    viewing projection    hierarchical modeling    lighting shading    shading opengl    curves surfaces    texture mapping [i  graham]    splines    programmable shading hardware    physically based modelling [c  twigg]    clipping    rasterization    image processing    ray tracing    spatial data structures    dynamics monsters  inc     radiosity    global illumination    visualization    non photorealistic rendering    animation    advanced global illumination    computer games  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations
 211 , 1 ,  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations robot kinematics dynamics  cs  foundations principles robotic kinematics  transformations  forward kinematics  inverse kinematics  differential kinematics  jacobians   manipulability  basic equations motion  course also include programming robot arms
 212 , 0 , robot kinematics dynamics  cs  foundations principles robotic kinematics  transformations  forward kinematics  inverse kinematics  differential kinematics  jacobians   manipulability  basic equations motion  course also include programming robot arms  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations
 213 , 1 ,  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations computer vision image feature representation  introduction computer vision  image fourier representation  optics image formation  camera calibration  linear filters  laplacian pyramid  image blending  wavelets  principal component analysis  independent components   object scene recognition  simple features boosting  face detection cascades  pattern descriptors  sift hog    classification  svm knn   lda  linear discriminant   perceptual inference  optical flow  motion analysis  tracking  structure motion   shape shading  odometry pose estimation  active shape appearance model  scene recognition  coherent scene interpretation  segmentation  mrf  mean shift  graphcut   review  review hierarchy
 214 , 0 , computer vision image feature representation  introduction computer vision  image fourier representation  optics image formation  camera calibration  linear filters  laplacian pyramid  image blending  wavelets  principal component analysis  independent components   object scene recognition  simple features boosting  face detection cascades  pattern descriptors  sift hog    classification  svm knn   lda  linear discriminant   perceptual inference  optical flow  motion analysis  tracking  structure motion   shape shading  odometry pose estimation  active shape appearance model  scene recognition  coherent scene interpretation  segmentation  mrf  mean shift  graphcut   review  review hierarchy  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations
 215 , 1 ,  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations artificial neural networks organizational meeting  introduction neural nets perceptrons lms algorithm backpropagation learning visually guided robot control optimization techniques overfitting  cross validation  early stopping simple recurrent networks language processing models pattern classification pattern classification em  expectation maximization  algorithm neural networks control support vector machines time series prediction shared weight networks competitive learning kohonen nets hebbian learning principal components analysis hopfield nets boltzmann machines mean field approximation helmholtz machines  minimum description length bayesian networks computational learning theory connectionist symbol processing reinforcement learning neurophysiology computer scientists
 216 , 0 , artificial neural networks organizational meeting  introduction neural nets perceptrons lms algorithm backpropagation learning visually guided robot control optimization techniques overfitting  cross validation  early stopping simple recurrent networks language processing models pattern classification pattern classification em  expectation maximization  algorithm neural networks control support vector machines time series prediction shared weight networks competitive learning kohonen nets hebbian learning principal components analysis hopfield nets boltzmann machines mean field approximation helmholtz machines  minimum description length bayesian networks computational learning theory connectionist symbol processing reinforcement learning neurophysiology computer scientists  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations
 217 , 1 ,  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations introduction robotics computer vision  computer vision  iii     robotc   nxt kits hand out lego kits mandatory      controls  iii     motion planning      motion planning  iv     graph search      localization      locomotion     hand out usar     human robot interaction  evaluate design proposals  groups  usar demos     usar final competition     kinematics 2     inverse kinematics     non holonomic path planning     survey     rube goldberg  lab1      computer vision      vision programs     controls      dead reckoning     controls      moore law     trajectory following     motion planning      motion planning  iii     graph search      localization      human robot interaction      usar wrapup     kinematics 1     coordinate transformations intro     inverse kinematics non holonomic path planning   2
 218 , 0 , introduction robotics computer vision  computer vision  iii     robotc   nxt kits hand out lego kits mandatory      controls  iii     motion planning      motion planning  iv     graph search      localization      locomotion     hand out usar     human robot interaction  evaluate design proposals  groups  usar demos     usar final competition     kinematics 2     inverse kinematics     non holonomic path planning     survey     rube goldberg  lab1      computer vision      vision programs     controls      dead reckoning     controls      moore law     trajectory following     motion planning      motion planning  iii     graph search      localization      human robot interaction      usar wrapup     kinematics 1     coordinate transformations intro     inverse kinematics non holonomic path planning   2  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations
 219 , 1 , principles software construction recitation git + java warmup encapsulation  polymorphism  equality modules  inheritance recitation debugging java semantics inheritance  continued   typechecking  introduction behavioral contracts exceptional control flow  parametric polymorphism recitation object equality  self documenting code  refactoring specifications testing  unit testing  coverage  build test automation  recitation unit testing  build automation  continuous integration++ bug reporting  verification  static analysis introduction object oriented design recitation behavioral subtypes static analysis  object oriented analysis introduction design patterns recitation grasp + design patterns design goals assigning responsibilities recitation intro guis design case study  guis design case study  java collections recitation guis++ design case study  stream o design reuse  libraries   frameworks recitation design pattern mining design reuse  libraries   frameworks  continued  concurrency  part 1  recitation frameworks concurrency  part 2  recitation api design  concurrency  part 3  distributed system design  part 1  recitation concurrency distributed system design  part 2  recitation distributed systems distributed system design  part 3  distributed system design  part 4  recitation distributed systems  continued data consistency pagerank data consistency recitation map reduce problem solving software engineering beyond 15 214 fundations software engineering software engineering course structure qa reliability maintaining code  docs  refact  contin integ  quality attributes inspection bug reporting testing coverage static analysis  automating inspection  conc  concurrency dynamic analysis design principles design patterns  frameworks libraries architecture architecture practice design process requirements specification standards compliance small team processes  earned value iteration risk scrum small team practice architecture organization business  stes  small team experience requirements  language tools infrastructure process course summary reflection
 220 , 0 , fundations software engineering software engineering course structure qa reliability maintaining code  docs  refact  contin integ  quality attributes inspection bug reporting testing coverage static analysis  automating inspection  conc  concurrency dynamic analysis design principles design patterns  frameworks libraries architecture architecture practice design process requirements specification standards compliance small team processes  earned value iteration risk scrum small team practice architecture organization business  stes  small team experience requirements  language tools infrastructure process course summary reflection principles software construction recitation git + java warmup encapsulation  polymorphism  equality modules  inheritance recitation debugging java semantics inheritance  continued   typechecking  introduction behavioral contracts exceptional control flow  parametric polymorphism recitation object equality  self documenting code  refactoring specifications testing  unit testing  coverage  build test automation  recitation unit testing  build automation  continuous integration++ bug reporting  verification  static analysis introduction object oriented design recitation behavioral subtypes static analysis  object oriented analysis introduction design patterns recitation grasp + design patterns design goals assigning responsibilities recitation intro guis design case study  guis design case study  java collections recitation guis++ design case study  stream o design reuse  libraries   frameworks recitation design pattern mining design reuse  libraries   frameworks  continued  concurrency  part 1  recitation frameworks concurrency  part 2  recitation api design  concurrency  part 3  distributed system design  part 1  recitation concurrency distributed system design  part 2  recitation distributed systems distributed system design  part 3  distributed system design  part 4  recitation distributed systems  continued data consistency pagerank data consistency recitation map reduce problem solving software engineering beyond 15 214
 221 , 1 , principles software construction recitation git + java warmup encapsulation  polymorphism  equality modules  inheritance recitation debugging java semantics inheritance  continued   typechecking  introduction behavioral contracts exceptional control flow  parametric polymorphism recitation object equality  self documenting code  refactoring specifications testing  unit testing  coverage  build test automation  recitation unit testing  build automation  continuous integration++ bug reporting  verification  static analysis introduction object oriented design recitation behavioral subtypes static analysis  object oriented analysis introduction design patterns recitation grasp + design patterns design goals assigning responsibilities recitation intro guis design case study  guis design case study  java collections recitation guis++ design case study  stream o design reuse  libraries   frameworks recitation design pattern mining design reuse  libraries   frameworks  continued  concurrency  part 1  recitation frameworks concurrency  part 2  recitation api design  concurrency  part 3  distributed system design  part 1  recitation concurrency distributed system design  part 2  recitation distributed systems distributed system design  part 3  distributed system design  part 4  recitation distributed systems  continued data consistency pagerank data consistency recitation map reduce problem solving software engineering beyond 15 214 cognitive robotics videos  xor demo  two armed bandit demo  chiara chess  chiara piano c++ java programmers  seven big ideas robotics teach them learn run tekkotsu interact robot  tutorial robot safety teleoperation controllergui  sensor observer learn robot behaviors are created  state machines wiki pages state machine shorthand  node definitions  defining new node classes understand event based architecture underlies state machines  behaviors events tekkotsu software engineering learn run visualize your own behaviors robot  storyboard tool compiling running code  event logger  storyboard tool learn use pilot move robot through world  navigating pilot navigating tekkotsu pilot  by watson   touretzky  2011  optional supplementary  wiki pages  pilot odometry  pilot localization learn run simulated robot virtual environment  mirage simulation environment tekkotsu software engineering practice using mirage simulator making your own virtual worlds  mirage virtual worlds pilot navigation mirage  mirage worldbuilder learn robots see color  basics robot vision  tekkotsu vision pipeline learn use mapbuilder detect shapes camera image  dual coding representations mapbuilder practice using mapbuilder solve robot vision problems  mapbuilder understand   1  robot centered maps world maps   2  ways state nodes communicate  local world maps  advanced state machine programming learn about  1  functors applying tests shapes   2  solving vision problems using sketches  shape predicates  sketches qualitative spatial reasoning can improve strategy game ais  by forbus  mahoney    dill  2001   local maps  sketch operations make robot execute pre specified motion sequences   ullman  1984  visual routines   cognition 18 97 157  postures motion sequences examine some ideas higher level vision  visual routines postures motion sequences learn robot body represented kinematic tree  use forward kinematics calculate positions end effectors  gentle introduction homogenous transformations robot kinematics  by jennifer kay  denavit hartenberg reference frame layout kinematics learn use inverse kinematics precisely position robot limbs  continuation monday  same slides  tentacle ik path planning by jonathan coens   forward inverse kinematics learn use rapidly exploring random trees  rrts  plan path start state goal state  path planning rrt connect  efficient approach single query path planning  j  j  kuffner  jr    m  lavalle  icra  2000  video  tekkotsu hand eye system path planning by glenn nickens mid semester break particle filters object recognition particle filter  pushing objects mini  cobots task  meet nsh 3206 now
 222 , 0 , cognitive robotics videos  xor demo  two armed bandit demo  chiara chess  chiara piano c++ java programmers  seven big ideas robotics teach them learn run tekkotsu interact robot  tutorial robot safety teleoperation controllergui  sensor observer learn robot behaviors are created  state machines wiki pages state machine shorthand  node definitions  defining new node classes understand event based architecture underlies state machines  behaviors events tekkotsu software engineering learn run visualize your own behaviors robot  storyboard tool compiling running code  event logger  storyboard tool learn use pilot move robot through world  navigating pilot navigating tekkotsu pilot  by watson   touretzky  2011  optional supplementary  wiki pages  pilot odometry  pilot localization learn run simulated robot virtual environment  mirage simulation environment tekkotsu software engineering practice using mirage simulator making your own virtual worlds  mirage virtual worlds pilot navigation mirage  mirage worldbuilder learn robots see color  basics robot vision  tekkotsu vision pipeline learn use mapbuilder detect shapes camera image  dual coding representations mapbuilder practice using mapbuilder solve robot vision problems  mapbuilder understand   1  robot centered maps world maps   2  ways state nodes communicate  local world maps  advanced state machine programming learn about  1  functors applying tests shapes   2  solving vision problems using sketches  shape predicates  sketches qualitative spatial reasoning can improve strategy game ais  by forbus  mahoney    dill  2001   local maps  sketch operations make robot execute pre specified motion sequences   ullman  1984  visual routines   cognition 18 97 157  postures motion sequences examine some ideas higher level vision  visual routines postures motion sequences learn robot body represented kinematic tree  use forward kinematics calculate positions end effectors  gentle introduction homogenous transformations robot kinematics  by jennifer kay  denavit hartenberg reference frame layout kinematics learn use inverse kinematics precisely position robot limbs  continuation monday  same slides  tentacle ik path planning by jonathan coens   forward inverse kinematics learn use rapidly exploring random trees  rrts  plan path start state goal state  path planning rrt connect  efficient approach single query path planning  j  j  kuffner  jr    m  lavalle  icra  2000  video  tekkotsu hand eye system path planning by glenn nickens mid semester break particle filters object recognition particle filter  pushing objects mini  cobots task  meet nsh 3206 now principles software construction recitation git + java warmup encapsulation  polymorphism  equality modules  inheritance recitation debugging java semantics inheritance  continued   typechecking  introduction behavioral contracts exceptional control flow  parametric polymorphism recitation object equality  self documenting code  refactoring specifications testing  unit testing  coverage  build test automation  recitation unit testing  build automation  continuous integration++ bug reporting  verification  static analysis introduction object oriented design recitation behavioral subtypes static analysis  object oriented analysis introduction design patterns recitation grasp + design patterns design goals assigning responsibilities recitation intro guis design case study  guis design case study  java collections recitation guis++ design case study  stream o design reuse  libraries   frameworks recitation design pattern mining design reuse  libraries   frameworks  continued  concurrency  part 1  recitation frameworks concurrency  part 2  recitation api design  concurrency  part 3  distributed system design  part 1  recitation concurrency distributed system design  part 2  recitation distributed systems distributed system design  part 3  distributed system design  part 4  recitation distributed systems  continued data consistency pagerank data consistency recitation map reduce problem solving software engineering beyond 15 214
 223 , 1 , introduction data structures java fast review java more java  review using objects  string  math  random classes arrays   arraylists arrays   arraylists  linked lists linked lists recursion recursion algorithm analysis  big o algorithm analysis  big o inheritance  abstract classes  interfaces desing implementation classes desing implementation classes stacks  searching algorithms sorting algorithms binary trees binary trees   lists   iterators bts   bsts maps  sets iterators   maps hash tables hash tables heaps   treesort graphs graphs principles software construction recitation git + java warmup encapsulation  polymorphism  equality modules  inheritance recitation debugging java semantics inheritance  continued   typechecking  introduction behavioral contracts exceptional control flow  parametric polymorphism recitation object equality  self documenting code  refactoring specifications testing  unit testing  coverage  build test automation  recitation unit testing  build automation  continuous integration++ bug reporting  verification  static analysis introduction object oriented design recitation behavioral subtypes static analysis  object oriented analysis introduction design patterns recitation grasp + design patterns design goals assigning responsibilities recitation intro guis design case study  guis design case study  java collections recitation guis++ design case study  stream o design reuse  libraries   frameworks recitation design pattern mining design reuse  libraries   frameworks  continued  concurrency  part 1  recitation frameworks concurrency  part 2  recitation api design  concurrency  part 3  distributed system design  part 1  recitation concurrency distributed system design  part 2  recitation distributed systems distributed system design  part 3  distributed system design  part 4  recitation distributed systems  continued data consistency pagerank data consistency recitation map reduce problem solving software engineering beyond 15 214
 224 , 0 , principles software construction recitation git + java warmup encapsulation  polymorphism  equality modules  inheritance recitation debugging java semantics inheritance  continued   typechecking  introduction behavioral contracts exceptional control flow  parametric polymorphism recitation object equality  self documenting code  refactoring specifications testing  unit testing  coverage  build test automation  recitation unit testing  build automation  continuous integration++ bug reporting  verification  static analysis introduction object oriented design recitation behavioral subtypes static analysis  object oriented analysis introduction design patterns recitation grasp + design patterns design goals assigning responsibilities recitation intro guis design case study  guis design case study  java collections recitation guis++ design case study  stream o design reuse  libraries   frameworks recitation design pattern mining design reuse  libraries   frameworks  continued  concurrency  part 1  recitation frameworks concurrency  part 2  recitation api design  concurrency  part 3  distributed system design  part 1  recitation concurrency distributed system design  part 2  recitation distributed systems distributed system design  part 3  distributed system design  part 4  recitation distributed systems  continued data consistency pagerank data consistency recitation map reduce problem solving software engineering beyond 15 214 introduction data structures java fast review java more java  review using objects  string  math  random classes arrays   arraylists arrays   arraylists  linked lists linked lists recursion recursion algorithm analysis  big o algorithm analysis  big o inheritance  abstract classes  interfaces desing implementation classes desing implementation classes stacks  searching algorithms sorting algorithms binary trees binary trees   lists   iterators bts   bsts maps  sets iterators   maps hash tables hash tables heaps   treesort graphs graphs
 225 , 1 , algorithms introduction  master theorem big oh recurrences  strassen fft fft fft dynamic programming dp  treaps quicksort  treaps continued + amortized analysis intro  splay trees amortized analysis treaps  binomial heaps  amortized analysis  splay trees  graphs  graphs access lemma static optimality splay trees  graphs iii  graphs iv  sorting lower bounds  backwards analysis   line segment intersection   2d linear programming  lp boundedness    convex hull minimum enclosing disc  convex hull random incremental  closest pair using hashing  maximum flow max flow application hashing  maximum flow  maximum flow iii applications max flow min cut  minimum cost maximum flow   linear programming introduction  linear programming examples linear programming duality  linear programming duality  prescan list ranking parallel tree contraction  more list ranking  maximal independent set  np completeness reductions  np completeness  online algorithms competitive analysis more reductions  randomized online algorithms  continued  aproximation algorithms parallel mis lp relaxation vertex set cover  aproximation algorithms  string matching  string matching kmp revisited  tries suffix  trees information retrieval introduction ad hoc search  boolean retrieval text representation search engine indexes evaluation  information needs queries retrieval models  vector space retrieval models  probabilistic models retrieval models  statistical language models retrieval models  inference networks index construction index construction federated vertical search     relevance feedback search log analysis search log analysis     document clustering  document clustering     collaborative filtering  collaborative filtering categorization categorization  logistic regression algorithms          convexity  regularization  categorization  svm  learning rank  pairwise constrained optimization  learning rank  list wise constrained optimization  link analysis  hits  pagerank     link analysis  personalized topic sensitive pagerank     principle component analysis singular value decomposition  large scale structured learning classification
 226 , 0 , information retrieval introduction ad hoc search  boolean retrieval text representation search engine indexes evaluation  information needs queries retrieval models  vector space retrieval models  probabilistic models retrieval models  statistical language models retrieval models  inference networks index construction index construction federated vertical search     relevance feedback search log analysis search log analysis     document clustering  document clustering     collaborative filtering  collaborative filtering categorization categorization  logistic regression algorithms          convexity  regularization  categorization  svm  learning rank  pairwise constrained optimization  learning rank  list wise constrained optimization  link analysis  hits  pagerank     link analysis  personalized topic sensitive pagerank     principle component analysis singular value decomposition  large scale structured learning classification algorithms introduction  master theorem big oh recurrences  strassen fft fft fft dynamic programming dp  treaps quicksort  treaps continued + amortized analysis intro  splay trees amortized analysis treaps  binomial heaps  amortized analysis  splay trees  graphs  graphs access lemma static optimality splay trees  graphs iii  graphs iv  sorting lower bounds  backwards analysis   line segment intersection   2d linear programming  lp boundedness    convex hull minimum enclosing disc  convex hull random incremental  closest pair using hashing  maximum flow max flow application hashing  maximum flow  maximum flow iii applications max flow min cut  minimum cost maximum flow   linear programming introduction  linear programming examples linear programming duality  linear programming duality  prescan list ranking parallel tree contraction  more list ranking  maximal independent set  np completeness reductions  np completeness  online algorithms competitive analysis more reductions  randomized online algorithms  continued  aproximation algorithms parallel mis lp relaxation vertex set cover  aproximation algorithms  string matching  string matching kmp revisited  tries suffix  trees
 227 , 1 ,     probability mathematical statistics     probability      conditional distributions multivariate distributions      expectation variance      covariance moment generating functions      convergence      delta method      bias variance  bootstrap      bootstrap      parametric inference      maximum likelihood      hypothesis testing      hypothesis testing      bayesian inference modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences
 228 , 0 , modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences     probability mathematical statistics     probability      conditional distributions multivariate distributions      expectation variance      covariance moment generating functions      convergence      delta method      bias variance  bootstrap      bootstrap      parametric inference      maximum likelihood      hypothesis testing      hypothesis testing      bayesian inference
 229 , 1 ,     probability mathematical statistics     probability      conditional distributions multivariate distributions      expectation variance      covariance moment generating functions      convergence      delta method      bias variance  bootstrap      bootstrap      parametric inference      maximum likelihood      hypothesis testing      hypothesis testing      bayesian inference statistical graphics visualization graph principles 1 d categorical data lab 2  1 d categorical data comparisons 1 d categorical 1 d continuous data lab 3  1 d categorical data  1 d continuous data 1 d continuous data 1 d continuous data lab 4  1 d continuous data 1 d continuous data comparisons 1 d continuous data lab 5  1 d continuous data 2 d categorical data 2 d categorical data  lab exam 1 out lab session  practice session review lab 6  2d categorical data 2 d continuous data 2 d densities  visualizing missingness longitudinal data  time series  trends time series  oscillations differences  lab 7  longitudinal data  time series 3 d data conditioning plots lab 8  3 d  conditioning high dimensional structure projections high d data lab 9  high dimensional structure  lab exam 2 out high dimensions
 230 , 0 , statistical graphics visualization graph principles 1 d categorical data lab 2  1 d categorical data comparisons 1 d categorical 1 d continuous data lab 3  1 d categorical data  1 d continuous data 1 d continuous data 1 d continuous data lab 4  1 d continuous data 1 d continuous data comparisons 1 d continuous data lab 5  1 d continuous data 2 d categorical data 2 d categorical data  lab exam 1 out lab session  practice session review lab 6  2d categorical data 2 d continuous data 2 d densities  visualizing missingness longitudinal data  time series  trends time series  oscillations differences  lab 7  longitudinal data  time series 3 d data conditioning plots lab 8  3 d  conditioning high dimensional structure projections high d data lab 9  high dimensional structure  lab exam 2 out high dimensions     probability mathematical statistics     probability      conditional distributions multivariate distributions      expectation variance      covariance moment generating functions      convergence      delta method      bias variance  bootstrap      bootstrap      parametric inference      maximum likelihood      hypothesis testing      hypothesis testing      bayesian inference
 231 , 1 , algebraic structures introduction group theory  examples groups  dihedral groups  symmetric groups  fields  matrix groups  subgroups  lagrange theorem  homomorphisms  normal subgroups  first isomorphism theorem  simple groups  second third isomorphism theorems  fourth isomorphism theorem  projective special linear groups  automorphisms cayley theorem permutation groups permutation groups equation group actions cauchy theorem sylow theorem direct products classification finite abelian groups classification finite abelian groups classification finite abelian groups rings  integral domains  homomorphisms rings  ideals  isomorphism theorems  maximal ideals  field fractions integral domain  euclidean rings  unique factorization into primes  ring polynomials  ring polynomials over ufd ufd  finite field extensions  splitting fields introduction galois theory galois extensions symmetric rational functions splitting fields galois extensions fundamental theorem galois theory composite extensions  radical extensions  solvable groups  solvability by radicals basic logic propositional predicate logic  syntax  proof theory semantics up completeness theorem  lowenheim skolem theorems  applications compactness theorem
 232 , 0 , basic logic propositional predicate logic  syntax  proof theory semantics up completeness theorem  lowenheim skolem theorems  applications compactness theorem algebraic structures introduction group theory  examples groups  dihedral groups  symmetric groups  fields  matrix groups  subgroups  lagrange theorem  homomorphisms  normal subgroups  first isomorphism theorem  simple groups  second third isomorphism theorems  fourth isomorphism theorem  projective special linear groups  automorphisms cayley theorem permutation groups permutation groups equation group actions cauchy theorem sylow theorem direct products classification finite abelian groups classification finite abelian groups classification finite abelian groups rings  integral domains  homomorphisms rings  ideals  isomorphism theorems  maximal ideals  field fractions integral domain  euclidean rings  unique factorization into primes  ring polynomials  ring polynomials over ufd ufd  finite field extensions  splitting fields introduction galois theory galois extensions symmetric rational functions splitting fields galois extensions fundamental theorem galois theory composite extensions  radical extensions  solvable groups  solvability by radicals
 233 , 1 , discrete mathematics basic counting   inclusion exclusion    pigeonhole principle   binomial coefficients   linear algebra recurrences   generating functions   more generating functions   introduction graphs   relax   trees   traveling salesman problem   matchings   combinatorial geometry   ramsey theory   planar graphs   coloring  combinatorics  introduction  counting odd sized subsets n set   binomial coefficients  related bijections  compositions  binomial theorem  warm up    semi combinatorial algebraic proofs  stirling numbers second kind   vandermonde convolution   fibonacci numbers   generalized binomial theorem  estimates binomial coefficients   estimates harmonic numbers  overhang stack cards   changemaking  partitions  part    partitions  part   generating function binary trees   book sections 3 1 through 3 6 inclusive  12 1 through 12 3 inclusive  all lectures up february 1 inclusive   catalan numbers   bijection binary trees parenthesized expressions  basic inclusion–exclusion  area spherical triangle  notes inclusion–exclusion   general inclusion–exclusion  probability two numbers being coprime  part    probability two numbers being coprime  part   set families  sperner theorem  statement    partial orders  hasse diagrams  boolean cubes  sperner theorem   littlewood–offord theorem  appetizer erdős–ko–rado theorem   erdős–ko–rado theorem  part   erdős–ko–rado theorem  part  incidences between points lines  number edges c4 free graphs   number edges c4 free graphs  cauchy–schwarz inequality  erdős–szekeres theorem subsequences  statement    erdős–szekeres theorem subsequences  party six  clique anticliques  ramsey theorem  ramsey numbers  course page illustration explained   upper bound ramsey numbers  middle binomial coefficient revisited  lower bound ramsey numbers via pigeonhole principle   colorings  counting proofs  hard boolean functions   two colorability set systems  finite probability spaces  union bound   events  examples probability spaces  non bipartiteness random graph  independent events  construction paradoxical tournaments   random variables  expectation  indicator random variables  linearity expectation  bipartite subgraphs many edges   turán theorem  examples statement   crude version turán theorem   less crude version turán theorem   comparisons quicksort  part    comparisons quicksort  part   homework  7  markov inequality  paranoidal quicksort  alterations  sidon sets   dominating sets  better lower bounds ramsey numbers   asymptotics better lower bounds ramsey numbers  finding several monochromatic triangles   many monochromatic triangles via double counting  goodman theorem   tale experiment design  fano plane  finite projective planes  order projective plane  size projective plane  statement  homework  8  book sections 10 1–10 4  all lectures march 18 april 17 inclusive   size projective plane  incidence graph projective plane  dual projective plane  relation c4 free graphs   construction projective planes prime order   duality projective planes prime order  real projective plane  latin squares  orthogonal latin squares  definition    orthogonal latin squares finite projective planes
 234 , 0 ,  combinatorics  introduction  counting odd sized subsets n set   binomial coefficients  related bijections  compositions  binomial theorem  warm up    semi combinatorial algebraic proofs  stirling numbers second kind   vandermonde convolution   fibonacci numbers   generalized binomial theorem  estimates binomial coefficients   estimates harmonic numbers  overhang stack cards   changemaking  partitions  part    partitions  part   generating function binary trees   book sections 3 1 through 3 6 inclusive  12 1 through 12 3 inclusive  all lectures up february 1 inclusive   catalan numbers   bijection binary trees parenthesized expressions  basic inclusion–exclusion  area spherical triangle  notes inclusion–exclusion   general inclusion–exclusion  probability two numbers being coprime  part    probability two numbers being coprime  part   set families  sperner theorem  statement    partial orders  hasse diagrams  boolean cubes  sperner theorem   littlewood–offord theorem  appetizer erdős–ko–rado theorem   erdős–ko–rado theorem  part   erdős–ko–rado theorem  part  incidences between points lines  number edges c4 free graphs   number edges c4 free graphs  cauchy–schwarz inequality  erdős–szekeres theorem subsequences  statement    erdős–szekeres theorem subsequences  party six  clique anticliques  ramsey theorem  ramsey numbers  course page illustration explained   upper bound ramsey numbers  middle binomial coefficient revisited  lower bound ramsey numbers via pigeonhole principle   colorings  counting proofs  hard boolean functions   two colorability set systems  finite probability spaces  union bound   events  examples probability spaces  non bipartiteness random graph  independent events  construction paradoxical tournaments   random variables  expectation  indicator random variables  linearity expectation  bipartite subgraphs many edges   turán theorem  examples statement   crude version turán theorem   less crude version turán theorem   comparisons quicksort  part    comparisons quicksort  part   homework  7  markov inequality  paranoidal quicksort  alterations  sidon sets   dominating sets  better lower bounds ramsey numbers   asymptotics better lower bounds ramsey numbers  finding several monochromatic triangles   many monochromatic triangles via double counting  goodman theorem   tale experiment design  fano plane  finite projective planes  order projective plane  size projective plane  statement  homework  8  book sections 10 1–10 4  all lectures march 18 april 17 inclusive   size projective plane  incidence graph projective plane  dual projective plane  relation c4 free graphs   construction projective planes prime order   duality projective planes prime order  real projective plane  latin squares  orthogonal latin squares  definition    orthogonal latin squares finite projective planes discrete mathematics basic counting   inclusion exclusion    pigeonhole principle   binomial coefficients   linear algebra recurrences   generating functions   more generating functions   introduction graphs   relax   trees   traveling salesman problem   matchings   combinatorial geometry   ramsey theory   planar graphs   coloring
 235 , 1 , discrete mathematics basic counting   inclusion exclusion    pigeonhole principle   binomial coefficients   linear algebra recurrences   generating functions   more generating functions   introduction graphs   relax   trees   traveling salesman problem   matchings   combinatorial geometry   ramsey theory   planar graphs   coloring graph theory graph theory uses basic concepts approach diversity problems nontrivial applications operations research  computer science other disciplines  one very few mathematical areas where one always close interesting unsolved problems  topics include graphs subgraphs  trees  connectivity  euler tours hamilton cycles  matchings  graph colorings  planar graphs euler formula  directed graphs  network flows  counting arguments  graph algorithms
 236 , 0 , graph theory graph theory uses basic concepts approach diversity problems nontrivial applications operations research  computer science other disciplines  one very few mathematical areas where one always close interesting unsolved problems  topics include graphs subgraphs  trees  connectivity  euler tours hamilton cycles  matchings  graph colorings  planar graphs euler formula  directed graphs  network flows  counting arguments  graph algorithms discrete mathematics basic counting   inclusion exclusion    pigeonhole principle   binomial coefficients   linear algebra recurrences   generating functions   more generating functions   introduction graphs   relax   trees   traveling salesman problem   matchings   combinatorial geometry   ramsey theory   planar graphs   coloring
 237 , 1 , discrete mathematics basic counting   inclusion exclusion    pigeonhole principle   binomial coefficients   linear algebra recurrences   generating functions   more generating functions   introduction graphs   relax   trees   traveling salesman problem   matchings   combinatorial geometry   ramsey theory   planar graphs   coloring basic logic propositional predicate logic  syntax  proof theory semantics up completeness theorem  lowenheim skolem theorems  applications compactness theorem
 238 , 0 , basic logic propositional predicate logic  syntax  proof theory semantics up completeness theorem  lowenheim skolem theorems  applications compactness theorem discrete mathematics basic counting   inclusion exclusion    pigeonhole principle   binomial coefficients   linear algebra recurrences   generating functions   more generating functions   introduction graphs   relax   trees   traveling salesman problem   matchings   combinatorial geometry   ramsey theory   planar graphs   coloring
 239 , 1 , discrete mathematics basic counting   inclusion exclusion    pigeonhole principle   binomial coefficients   linear algebra recurrences   generating functions   more generating functions   introduction graphs   relax   trees   traveling salesman problem   matchings   combinatorial geometry   ramsey theory   planar graphs   coloring formal languages  automata computation  deterministic finite automata regular languages non determinism regular operations regular expressions pumping lemma regular languages minimizing dfas push down automata context free grammars  pumping lemma cfls equivalence pdas cfgs          chomsky normal form  turing machines         undecidability         undecidability          reductions         more mapping reducibilities         post correspondence problem         rice’s theorem  recursion theorem  fixed point         theorem         oracle turing machines turing reducibility         arithmetic hierarchy         kolmogorov chaitin         complexity         time complexity polynomial time          non deterministic turning machines np         np completeness cook levin         theorem         np completeness cook levin theorem         np  completeness  karp         space complexity  savitch         theorem pspace completeness         space complexity          randomized complexity  bpp  rp  etc
 240 , 0 , formal languages  automata computation  deterministic finite automata regular languages non determinism regular operations regular expressions pumping lemma regular languages minimizing dfas push down automata context free grammars  pumping lemma cfls equivalence pdas cfgs          chomsky normal form  turing machines         undecidability         undecidability          reductions         more mapping reducibilities         post correspondence problem         rice’s theorem  recursion theorem  fixed point         theorem         oracle turing machines turing reducibility         arithmetic hierarchy         kolmogorov chaitin         complexity         time complexity polynomial time          non deterministic turning machines np         np completeness cook levin         theorem         np completeness cook levin theorem         np  completeness  karp         space complexity  savitch         theorem pspace completeness         space complexity          randomized complexity  bpp  rp  etc discrete mathematics basic counting   inclusion exclusion    pigeonhole principle   binomial coefficients   linear algebra recurrences   generating functions   more generating functions   introduction graphs   relax   trees   traveling salesman problem   matchings   combinatorial geometry   ramsey theory   planar graphs   coloring
 241 , 1 , fundamentals statistical modeling  theory probability mathematical statistics probability models distribution theory  practice statistical inference based use maximum likelihood estimation  applications statistical modeling inference  using case studies drawn social  physical biomedical sciences modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences
 242 , 0 , modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences fundamentals statistical modeling  theory probability mathematical statistics probability models distribution theory  practice statistical inference based use maximum likelihood estimation  applications statistical modeling inference  using case studies drawn social  physical biomedical sciences
 243 , 1 , multidimensional calculus  serious introduction multidimensional calculus matrices linear transformation    carefully rigorously  write some proofs  functions several variables  regions domains  limits continuity  partial derivatives  linearization jacobian matrices  chain rules  inverse implicit functions  geometric applications  higher derivatives  taylor theorem  optimization  vector fields  multiple integrals change variables  leibnitz rule  line integrals  green theorem  path independence connectedness  conservative vector fields  surfaces orientability  surface integrals  divergence theorem stokes theorem probability probability spaces  random variables  random vectors  multivariate densities  distributions  expectations  sampling simulation  independence  conditioning  conditional distributions expectations  limit theorems strong law large numbers central limit theorem  well additional topics large deviations  random walks markov chains
 244 , 0 , probability probability spaces  random variables  random vectors  multivariate densities  distributions  expectations  sampling simulation  independence  conditioning  conditional distributions expectations  limit theorems strong law large numbers central limit theorem  well additional topics large deviations  random walks markov chains multidimensional calculus  serious introduction multidimensional calculus matrices linear transformation    carefully rigorously  write some proofs  functions several variables  regions domains  limits continuity  partial derivatives  linearization jacobian matrices  chain rules  inverse implicit functions  geometric applications  higher derivatives  taylor theorem  optimization  vector fields  multiple integrals change variables  leibnitz rule  line integrals  green theorem  path independence connectedness  conservative vector fields  surfaces orientability  surface integrals  divergence theorem stokes theorem
 245 , 1 , vector analysis more emphasis will be placed writing proofs basic geometry topology euclidean space  curves space  arclength  curvature torsion  functions euclidean spaces  limits continuity  partial derivatives  gradients linearization  chain rules  inverse implicit function theorems  geometric applications  higher derivatives  taylor’s theorem  optimization  vector ﬁelds  multiple integrals change variables  leibnitz’s rule  conservative solenoidal vector ﬁelds  divergence curl  surfaces orientability  surface integrals  gauss green theorems stokes’s theorem probability probability spaces  random variables  random vectors  multivariate densities  distributions  expectations  sampling simulation  independence  conditioning  conditional distributions expectations  limit theorems strong law large numbers central limit theorem  well additional topics large deviations  random walks markov chains
 246 , 0 , probability probability spaces  random variables  random vectors  multivariate densities  distributions  expectations  sampling simulation  independence  conditioning  conditional distributions expectations  limit theorems strong law large numbers central limit theorem  well additional topics large deviations  random walks markov chains vector analysis more emphasis will be placed writing proofs basic geometry topology euclidean space  curves space  arclength  curvature torsion  functions euclidean spaces  limits continuity  partial derivatives  gradients linearization  chain rules  inverse implicit function theorems  geometric applications  higher derivatives  taylor’s theorem  optimization  vector ﬁelds  multiple integrals change variables  leibnitz’s rule  conservative solenoidal vector ﬁelds  divergence curl  surfaces orientability  surface integrals  gauss green theorems stokes’s theorem
 247 , 1 , matrix algebra applications systems linear equations row reduction echelon forms vector equations matrix equation ax = b solution sets linear systems applications linear systems linear independence linear transformations matrix linear transformation matrix operations inverse matrix characterizations invertible matrices partitioned matrices matrix factorizations leontief input output model introduction determinants properties determinants vector spaces subspaces null spaces  column spaces  linear transformations linearly independent sets  bases coordinate systems dimension vector space rank change basis applications markov chains eigenvectors eigenvalues characteristic equation diagonalization inner product  length  orthogonality orthogonal sets orthogonal projections gram schmidt process  qr factorization least squares problems diagonlization symmetric matrices quadratic forms constrained optimization singular value decomposition modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences
 248 , 0 , modern regression material course concentrates methods analysis data  emphasis description  validation  interpretation  topics include exploratory data analysis  statistical computing  regression analysis  real world examples will be drawn engineering various physical social sciences matrix algebra applications systems linear equations row reduction echelon forms vector equations matrix equation ax = b solution sets linear systems applications linear systems linear independence linear transformations matrix linear transformation matrix operations inverse matrix characterizations invertible matrices partitioned matrices matrix factorizations leontief input output model introduction determinants properties determinants vector spaces subspaces null spaces  column spaces  linear transformations linearly independent sets  bases coordinate systems dimension vector space rank change basis applications markov chains eigenvectors eigenvalues characteristic equation diagonalization inner product  length  orthogonality orthogonal sets orthogonal projections gram schmidt process  qr factorization least squares problems diagonlization symmetric matrices quadratic forms constrained optimization singular value decomposition
 249 , 1 , differential equations introduction differential equations   seperable equations  some basic mathematical models   linear first order differential equations   direction fields   existence uniqueness theorems  autonomous differential equations  phase line  laplace transform definition laplace transform properties solving second order linear equations  derivatives transforms   translation axis  undamped harmonic oscillators  damped harmonic oscillators   solving non homogeneous linear equations  harmonic oscillators external forcing  transforms step functions discontinuous forcing functions impulse functions convolution integral convolution integrals laplace transforms mid semester break   no    systems differential equations laplace transforms parametric curves graphing solutions systmes equations   nullclines   analytic qualitative techniques analytic qualitative techniques theory second order linear equations fundamental sets solutions theory first order linear systems phase portraits classification equlibrium points classification equilibrium points linear nonlinear equations fourier series  fourier convergence theorem  fourier sine cosine series  wave equation  separation variables  separation variables  boundary value problems  solutions wave equation  more about thewave equation other fun topics introduction robotics computer vision  computer vision  iii     robotc   nxt kits hand out lego kits mandatory      controls  iii     motion planning      motion planning  iv     graph search      localization      locomotion     hand out usar     human robot interaction  evaluate design proposals  groups  usar demos     usar final competition     kinematics 2     inverse kinematics     non holonomic path planning     survey     rube goldberg  lab1      computer vision      vision programs     controls      dead reckoning     controls      moore law     trajectory following     motion planning      motion planning  iii     graph search      localization      human robot interaction      usar wrapup     kinematics 1     coordinate transformations intro     inverse kinematics non holonomic path planning   2
 250 , 0 , introduction robotics computer vision  computer vision  iii     robotc   nxt kits hand out lego kits mandatory      controls  iii     motion planning      motion planning  iv     graph search      localization      locomotion     hand out usar     human robot interaction  evaluate design proposals  groups  usar demos     usar final competition     kinematics 2     inverse kinematics     non holonomic path planning     survey     rube goldberg  lab1      computer vision      vision programs     controls      dead reckoning     controls      moore law     trajectory following     motion planning      motion planning  iii     graph search      localization      human robot interaction      usar wrapup     kinematics 1     coordinate transformations intro     inverse kinematics non holonomic path planning   2 differential equations introduction differential equations   seperable equations  some basic mathematical models   linear first order differential equations   direction fields   existence uniqueness theorems  autonomous differential equations  phase line  laplace transform definition laplace transform properties solving second order linear equations  derivatives transforms   translation axis  undamped harmonic oscillators  damped harmonic oscillators   solving non homogeneous linear equations  harmonic oscillators external forcing  transforms step functions discontinuous forcing functions impulse functions convolution integral convolution integrals laplace transforms mid semester break   no    systems differential equations laplace transforms parametric curves graphing solutions systmes equations   nullclines   analytic qualitative techniques analytic qualitative techniques theory second order linear equations fundamental sets solutions theory first order linear systems phase portraits classification equlibrium points classification equilibrium points linear nonlinear equations fourier series  fourier convergence theorem  fourier sine cosine series  wave equation  separation variables  separation variables  boundary value problems  solutions wave equation  more about thewave equation other fun topics
 251 , 1 , differential equations introduction differential equations   seperable equations  some basic mathematical models   linear first order differential equations   direction fields   existence uniqueness theorems  autonomous differential equations  phase line  laplace transform definition laplace transform properties solving second order linear equations  derivatives transforms   translation axis  undamped harmonic oscillators  damped harmonic oscillators   solving non homogeneous linear equations  harmonic oscillators external forcing  transforms step functions discontinuous forcing functions impulse functions convolution integral convolution integrals laplace transforms mid semester break   no    systems differential equations laplace transforms parametric curves graphing solutions systmes equations   nullclines   analytic qualitative techniques analytic qualitative techniques theory second order linear equations fundamental sets solutions theory first order linear systems phase portraits classification equlibrium points classification equilibrium points linear nonlinear equations fourier series  fourier convergence theorem  fourier sine cosine series  wave equation  separation variables  separation variables  boundary value problems  solutions wave equation  more about thewave equation other fun topics numerical methods analytical numerical solutions approximations errors   mathcad basic operations  roots equations     introduction     bisection method  c++ programming review  learn c++ programming     false position method     newton raphson method     secant method  multiple roots    systems nonlinear equations    linear algebraic equations     introduction      gauss elimination gauss elimination     lu decomposition  gauss seidel 4  optimization     introduction    1d unconstrained optimization   multi dimensional unconstrained optimization curve fitting     introduction     least square regression     newton interpolating polynomials  splines   lagrange interpolation polynomials 6  numerical  integration     introduction  numerical differentiation ordinary differential equations  ode      introduction  euler methods  runge kutta methods  boundary value eigenvalue problems partial differential equations  pde      introduction  elliptic equations  parabolic equations ansys
 252 , 0 , numerical methods analytical numerical solutions approximations errors   mathcad basic operations  roots equations     introduction     bisection method  c++ programming review  learn c++ programming     false position method     newton raphson method     secant method  multiple roots    systems nonlinear equations    linear algebraic equations     introduction      gauss elimination gauss elimination     lu decomposition  gauss seidel 4  optimization     introduction    1d unconstrained optimization   multi dimensional unconstrained optimization curve fitting     introduction     least square regression     newton interpolating polynomials  splines   lagrange interpolation polynomials 6  numerical  integration     introduction  numerical differentiation ordinary differential equations  ode      introduction  euler methods  runge kutta methods  boundary value eigenvalue problems partial differential equations  pde      introduction  elliptic equations  parabolic equations ansys differential equations introduction differential equations   seperable equations  some basic mathematical models   linear first order differential equations   direction fields   existence uniqueness theorems  autonomous differential equations  phase line  laplace transform definition laplace transform properties solving second order linear equations  derivatives transforms   translation axis  undamped harmonic oscillators  damped harmonic oscillators   solving non homogeneous linear equations  harmonic oscillators external forcing  transforms step functions discontinuous forcing functions impulse functions convolution integral convolution integrals laplace transforms mid semester break   no    systems differential equations laplace transforms parametric curves graphing solutions systmes equations   nullclines   analytic qualitative techniques analytic qualitative techniques theory second order linear equations fundamental sets solutions theory first order linear systems phase portraits classification equlibrium points classification equilibrium points linear nonlinear equations fourier series  fourier convergence theorem  fourier sine cosine series  wave equation  separation variables  separation variables  boundary value problems  solutions wave equation  more about thewave equation other fun topics
 253 , 1 , principles programming introduction  evaluation   typing practice  style  hints  binding  scope  functions recursion   induction scoping recursive functions  complete induction  datatypes   patterns  lists structural induction tail recursion lists  equality types  higher order functions staged computation data structures currying  folding  mapping  representation invariants continuations tail recursion vs continuations  regular expressions practice midterm  combinators searching  failing  stopping early  exceptions  n queens functors substructures ascription  where  functors  game tree search mutation state arrays mutable state  ephemeral data structures  streams  demand driven computation operations streams  sequences flip flops  streams  laziness memoization  lexical analysis   grammars languages grammars   parsing evaluation  interpreters  recursion language properties  interpreters recursion    computability  part  decidability  tractability  tiling  computability  part  categories  topology  adversarial games foundations programming languages introduction  programming language  rule induction  rule induction  binding  substitution dynamics  statics  safety abstract syntax de bruijn indices  functions gödel t pcf  substitution lemma  definability undefinability products sums products  sums  pattern matching  recursive types objects dynamic dispatch proof techniques  dynamic languages dynamic languages typed languages dynamic hybrid typing  church λ calculus modernized algol dynamic typing refinements  scoped assignables assignable references system f polymorphism polymorphism  representation independence  evaluation dynamics cost dynamics parallelism  nested data parallelism  control stacks  stacks  brent theorem  free assignables  monads futures speculations  call by need  communication π calculus concurent algol concurent algol  proofs programs judgments types dependently typed programming
 254 , 0 , foundations programming languages introduction  programming language  rule induction  rule induction  binding  substitution dynamics  statics  safety abstract syntax de bruijn indices  functions gödel t pcf  substitution lemma  definability undefinability products sums products  sums  pattern matching  recursive types objects dynamic dispatch proof techniques  dynamic languages dynamic languages typed languages dynamic hybrid typing  church λ calculus modernized algol dynamic typing refinements  scoped assignables assignable references system f polymorphism polymorphism  representation independence  evaluation dynamics cost dynamics parallelism  nested data parallelism  control stacks  stacks  brent theorem  free assignables  monads futures speculations  call by need  communication π calculus concurent algol concurent algol  proofs programs judgments types dependently typed programming principles programming introduction  evaluation   typing practice  style  hints  binding  scope  functions recursion   induction scoping recursive functions  complete induction  datatypes   patterns  lists structural induction tail recursion lists  equality types  higher order functions staged computation data structures currying  folding  mapping  representation invariants continuations tail recursion vs continuations  regular expressions practice midterm  combinators searching  failing  stopping early  exceptions  n queens functors substructures ascription  where  functors  game tree search mutation state arrays mutable state  ephemeral data structures  streams  demand driven computation operations streams  sequences flip flops  streams  laziness memoization  lexical analysis   grammars languages grammars   parsing evaluation  interpreters  recursion language properties  interpreters recursion    computability  part  decidability  tractability  tiling  computability  part  categories  topology  adversarial games
 255 , 1 , principles programming introduction  evaluation   typing practice  style  hints  binding  scope  functions recursion   induction scoping recursive functions  complete induction  datatypes   patterns  lists structural induction tail recursion lists  equality types  higher order functions staged computation data structures currying  folding  mapping  representation invariants continuations tail recursion vs continuations  regular expressions practice midterm  combinators searching  failing  stopping early  exceptions  n queens functors substructures ascription  where  functors  game tree search mutation state arrays mutable state  ephemeral data structures  streams  demand driven computation operations streams  sequences flip flops  streams  laziness memoization  lexical analysis   grammars languages grammars   parsing evaluation  interpreters  recursion language properties  interpreters recursion    computability  part  decidability  tractability  tiling  computability  part  categories  topology  adversarial games constructive logic clue  natural deduction  verifications uses  tutch harmony  proofs programs  soundness completeness  β reduction substitution  substitution sequent calculus  quantifiers  sequent calculus  cut elimination  natural numbers  cut elimination  classical logic  classical logic computation  theorem proving  inversion  theorem proving  g4ip  theorem prover  logic programming  prolog  prolog  typed prolog   higher order logic programming  higher order logic programming  g4ip prolog  total logic programming  dependent types  lf type theory  higher order abstract syntax  higher order judgments  logic programming elf  logic programming elf  twelf  linear logic  linear logic
 256 , 0 , constructive logic clue  natural deduction  verifications uses  tutch harmony  proofs programs  soundness completeness  β reduction substitution  substitution sequent calculus  quantifiers  sequent calculus  cut elimination  natural numbers  cut elimination  classical logic  classical logic computation  theorem proving  inversion  theorem proving  g4ip  theorem prover  logic programming  prolog  prolog  typed prolog   higher order logic programming  higher order logic programming  g4ip prolog  total logic programming  dependent types  lf type theory  higher order abstract syntax  higher order judgments  logic programming elf  logic programming elf  twelf  linear logic  linear logic principles programming introduction  evaluation   typing practice  style  hints  binding  scope  functions recursion   induction scoping recursive functions  complete induction  datatypes   patterns  lists structural induction tail recursion lists  equality types  higher order functions staged computation data structures currying  folding  mapping  representation invariants continuations tail recursion vs continuations  regular expressions practice midterm  combinators searching  failing  stopping early  exceptions  n queens functors substructures ascription  where  functors  game tree search mutation state arrays mutable state  ephemeral data structures  streams  demand driven computation operations streams  sequences flip flops  streams  laziness memoization  lexical analysis   grammars languages grammars   parsing evaluation  interpreters  recursion language properties  interpreters recursion    computability  part  decidability  tractability  tiling  computability  part  categories  topology  adversarial games
 257 , 1 , principles programming introduction  evaluation   typing practice  style  hints  binding  scope  functions recursion   induction scoping recursive functions  complete induction  datatypes   patterns  lists structural induction tail recursion lists  equality types  higher order functions staged computation data structures currying  folding  mapping  representation invariants continuations tail recursion vs continuations  regular expressions practice midterm  combinators searching  failing  stopping early  exceptions  n queens functors substructures ascription  where  functors  game tree search mutation state arrays mutable state  ephemeral data structures  streams  demand driven computation operations streams  sequences flip flops  streams  laziness memoization  lexical analysis   grammars languages grammars   parsing evaluation  interpreters  recursion language properties  interpreters recursion    computability  part  decidability  tractability  tiling  computability  part  categories  topology  adversarial games information retrieval introduction ad hoc search  boolean retrieval text representation search engine indexes evaluation  information needs queries retrieval models  vector space retrieval models  probabilistic models retrieval models  statistical language models retrieval models  inference networks index construction index construction federated vertical search     relevance feedback search log analysis search log analysis     document clustering  document clustering     collaborative filtering  collaborative filtering categorization categorization  logistic regression algorithms          convexity  regularization  categorization  svm  learning rank  pairwise constrained optimization  learning rank  list wise constrained optimization  link analysis  hits  pagerank     link analysis  personalized topic sensitive pagerank     principle component analysis singular value decomposition  large scale structured learning classification
 258 , 0 , information retrieval introduction ad hoc search  boolean retrieval text representation search engine indexes evaluation  information needs queries retrieval models  vector space retrieval models  probabilistic models retrieval models  statistical language models retrieval models  inference networks index construction index construction federated vertical search     relevance feedback search log analysis search log analysis     document clustering  document clustering     collaborative filtering  collaborative filtering categorization categorization  logistic regression algorithms          convexity  regularization  categorization  svm  learning rank  pairwise constrained optimization  learning rank  list wise constrained optimization  link analysis  hits  pagerank     link analysis  personalized topic sensitive pagerank     principle component analysis singular value decomposition  large scale structured learning classification principles programming introduction  evaluation   typing practice  style  hints  binding  scope  functions recursion   induction scoping recursive functions  complete induction  datatypes   patterns  lists structural induction tail recursion lists  equality types  higher order functions staged computation data structures currying  folding  mapping  representation invariants continuations tail recursion vs continuations  regular expressions practice midterm  combinators searching  failing  stopping early  exceptions  n queens functors substructures ascription  where  functors  game tree search mutation state arrays mutable state  ephemeral data structures  streams  demand driven computation operations streams  sequences flip flops  streams  laziness memoization  lexical analysis   grammars languages grammars   parsing evaluation  interpreters  recursion language properties  interpreters recursion    computability  part  decidability  tractability  tiling  computability  part  categories  topology  adversarial games
 259 , 1 , principles programming introduction  evaluation   typing practice  style  hints  binding  scope  functions recursion   induction scoping recursive functions  complete induction  datatypes   patterns  lists structural induction tail recursion lists  equality types  higher order functions staged computation data structures currying  folding  mapping  representation invariants continuations tail recursion vs continuations  regular expressions practice midterm  combinators searching  failing  stopping early  exceptions  n queens functors substructures ascription  where  functors  game tree search mutation state arrays mutable state  ephemeral data structures  streams  demand driven computation operations streams  sequences flip flops  streams  laziness memoization  lexical analysis   grammars languages grammars   parsing evaluation  interpreters  recursion language properties  interpreters recursion    computability  part  decidability  tractability  tiling  computability  part  categories  topology  adversarial games artificial neural networks organizational meeting  introduction neural nets perceptrons lms algorithm backpropagation learning visually guided robot control optimization techniques overfitting  cross validation  early stopping simple recurrent networks language processing models pattern classification pattern classification em  expectation maximization  algorithm neural networks control support vector machines time series prediction shared weight networks competitive learning kohonen nets hebbian learning principal components analysis hopfield nets boltzmann machines mean field approximation helmholtz machines  minimum description length bayesian networks computational learning theory connectionist symbol processing reinforcement learning neurophysiology computer scientists
 260 , 0 , artificial neural networks organizational meeting  introduction neural nets perceptrons lms algorithm backpropagation learning visually guided robot control optimization techniques overfitting  cross validation  early stopping simple recurrent networks language processing models pattern classification pattern classification em  expectation maximization  algorithm neural networks control support vector machines time series prediction shared weight networks competitive learning kohonen nets hebbian learning principal components analysis hopfield nets boltzmann machines mean field approximation helmholtz machines  minimum description length bayesian networks computational learning theory connectionist symbol processing reinforcement learning neurophysiology computer scientists principles programming introduction  evaluation   typing practice  style  hints  binding  scope  functions recursion   induction scoping recursive functions  complete induction  datatypes   patterns  lists structural induction tail recursion lists  equality types  higher order functions staged computation data structures currying  folding  mapping  representation invariants continuations tail recursion vs continuations  regular expressions practice midterm  combinators searching  failing  stopping early  exceptions  n queens functors substructures ascription  where  functors  game tree search mutation state arrays mutable state  ephemeral data structures  streams  demand driven computation operations streams  sequences flip flops  streams  laziness memoization  lexical analysis   grammars languages grammars   parsing evaluation  interpreters  recursion language properties  interpreters recursion    computability  part  decidability  tractability  tiling  computability  part  categories  topology  adversarial games
 261 , 1 , principles programming introduction  evaluation   typing practice  style  hints  binding  scope  functions recursion   induction scoping recursive functions  complete induction  datatypes   patterns  lists structural induction tail recursion lists  equality types  higher order functions staged computation data structures currying  folding  mapping  representation invariants continuations tail recursion vs continuations  regular expressions practice midterm  combinators searching  failing  stopping early  exceptions  n queens functors substructures ascription  where  functors  game tree search mutation state arrays mutable state  ephemeral data structures  streams  demand driven computation operations streams  sequences flip flops  streams  laziness memoization  lexical analysis   grammars languages grammars   parsing evaluation  interpreters  recursion language properties  interpreters recursion    computability  part  decidability  tractability  tiling  computability  part  categories  topology  adversarial games  introduction software engineering introduction  software lifecycle extreme programming estimation planning planning risk risk extreme programming 2 prototyping requirements requirements engineering requirements engineering goal modeling goal modeling just enough uml prototype   requirements  statecharts design  information hiding      coupling cohesion     kwic   design structure     matrices     design patterns     frameworks     software architecture     software architecture     hoare logic     hoare logic  continued     esc java     esc java example     model checking formal     modeling     model checking formal     modeling 2     model checking promela     testing     testing  test selection     code reviews      analysis  prefix     analysis  fluid     cmmi     object oriented design     aspect oriented programming
 262 , 0 ,  introduction software engineering introduction  software lifecycle extreme programming estimation planning planning risk risk extreme programming 2 prototyping requirements requirements engineering requirements engineering goal modeling goal modeling just enough uml prototype   requirements  statecharts design  information hiding      coupling cohesion     kwic   design structure     matrices     design patterns     frameworks     software architecture     software architecture     hoare logic     hoare logic  continued     esc java     esc java example     model checking formal     modeling     model checking formal     modeling 2     model checking promela     testing     testing  test selection     code reviews      analysis  prefix     analysis  fluid     cmmi     object oriented design     aspect oriented programming principles programming introduction  evaluation   typing practice  style  hints  binding  scope  functions recursion   induction scoping recursive functions  complete induction  datatypes   patterns  lists structural induction tail recursion lists  equality types  higher order functions staged computation data structures currying  folding  mapping  representation invariants continuations tail recursion vs continuations  regular expressions practice midterm  combinators searching  failing  stopping early  exceptions  n queens functors substructures ascription  where  functors  game tree search mutation state arrays mutable state  ephemeral data structures  streams  demand driven computation operations streams  sequences flip flops  streams  laziness memoization  lexical analysis   grammars languages grammars   parsing evaluation  interpreters  recursion language properties  interpreters recursion    computability  part  decidability  tractability  tiling  computability  part  categories  topology  adversarial games
 263 , 1 , fundamental data structures algorithms introduction  maze java  eclipse  frontdesk union find analyzing algorithms part 1 junit analysis analyzing algorithms part 2  sorting lists  stacks  queues using debugger dictionaries hashing correctness proofs priority queues hashing binary search trees  part 1 binary search trees  part 2 binary search trees  part 3 search trees  part 3 compression compression dynamic programming  part 1 dynamic programming dynamic programming  part 2 graphs  part 1 graphs 1 graphs  part 2 graphs  part 3 graphs 2 state machines 1 state machines 2 state machines string matching correctness correctness game trees game trees linear time sorting  parallel sorting parallelism   concurrency no recitation   no   parallelism   concurrency part 2 prefix sum rank selection skip lists artificial intelligence optimization 1  discrete heuristic  heuristic search  adding state  csps  application           classical planning               motion planning robotics             intro probability             bayes nets 1             bayes nets 2             optimization 2  stochastic continuous                data driven ai  probabilistic            data driven ai  instance based           data driven ai  regression classification            clustering               living your life no regret          computer vision          bandits          mdps             imitation learning               reinforcement learning 1                 reinforcement learning 2                 games 1  zero sum minimax theorem                games 2  general sum correlation             auction   voting                 multi agent planning             natural language processing              ai real world
 264 , 0 , artificial intelligence optimization 1  discrete heuristic  heuristic search  adding state  csps  application           classical planning               motion planning robotics             intro probability             bayes nets 1             bayes nets 2             optimization 2  stochastic continuous                data driven ai  probabilistic            data driven ai  instance based           data driven ai  regression classification            clustering               living your life no regret          computer vision          bandits          mdps             imitation learning               reinforcement learning 1                 reinforcement learning 2                 games 1  zero sum minimax theorem                games 2  general sum correlation             auction   voting                 multi agent planning             natural language processing              ai real world fundamental data structures algorithms introduction  maze java  eclipse  frontdesk union find analyzing algorithms part 1 junit analysis analyzing algorithms part 2  sorting lists  stacks  queues using debugger dictionaries hashing correctness proofs priority queues hashing binary search trees  part 1 binary search trees  part 2 binary search trees  part 3 search trees  part 3 compression compression dynamic programming  part 1 dynamic programming dynamic programming  part 2 graphs  part 1 graphs 1 graphs  part 2 graphs  part 3 graphs 2 state machines 1 state machines 2 state machines string matching correctness correctness game trees game trees linear time sorting  parallel sorting parallelism   concurrency no recitation   no   parallelism   concurrency part 2 prefix sum rank selection skip lists
 265 , 1 , fundamental data structures algorithms introduction  maze java  eclipse  frontdesk union find analyzing algorithms part 1 junit analysis analyzing algorithms part 2  sorting lists  stacks  queues using debugger dictionaries hashing correctness proofs priority queues hashing binary search trees  part 1 binary search trees  part 2 binary search trees  part 3 search trees  part 3 compression compression dynamic programming  part 1 dynamic programming dynamic programming  part 2 graphs  part 1 graphs 1 graphs  part 2 graphs  part 3 graphs 2 state machines 1 state machines 2 state machines string matching correctness correctness game trees game trees linear time sorting  parallel sorting parallelism   concurrency no recitation   no   parallelism   concurrency part 2 prefix sum rank selection skip lists database db applications  readings      introduction  r g chapter             1   sample sqlite3 database  see                 readme txt file      entity relationship model     relational model     relational algebra     relational calculus     sql  query language part     sql  query language part     2 r g chapter 5   sql      part 3   app  development  r g chapter 6   code example     storing data disks      buffers  files     tree structured indexes     file organizations   indexing     hashing     sorting   query evaluation relational operators       relational operators continued  same foils  r g             chapter 12 14   review      query optimization  r g chapter 15 plus system r             optimizer   selinger paper     schema refinement normalization      schema refinement normalization              physical database design tuning  r g chapter 20      database design methodology  not book   methodology     transaction overview concurrency control     concurrency control part 2     concurrency control part 3     logging recovery part 1 logging recovery part 2     spatial data     data warehousing data mining distr  dbmss bonus multimedia db
 266 , 0 , database db applications  readings      introduction  r g chapter             1   sample sqlite3 database  see                 readme txt file      entity relationship model     relational model     relational algebra     relational calculus     sql  query language part     sql  query language part     2 r g chapter 5   sql      part 3   app  development  r g chapter 6   code example     storing data disks      buffers  files     tree structured indexes     file organizations   indexing     hashing     sorting   query evaluation relational operators       relational operators continued  same foils  r g             chapter 12 14   review      query optimization  r g chapter 15 plus system r             optimizer   selinger paper     schema refinement normalization      schema refinement normalization              physical database design tuning  r g chapter 20      database design methodology  not book   methodology     transaction overview concurrency control     concurrency control part 2     concurrency control part 3     logging recovery part 1 logging recovery part 2     spatial data     data warehousing data mining distr  dbmss bonus multimedia db fundamental data structures algorithms introduction  maze java  eclipse  frontdesk union find analyzing algorithms part 1 junit analysis analyzing algorithms part 2  sorting lists  stacks  queues using debugger dictionaries hashing correctness proofs priority queues hashing binary search trees  part 1 binary search trees  part 2 binary search trees  part 3 search trees  part 3 compression compression dynamic programming  part 1 dynamic programming dynamic programming  part 2 graphs  part 1 graphs 1 graphs  part 2 graphs  part 3 graphs 2 state machines 1 state machines 2 state machines string matching correctness correctness game trees game trees linear time sorting  parallel sorting parallelism   concurrency no recitation   no   parallelism   concurrency part 2 prefix sum rank selection skip lists
 267 , 1 , fundamental data structures algorithms introduction  maze java  eclipse  frontdesk union find analyzing algorithms part 1 junit analysis analyzing algorithms part 2  sorting lists  stacks  queues using debugger dictionaries hashing correctness proofs priority queues hashing binary search trees  part 1 binary search trees  part 2 binary search trees  part 3 search trees  part 3 compression compression dynamic programming  part 1 dynamic programming dynamic programming  part 2 graphs  part 1 graphs 1 graphs  part 2 graphs  part 3 graphs 2 state machines 1 state machines 2 state machines string matching correctness correctness game trees game trees linear time sorting  parallel sorting parallelism   concurrency no recitation   no   parallelism   concurrency part 2 prefix sum rank selection skip lists bug catching overview model checking quick introduction logic propositional logic davis putnam procedure  fast sat solvers binary decision diagrams  bdds  property specification using computation tree logic ctl  linear temporal logic  ltl  ltl tableaux construction ltl model checking explicit state model checking partial order reduction symbolic model checking detailed introduction model checker smv detailed introduction model checker spin abstract interpretation predicate abstraction abstract refinement detailed introduction model checker cbmc compositional model checking probabilistic model checking statistical model checking
 268 , 0 , bug catching overview model checking quick introduction logic propositional logic davis putnam procedure  fast sat solvers binary decision diagrams  bdds  property specification using computation tree logic ctl  linear temporal logic  ltl  ltl tableaux construction ltl model checking explicit state model checking partial order reduction symbolic model checking detailed introduction model checker smv detailed introduction model checker spin abstract interpretation predicate abstraction abstract refinement detailed introduction model checker cbmc compositional model checking probabilistic model checking statistical model checking fundamental data structures algorithms introduction  maze java  eclipse  frontdesk union find analyzing algorithms part 1 junit analysis analyzing algorithms part 2  sorting lists  stacks  queues using debugger dictionaries hashing correctness proofs priority queues hashing binary search trees  part 1 binary search trees  part 2 binary search trees  part 3 search trees  part 3 compression compression dynamic programming  part 1 dynamic programming dynamic programming  part 2 graphs  part 1 graphs 1 graphs  part 2 graphs  part 3 graphs 2 state machines 1 state machines 2 state machines string matching correctness correctness game trees game trees linear time sorting  parallel sorting parallelism   concurrency no recitation   no   parallelism   concurrency part 2 prefix sum rank selection skip lists
 269 , 1 , fundamental data structures algorithms introduction  maze java  eclipse  frontdesk union find analyzing algorithms part 1 junit analysis analyzing algorithms part 2  sorting lists  stacks  queues using debugger dictionaries hashing correctness proofs priority queues hashing binary search trees  part 1 binary search trees  part 2 binary search trees  part 3 search trees  part 3 compression compression dynamic programming  part 1 dynamic programming dynamic programming  part 2 graphs  part 1 graphs 1 graphs  part 2 graphs  part 3 graphs 2 state machines 1 state machines 2 state machines string matching correctness correctness game trees game trees linear time sorting  parallel sorting parallelism   concurrency no recitation   no   parallelism   concurrency part 2 prefix sum rank selection skip lists integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions
 270 , 0 , integration  differential equations  approximation integration by parts trigonometric integrals trigonometric substitution partial fractions strategy integration approximate integration improper integrals arc length applications integration probability separable equations direction fields euler method modeling differential equations exponential growth decay logistic equation linear equqations predator prey systems sequences newton method series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials pplications taylor polynomials second order linear equations nonhomogeneous linear equations applications second order linear equations series solutions fundamental data structures algorithms introduction  maze java  eclipse  frontdesk union find analyzing algorithms part 1 junit analysis analyzing algorithms part 2  sorting lists  stacks  queues using debugger dictionaries hashing correctness proofs priority queues hashing binary search trees  part 1 binary search trees  part 2 binary search trees  part 3 search trees  part 3 compression compression dynamic programming  part 1 dynamic programming dynamic programming  part 2 graphs  part 1 graphs 1 graphs  part 2 graphs  part 3 graphs 2 state machines 1 state machines 2 state machines string matching correctness correctness game trees game trees linear time sorting  parallel sorting parallelism   concurrency no recitation   no   parallelism   concurrency part 2 prefix sum rank selection skip lists
 271 , 1 , fundamental data structures algorithms introduction  maze java  eclipse  frontdesk union find analyzing algorithms part 1 junit analysis analyzing algorithms part 2  sorting lists  stacks  queues using debugger dictionaries hashing correctness proofs priority queues hashing binary search trees  part 1 binary search trees  part 2 binary search trees  part 3 search trees  part 3 compression compression dynamic programming  part 1 dynamic programming dynamic programming  part 2 graphs  part 1 graphs 1 graphs  part 2 graphs  part 3 graphs 2 state machines 1 state machines 2 state machines string matching correctness correctness game trees game trees linear time sorting  parallel sorting parallelism   concurrency no recitation   no   parallelism   concurrency part 2 prefix sum rank selection skip lists search engines web mining  introduction text search text representation search engine indexes information needs queries vector space retrieval model probabilistic retrieval models probabilistic retrieval models evaluating search effectiveness evaluating search effectiveness index construction index construction search log analysis search log analysis clustering clustering collaborative filtering  collaborative filtering text categorization text categorization text categorization text categorization learning rank learning rank significance tests link analysis link analysis query classification  federated search
 272 , 0 , search engines web mining  introduction text search text representation search engine indexes information needs queries vector space retrieval model probabilistic retrieval models probabilistic retrieval models evaluating search effectiveness evaluating search effectiveness index construction index construction search log analysis search log analysis clustering clustering collaborative filtering  collaborative filtering text categorization text categorization text categorization text categorization learning rank learning rank significance tests link analysis link analysis query classification  federated search fundamental data structures algorithms introduction  maze java  eclipse  frontdesk union find analyzing algorithms part 1 junit analysis analyzing algorithms part 2  sorting lists  stacks  queues using debugger dictionaries hashing correctness proofs priority queues hashing binary search trees  part 1 binary search trees  part 2 binary search trees  part 3 search trees  part 3 compression compression dynamic programming  part 1 dynamic programming dynamic programming  part 2 graphs  part 1 graphs 1 graphs  part 2 graphs  part 3 graphs 2 state machines 1 state machines 2 state machines string matching correctness correctness game trees game trees linear time sorting  parallel sorting parallelism   concurrency no recitation   no   parallelism   concurrency part 2 prefix sum rank selection skip lists
 273 , 1 , linear algebra  abstract vector spaces  linear transformations  eigenvalues  eigenvectors  inner products  invariant subspaces  spectral theorem  singular value decomposition determinants search engines web mining  introduction text search text representation search engine indexes information needs queries vector space retrieval model probabilistic retrieval models probabilistic retrieval models evaluating search effectiveness evaluating search effectiveness index construction index construction search log analysis search log analysis clustering clustering collaborative filtering  collaborative filtering text categorization text categorization text categorization text categorization learning rank learning rank significance tests link analysis link analysis query classification  federated search
 274 , 0 , search engines web mining  introduction text search text representation search engine indexes information needs queries vector space retrieval model probabilistic retrieval models probabilistic retrieval models evaluating search effectiveness evaluating search effectiveness index construction index construction search log analysis search log analysis clustering clustering collaborative filtering  collaborative filtering text categorization text categorization text categorization text categorization learning rank learning rank significance tests link analysis link analysis query classification  federated search linear algebra  abstract vector spaces  linear transformations  eigenvalues  eigenvectors  inner products  invariant subspaces  spectral theorem  singular value decomposition determinants
 275 , 1 , linear algebra  abstract vector spaces  linear transformations  eigenvalues  eigenvectors  inner products  invariant subspaces  spectral theorem  singular value decomposition determinants information retrieval introduction ad hoc search  boolean retrieval text representation search engine indexes evaluation  information needs queries retrieval models  vector space retrieval models  probabilistic models retrieval models  statistical language models retrieval models  inference networks index construction index construction federated vertical search     relevance feedback search log analysis search log analysis     document clustering  document clustering     collaborative filtering  collaborative filtering categorization categorization  logistic regression algorithms          convexity  regularization  categorization  svm  learning rank  pairwise constrained optimization  learning rank  list wise constrained optimization  link analysis  hits  pagerank     link analysis  personalized topic sensitive pagerank     principle component analysis singular value decomposition  large scale structured learning classification
 276 , 0 , information retrieval introduction ad hoc search  boolean retrieval text representation search engine indexes evaluation  information needs queries retrieval models  vector space retrieval models  probabilistic models retrieval models  statistical language models retrieval models  inference networks index construction index construction federated vertical search     relevance feedback search log analysis search log analysis     document clustering  document clustering     collaborative filtering  collaborative filtering categorization categorization  logistic regression algorithms          convexity  regularization  categorization  svm  learning rank  pairwise constrained optimization  learning rank  list wise constrained optimization  link analysis  hits  pagerank     link analysis  personalized topic sensitive pagerank     principle component analysis singular value decomposition  large scale structured learning classification linear algebra  abstract vector spaces  linear transformations  eigenvalues  eigenvectors  inner products  invariant subspaces  spectral theorem  singular value decomposition determinants
 277 , 1 , experimental design behavioral social sciences statistical theory  design principles  simple regression multiple regression ancova  two way anova power contrasts multiple testing repeated measures categorical outcomes mixed models statistical graphics visualization graph principles 1 d categorical data lab 2  1 d categorical data comparisons 1 d categorical 1 d continuous data lab 3  1 d categorical data  1 d continuous data 1 d continuous data 1 d continuous data lab 4  1 d continuous data 1 d continuous data comparisons 1 d continuous data lab 5  1 d continuous data 2 d categorical data 2 d categorical data  lab exam 1 out lab session  practice session review lab 6  2d categorical data 2 d continuous data 2 d densities  visualizing missingness longitudinal data  time series  trends time series  oscillations differences  lab 7  longitudinal data  time series 3 d data conditioning plots lab 8  3 d  conditioning high dimensional structure projections high d data lab 9  high dimensional structure  lab exam 2 out high dimensions
 278 , 0 , statistical graphics visualization graph principles 1 d categorical data lab 2  1 d categorical data comparisons 1 d categorical 1 d continuous data lab 3  1 d categorical data  1 d continuous data 1 d continuous data 1 d continuous data lab 4  1 d continuous data 1 d continuous data comparisons 1 d continuous data lab 5  1 d continuous data 2 d categorical data 2 d categorical data  lab exam 1 out lab session  practice session review lab 6  2d categorical data 2 d continuous data 2 d densities  visualizing missingness longitudinal data  time series  trends time series  oscillations differences  lab 7  longitudinal data  time series 3 d data conditioning plots lab 8  3 d  conditioning high dimensional structure projections high d data lab 9  high dimensional structure  lab exam 2 out high dimensions experimental design behavioral social sciences statistical theory  design principles  simple regression multiple regression ancova  two way anova power contrasts multiple testing repeated measures categorical outcomes mixed models
 279 , 1 , multivariate analysis  matrix algebra  vectors  matrices  systems equations  dot product  cross product  lines planes  optimization  partial derivatives  chain rule  gradient  unconstrained optimization  constrained optimization  lagrange multipliers kuhn tucker theorem   improper integrals  multiple integration  iterated integrals  probability applications  triple integrals  change variables probability theory random processes  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  limit theorems  introduction random processes some elementary ideas spectral analysis information theory will be given
 280 , 0 , probability theory random processes  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  limit theorems  introduction random processes some elementary ideas spectral analysis information theory will be given multivariate analysis  matrix algebra  vectors  matrices  systems equations  dot product  cross product  lines planes  optimization  partial derivatives  chain rule  gradient  unconstrained optimization  constrained optimization  lagrange multipliers kuhn tucker theorem   improper integrals  multiple integration  iterated integrals  probability applications  triple integrals  change variables
 281 , 1 , multivariate analysis  matrix algebra  vectors  matrices  systems equations  dot product  cross product  lines planes  optimization  partial derivatives  chain rule  gradient  unconstrained optimization  constrained optimization  lagrange multipliers kuhn tucker theorem   improper integrals  multiple integration  iterated integrals  probability applications  triple integrals  change variables  introduction probability theory  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  law large numbers  central limit theorem
 282 , 0 ,  introduction probability theory  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  law large numbers  central limit theorem multivariate analysis  matrix algebra  vectors  matrices  systems equations  dot product  cross product  lines planes  optimization  partial derivatives  chain rule  gradient  unconstrained optimization  constrained optimization  lagrange multipliers kuhn tucker theorem   improper integrals  multiple integration  iterated integrals  probability applications  triple integrals  change variables
 283 , 1 , calculus approximation indeterminate forms l hospital rule newton method sequences series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations
 284 , 0 ,  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations calculus approximation indeterminate forms l hospital rule newton method sequences series integral test estimates sums comparison tests alternating series absolute convergence ratio root tests strategy testing series power series representations functions power series taylor maclaurin series applications taylor polynomials
 285 , 1 , calculus approximation  indeterminate forms  newton method  taylor theorem including remainder  sequences  series  power series probability theory random processes  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  limit theorems  introduction random processes some elementary ideas spectral analysis information theory will be given
 286 , 0 , probability theory random processes  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  limit theorems  introduction random processes some elementary ideas spectral analysis information theory will be given calculus approximation  indeterminate forms  newton method  taylor theorem including remainder  sequences  series  power series
 287 , 1 , calculus approximation  indeterminate forms  newton method  taylor theorem including remainder  sequences  series  power series  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations
 288 , 0 ,  mathematical foundations electrical engineering  1 matlab robust computational tool  used reinforce  enrich integrate ideas throughout course  including software exercises combination homework assignments  2 complex analysis  including rectangular polar representations complex plane associated forms complex arithmetic  powers  roots complex logarithms  complex differentiation  analytic functions cauchy riemann equations  complex taylor series  complex exponential  sinusoidal hyperbolic functions  euler formula  3 fourier analysis  including orthogonality sinusoids  trigonometric exponential forms fourier series  fourier integrals fourier transforms  4 linear  constant coefficient differential equations  including complex exponential solutions homogeneous equations particular solutions polynomial sinusoidal driving functions described by phasors  5 difference equations  emphasis upon relationship differential equations   6 linear algebra matrices  including matrix arithmetic  linear systems equations gaussian elimination  vector spaces rank matrices  matrix inverses determinants  eigenvalue problems relationship systems homogeneous differential equations calculus approximation  indeterminate forms  newton method  taylor theorem including remainder  sequences  series  power series
 289 , 1 , calculus  nverse functions  definite indefinite integrals  hyperbolic functions  applications integration  integration by substitution by parts  partial derivatives lagrange multipliers probability theory random processes  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  limit theorems  introduction random processes some elementary ideas spectral analysis information theory will be given
 290 , 0 , probability theory random processes  elementary probability theory  conditional probability independence  random variables  distribution functions  joint conditional distributions  limit theorems  introduction random processes some elementary ideas spectral analysis information theory will be given calculus  nverse functions  definite indefinite integrals  hyperbolic functions  applications integration  integration by substitution by parts  partial derivatives lagrange multipliers
 291 , 1 , calculus  nverse functions  definite indefinite integrals  hyperbolic functions  applications integration  integration by substitution by parts  partial derivatives lagrange multipliers fundamentals statistical modeling  theory probability mathematical statistics probability models distribution theory  practice statistical inference based use maximum likelihood estimation  applications statistical modeling inference  using case studies drawn social  physical biomedical sciences
 292 , 0 , fundamentals statistical modeling  theory probability mathematical statistics probability models distribution theory  practice statistical inference based use maximum likelihood estimation  applications statistical modeling inference  using case studies drawn social  physical biomedical sciences calculus  nverse functions  definite indefinite integrals  hyperbolic functions  applications integration  integration by substitution by parts  partial derivatives lagrange multipliers
 293 , 1 , calculus  nverse functions  definite indefinite integrals  hyperbolic functions  applications integration  integration by substitution by parts  partial derivatives lagrange multipliers multivariate analysis  matrix algebra  vectors  matrices  systems equations  dot product  cross product  lines planes  optimization  partial derivatives  chain rule  gradient  unconstrained optimization  constrained optimization  lagrange multipliers kuhn tucker theorem   improper integrals  multiple integration  iterated integrals  probability applications  triple integrals  change variables
 294 , 0 , multivariate analysis  matrix algebra  vectors  matrices  systems equations  dot product  cross product  lines planes  optimization  partial derivatives  chain rule  gradient  unconstrained optimization  constrained optimization  lagrange multipliers kuhn tucker theorem   improper integrals  multiple integration  iterated integrals  probability applications  triple integrals  change variables calculus  nverse functions  definite indefinite integrals  hyperbolic functions  applications integration  integration by substitution by parts  partial derivatives lagrange multipliers
 295 , 1 , calculu functions graphs some important functions algebra functions zeros functions quadratic formula factoring exponents power functions functions graphs applications slope straight line slope curve point derivative limits derivative differentiability continuity some rules differentiation more about derivatives derivative rate change describing graphs functions first second derivative rules curve sketching  introduction  curve sketching  conclusion  optimization problems further optimization problems applications derivatives business economics product quotient rules chain rule general power rule implicit differentiation related rates exponential functions exponential function ex differentiation exponential functions natural logarithm function derivative ln x  properties natural logarithm function exponential growth decay compound interest applications natural logarithm function economics further exponential models calculus  nverse functions  definite indefinite integrals  hyperbolic functions  applications integration  integration by substitution by parts  partial derivatives lagrange multipliers
 296 , 0 , calculus  nverse functions  definite indefinite integrals  hyperbolic functions  applications integration  integration by substitution by parts  partial derivatives lagrange multipliers calculu functions graphs some important functions algebra functions zeros functions quadratic formula factoring exponents power functions functions graphs applications slope straight line slope curve point derivative limits derivative differentiability continuity some rules differentiation more about derivatives derivative rate change describing graphs functions first second derivative rules curve sketching  introduction  curve sketching  conclusion  optimization problems further optimization problems applications derivatives business economics product quotient rules chain rule general power rule implicit differentiation related rates exponential functions exponential function ex differentiation exponential functions natural logarithm function derivative ln x  properties natural logarithm function exponential growth decay compound interest applications natural logarithm function economics further exponential models
 297 , 1 , integration differential equation definite indefinite integrals  inverse functions  logarithmic  exponential  hyperbolic functions  applications integration  integration by substitution by parts  integration by trigonometric substitution partial fractions  arclength  improper integrals  simpson trapezoidal rules numerical integration  separable differential equations  first order linear differential equations  homogeneous second order linear differential equations constant coefficients calculus approximation  indeterminate forms  newton method  taylor theorem including remainder  sequences  series  power series
 298 , 0 , calculus approximation  indeterminate forms  newton method  taylor theorem including remainder  sequences  series  power series integration differential equation definite indefinite integrals  inverse functions  logarithmic  exponential  hyperbolic functions  applications integration  integration by substitution by parts  integration by trigonometric substitution partial fractions  arclength  improper integrals  simpson trapezoidal rules numerical integration  separable differential equations  first order linear differential equations  homogeneous second order linear differential equations constant coefficients
 299 , 1 , differential calculus  functions  limits  derivatives  curve sketching  mean value theorem  trigonometric functions  related rates  linear quadratic approximations  maximum minimum problems integration differential equation definite indefinite integrals  inverse functions  logarithmic  exponential  hyperbolic functions  applications integration  integration by substitution by parts  integration by trigonometric substitution partial fractions  arclength  improper integrals  simpson trapezoidal rules numerical integration  separable differential equations  first order linear differential equations  homogeneous second order linear differential equations constant coefficients
 300 , 0 , integration differential equation definite indefinite integrals  inverse functions  logarithmic  exponential  hyperbolic functions  applications integration  integration by substitution by parts  integration by trigonometric substitution partial fractions  arclength  improper integrals  simpson trapezoidal rules numerical integration  separable differential equations  first order linear differential equations  homogeneous second order linear differential equations constant coefficients differential calculus  functions  limits  derivatives  curve sketching  mean value theorem  trigonometric functions  related rates  linear quadratic approximations  maximum minimum problems
